Source URL: https://firebase.google.com/docs/auth/where-to-start?hl=ko
Title: Firebase 인증은 어디에서 시작하나요?
bookmark_border

의견 보내기

Firebase 인증은 어디에서 시작하나요?

bookmark_borderbookmark

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 페이지의 내용인증 시스템이 이미 있습니다 [https://firebase.google.com/docs/auth/where-to-start?hl=ko#custom-auth]Firebase로 인증 시스템을 구축하고 싶습니다 [https://firebase.google.com/docs/auth/where-to-start?hl=ko#new-apps]풍부한 사전 로그인 환경을 구축하고 싶습니다 [https://firebase.google.com/docs/auth/where-to-start?hl=ko#anonymous-auth]백엔드에서 Firebase 서비스에 액세스하고 싶습니다 [https://firebase.google.com/docs/auth/where-to-start?hl=ko#adminsdk]

인증 시스템이 이미 있습니다

앱에 이미 로그인이 구현되어 있고 이를 사용하여 Firebase 백엔드 서비스로 인증하려는 경우 커스텀 인증을 사용합니다. 여기에는 다음을 사용하는 앱이 포함됩니다.

커스텀 비밀번호 기반 시스템과 같은 커스텀 빌드 솔루션
Auth0 또는 Okta와 같은 서드 파티 ID 관리 서비스
Google, Facebook 또는 Apple과 같은 제휴 ID 공급업체와의 기존 통합 제휴 ID를 아직 지원하지 않지만 지원하고 싶은 경우 다음 섹션을 참조하세요.

커스텀 인증을 사용하면 개발자가 선택한 시스템으로 사용자를 로그인시키고 백엔드에서 사용자의 Firebase 토큰을 만든 다음 클라이언트의 토큰을 사용하여 Firebase로 인증할 수 있습니다.

iOS+ [https://firebase.google.com/docs/auth/ios/custom-auth?hl=ko],
Android [https://firebase.google.com/docs/auth/android/custom-auth?hl=ko],
웹 [https://firebase.google.com/docs/auth/web/custom-auth?hl=ko],
Flutter [https://firebase.google.com/docs/auth/flutter/custom-auth?hl=ko],
Unity [https://firebase.google.com/docs/auth/unity/custom-auth?hl=ko] 또는
C++ [https://firebase.google.com/docs/auth/cpp/custom-auth?hl=ko]용 문서를 참조하세요.

Firebase로 인증 시스템을 구축하고 싶습니다

새 앱을 빌드하거나 기존 앱에 로그인을 추가하는 경우 Firebase의 라이브러리와 서비스를 사용하면 인증 백엔드를 직접 빌드하지 않고도 보안 인증을 구현할 수 있습니다. Firebase Authentication은 비밀번호, 제휴 ID 공급업체, 이메일, SMS를 통한 로그인을 지원하는 완전한 백엔드 솔루션입니다.

사용하기 쉬운 삽입형 솔루션이 필요합니다

앱에 인증을 추가하는 가장 빠르고 쉬운 방법은 삽입형 UI 라이브러리인 FirebaseUI 인증을 사용하는 것입니다. FirebaseUI는 Firebase Authentication에서 지원하는 모든 로그인 방법에 대해 완전한 사용자 과정을 구현합니다.

FirebaseUI 인증은 삽입형 솔루션이므로 특정한 UX가 있으며 이 UX가 개발자의 니즈에 맞지 않을 수도 있습니다. UX를 변경하려면 오픈소스인 라이브러리를 가져와 자체 버전을 사용하면 됩니다. 하지만 로그인 과정이 상당히 다른 경우에는 다음 섹션에서 설명하는 것처럼 Firebase SDK로 자체 과정을 구현하는 것이 좋습니다.

iOS [https://firebase.google.com/docs/auth/ios/firebaseui?hl=ko], Android [https://firebase.google.com/docs/auth/android/firebaseui?hl=ko] 또는 웹 [https://firebase.google.com/docs/auth/web/firebaseui?hl=ko]용 FirebaseUI 인증 문서를 참조하세요.

로그인 환경을 완전하게 제어하고 싶습니다

앱의 로그인 환경을 더 세밀하게 제어하기 위해 자체 인증 과정을 구현하고 Firebase SDK를 사용하여 Firebase의 인증 서비스와 연동할 수 있습니다. 예를 들어 자체 이메일 주소와 비밀번호 과정 또는 Google 로그인 과정을 만들고 사용자의 이메일 주소와 비밀번호 또는 Google ID 토큰을 Firebase에 전달하여 사용자를 인증합니다.

Firebase Authentication SDK 문서를 참조하세요.

| Firebase 서비스 |
| --- |
| 이메일 주소 및 비밀번호 로그인 | iOS+ \| Android \| 웹 \| Flutter \| Unity \| C++ |
| 전화번호 로그인 | iOS+ \| Android \| 웹 \| Flutter \| Unity \| C++ |
| 이메일 링크 로그인 | iOS+ Android 웹 Flutter Unity C++ |
| 제휴 ID |
| Google | iOS+ Android 웹 Flutter Unity C++ |
| Facebook | iOS+ Android 웹 Flutter Unity C++ |
| Apple | iOS+ Android 웹 Flutter Unity C++ |
| Play 게임즈 | Android \| Unity \| C++ |
| Game Center | iOS+ |
| GitHub | iOS+ Android 웹 Flutter Unity C++ |
| Microsoft | iOS+ \| Android \| 웹 \| Unity \| C++ |
| Twitter | iOS+ Android 웹 Flutter Unity C++ |
| Yahoo | iOS+ \| Android \| 웹 \| Unity \| C++ |

풍부한 사전 로그인 환경을 구축하고 싶습니다

익명 인증을 사용하여 사용자가 실제로 로그인하기 전에 로그인 상태에서 제공되는 앱 기능을 사용하도록 설정할 수 있습니다. 익명 '로그인'을 사용하면 실제 계정처럼 사용할 수 있는 임시 단일 세션 계정이 생성됩니다. 그런 다음 사용자가 로그인하거나 가입한 후에 이어서 앱을 계속 사용할 수 있도록 임시 계정을 실제 계정에 연결합니다.

익명 인증은 커스텀 인증 또는 Firebase의 인증 서비스와 원활하게 연동됩니다.

iOS+ [https://firebase.google.com/docs/auth/ios/anonymous-auth?hl=ko],
Android [https://firebase.google.com/docs/auth/android/anonymous-auth?hl=ko],
웹 [https://firebase.google.com/docs/auth/web/anonymous-auth?hl=ko],
Flutter [https://firebase.google.com/docs/auth/flutter/anonymous-auth?hl=ko],
Unity [https://firebase.google.com/docs/auth/unity/anonymous-auth?hl=ko] 또는
C++ [https://firebase.google.com/docs/auth/cpp/anonymous-auth?hl=ko]용 문서를 참조하세요.

백엔드에서 Firebase 서비스에 액세스하고 싶습니다

서버에서 Firebase 서비스에 액세스하기 위해 Firebase Authentication을 사용할 필요가 없습니다. 대신 Admin SDK [https://firebase.google.com/docs/admin/setup?hl=ko]를 사용하세요. Admin SDK를 초기화할 때 서비스 계정 사용자 인증 정보로 인증합니다. 이 사용자 인증 정보는 특정 사용자가 아닌 Firebase 프로젝트를 나타내며 프로젝트 리소스에 대한 전체 액세스 권한을 부여합니다.

도움이 되었나요?

의견 보내기