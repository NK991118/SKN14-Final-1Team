Source URL: https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write?hl=ko
Title: Write
bookmark_border

Send feedback

Write

bookmark_borderbookmark

Stay organized with collections

Save and categorize content based on your preferences.

이 페이지의 내용DocumentTransform [https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write#documenttransform]FieldTransform [https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write#fieldtransform]ServerValue [https://cloud.google.com/firestore/docs/reference/rest/v1beta1/Write#servervalue]

A write on a document.

| JSON representation |
| --- |
| {   "updateMask": {     object (DocumentMask)   },   "updateTransforms": [     {       object (FieldTransform)     }   ],   "currentDocument": {     object (Precondition)   },    // Union field operation can be only one of the following:   "update": {     object (Document)   },   "delete": string,   "transform": {     object (DocumentTransform)   }   // End of list of possible types for union field operation. } |

| Fields |
| --- |
| updateMask | object (DocumentMask) The fields to update in this write. This field can be set only when the operation is update. If the mask is not set for an update and the document exists, any existing data will be overwritten. If the mask is set and the document on the server has fields not covered by the mask, they are left unchanged. Fields referenced in the mask, but not present in the input document, are deleted from the document on the server. The field paths in this mask must not contain a reserved field name. |
| updateTransforms[] | object (FieldTransform) The transforms to perform after update. This field can be set only when the operation is update. If present, this write is equivalent to performing update and transform to the same document atomically and in order. |
| currentDocument | object (Precondition) An optional precondition on the document. The write will fail if this is set and not met by the target document. |
| Union field operation. The operation to execute. operation can be only one of the following: |
| update | object (Document) A document to write. |
| delete | string A document name to delete. In the format: projects/{projectId}/databases/{databaseId}/documents/{document_path}. |
| transform | object (DocumentTransform) Applies a transformation to a document. |

DocumentTransform

A transformation of a document.

| JSON representation |
| --- |
| {   "document": string,   "fieldTransforms": [     {       object (FieldTransform)     }   ] } |

| Fields |
| --- |
| document | string The name of the document to transform. |
| fieldTransforms[] | object (FieldTransform) The list of transformations to apply to the fields of the document, in order. This must not be empty. |

FieldTransform

A transformation of a field of the document.

| JSON representation |
| --- |
| {   "fieldPath": string,    // Union field transform_type can be only one of the following:   "setToServerValue": enum (ServerValue),   "increment": {     object (Value)   },   "maximum": {     object (Value)   },   "minimum": {     object (Value)   },   "appendMissingElements": {     object (ArrayValue)   },   "removeAllFromArray": {     object (ArrayValue)   }   // End of list of possible types for union field transform_type. } |

| Fields |
| --- |
| fieldPath | string The path of the field. See Document.fields for the field path syntax reference. |
| Union field transform_type. The transformation to apply on the field. transform_type can be only one of the following: |
| setToServerValue | enum (ServerValue) Sets the field to the given server value. |
| increment | object (Value) Adds the given value to the field's current value. This must be an integer or a double value. If the field is not an integer or double, or if the field does not yet exist, the transformation will set the field to the given value. If either of the given value or the current field value are doubles, both values will be interpreted as doubles. Double arithmetic and representation of double values follow IEEE 754 semantics. If there is positive/negative integer overflow, the field is resolved to the largest magnitude positive/negative integer. |
| maximum | object (Value) Sets the field to the maximum of its current value and the given value. This must be an integer or a double value. If the field is not an integer or double, or if the field does not yet exist, the transformation will set the field to the given value. If a maximum operation is applied where the field and the input value are of mixed types (that is - one is an integer and one is a double) the field takes on the type of the larger operand. If the operands are equivalent (e.g. 3 and 3.0), the field does not change. 0, 0.0, and -0.0 are all zero. The maximum of a zero stored value and zero input value is always the stored value. The maximum of any numeric value x and NaN is NaN. |
| minimum | object (Value) Sets the field to the minimum of its current value and the given value. This must be an integer or a double value. If the field is not an integer or double, or if the field does not yet exist, the transformation will set the field to the input value. If a minimum operation is applied where the field and the input value are of mixed types (that is - one is an integer and one is a double) the field takes on the type of the smaller operand. If the operands are equivalent (e.g. 3 and 3.0), the field does not change. 0, 0.0, and -0.0 are all zero. The minimum of a zero stored value and zero input value is always the stored value. The minimum of any numeric value x and NaN is NaN. |
| appendMissingElements | object (ArrayValue) Append the given elements in order if they are not already present in the current field value. If the field is not an array, or if the field does not yet exist, it is first set to the empty array. Equivalent numbers of different types (e.g. 3L and 3.0) are considered equal when checking if a value is missing. NaN is equal to NaN, and Null is equal to Null. If the input contains multiple equivalent values, only the first will be considered. The corresponding transform_result will be the null value. |
| removeAllFromArray | object (ArrayValue) Remove all of the given elements from the array in the field. If the field is not an array, or if the field does not yet exist, it is set to the empty array. Equivalent numbers of the different types (e.g. 3L and 3.0) are considered equal when deciding whether an element should be removed. NaN is equal to NaN, and Null is equal to Null. This will remove all equivalent values if there are duplicates. The corresponding transform_result will be the null value. |

ServerValue

A value that is calculated by the server.

| Enums |
| --- |
| SERVER_VALUE_UNSPECIFIED | Unspecified. This value must not be used. |
| REQUEST_TIME | The time at which the server processed the request, with millisecond precision. If used on multiple fields (same or different documents) in a transaction, all the fields will get the same server timestamp. |

도움이 되었나요?

Send feedback