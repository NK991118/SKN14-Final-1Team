Source URL: https://firebase.google.com/docs/firestore/enterprise/understand-reads-writes-scale?hl=ko
Title: 대규모 읽기 및 쓰기 이해
bookmark_border

이제 MongoDB 호환성을 갖춘 Cloud Firestore Enterprise 버전을 사용할 수 있습니다. 자세히 알아보기 [https://firebase.google.com/docs/firestore/enterprise/mongodb-compatibility-overview?hl=ko]

의견 보내기

대규모 읽기 및 쓰기 이해

bookmark_borderbookmark

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

| Cloud Firestore Enterprise 버전에만 해당합니다. |
| --- |

이 문서를 참고하여 안정성 있는 고성능 애플리케이션 설계에 대해 정보에 입각한 결정을 내리세요. 이 문서에는 고급 Cloud Firestore 주제가 포함되어 있습니다. Cloud Firestore를 처음 사용하는 경우에는 빠른 시작 가이드 [https://firebase.google.com/docs/firestore/enterprise/create-and-query-database?hl=ko]를 참조하세요. 데이터베이스 크기와 트래픽 증가에 따라 애플리케이션이 계속 원활하게 작동하도록 하려면 Firestore 백엔드에서의 읽기 및 쓰기 방식을 이해하는 것이 도움이 됩니다. 또한 읽기 및 쓰기와 스토리지 레이어 간의 상호작용, 성능에 영향을 줄 수 있는 기본 제약조건을 이해해야 합니다.

애플리케이션을 설계하기 전에 몇 가지 권장사항을 알아보려면 다음을 참고하세요.

API 요청의 상위 구성요소 [https://cloud.google.com/firestore/mongodb-compatibility/docs/understand-reads-writes-scale?hl=ko#understand_the_high_level_components]를 이해합니다.
모든 쓰기 [https://cloud.google.com/firestore/mongodb-compatibility/docs/understand-reads-writes-scale?hl=ko#understand_the_life_of_a_write]는 ACID 속성을 보장하기 위해 읽기-쓰기 트랜잭션으로 처리됩니다. 쓰기에 여러 분할이 포함되는 경우 2단계 커밋 프로세스가 필요할 수 있습니다.
읽기 [https://cloud.google.com/firestore/mongodb-compatibility/docs/understand-reads-writes-scale?hl=ko#understand_the_life_of_a_read]는 기본적으로 'strong consistency'를 유지하며 잠금을 방지하기 위해 타임스탬프 기반 접근 방식을 사용합니다.
높은 성능을 유지하려면 키 범위에 작업을 분산하고 트랜잭션을 작게 유지하여 핫스팟을 방지 [https://cloud.google.com/firestore/mongodb-compatibility/docs/understand-reads-writes-scale?hl=ko#avoid_hotspots]해야 합니다.

의견 보내기