Source URL: https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox

BigQuery [https://cloud.google.com/bigquery?hl=ko]
Documentation [https://cloud.google.com/bigquery/docs?hl=ko]
가이드 [https://cloud.google.com/bigquery/docs/introduction?hl=ko]
도움이 되었나요?
의견 보내기
이 페이지의 내용
시작하기 전에 [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#begin]
MCP Toolbox 설치 [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#install]
MCP 클라이언트 구성 [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#configure-your-mcp-client]
도구 사용하기 [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#use_the_tools]
MCP Toolbox를 사용하여 IDE를 BigQuery에 연결
bookmark_border
이 가이드에서는 데이터베이스용 MCP Toolbox [https://github.com/googleapis/genai-toolbox]를 사용하여 BigQuery 인스턴스를 다양한 통합 개발 환경(IDE) 및 개발자 도구에 연결하는 방법을 설명합니다. 대규모 언어 모델(LLM)을 BigQuery와 같은 데이터 소스에 연결하기 위한 개방형 프로토콜인 모델 컨텍스트 프로토콜(MCP) [https://modelcontextprotocol.io/introduction]을 사용하므로 기존 도구에서 직접 SQL 쿼리를 실행하고 프로젝트와 상호작용할 수 있습니다.
이 가이드에서는 다음 IDE의 연결 프로세스를 보여줍니다.
Cursor [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#configure-your-mcp-client]
Windsurf [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#configure-your-mcp-client](이전 명칭: Codeium)
Visual Studio Code [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#configure-your-mcp-client](Copilot)
Cline [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#configure-your-mcp-client](VS Code 확장 프로그램)
Claude desktop [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#configure-your-mcp-client]
Claude 코드 [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#configure-your-mcp-client]
시작하기 전에
Google Cloud 콘솔의 프로젝트 선택기 페이지 [https://console.cloud.google.com/projectselector2/home/dashboard?hl=ko]에서 Google Cloud 프로젝트를 선택하거나 만듭니다.
Google Cloud 프로젝트에 결제가 사용 설정되어 있는지 확인합니다. [https://cloud.google.com/billing/docs/how-to/verify-billing-enabled?hl=ko#confirm_billing_is_enabled_on_a_project]
Google Cloud 프로젝트에서 BigQuery API를 사용 설정합니다 [https://console.cloud.google.com/flows/enableapi?apiid=bigquery.googleapis.com&%3Bredirect=https%3A%2F%2Fconsole.cloud.google.com&hl=ko].
이 태스크를 완료하는 데 필요한 역할과 권한을 구성합니다. 인스턴스에 연결하려면 BigQuery 사용자 [https://cloud.google.com/bigquery/docs/access-control?hl=ko] 역할(roles/bigquery.user), BigQuery 데이터 뷰어 역할(roles/bigquery.dataViewer) 또는 이에 상응하는 IAM 권한이 필요합니다.
환경에 애플리케이션 기본 사용자 인증 정보(ADC) [https://cloud.google.com/docs/authentication/set-up-adc-local-dev-environment?hl=ko]를 구성합니다.
MCP Toolbox 설치
MCP Toolbox의 최신 버전을 바이너리로 다운로드합니다. 운영체제(OS) 및 CPU 아키텍처에 해당하는 바이너리 [https://github.com/googleapis/genai-toolbox/releases]를 선택합니다. MCP Toolbox 버전 V0.7.0 이상을 사용해야 합니다.
--- 탭: linux/amd64 [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#linuxamd64] ---
curl -O https://storage.googleapis.com/genai-toolbox/VERSION/linux/amd64/toolbox

VERSION을 MCP Toolbox 버전(예: v0.7.0)으로 바꿉니다.

--- 탭: macOS darwin/arm64 [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#macos-darwinarm64] ---
curl -O https://storage.googleapis.com/genai-toolbox/VERSION/darwin/arm64/toolbox

VERSION을 MCP Toolbox 버전(예: v0.7.0)으로 바꿉니다.

--- 탭: macOS darwin/amd64 [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#macos-darwinamd64] ---
curl -O https://storage.googleapis.com/genai-toolbox/VERSION/darwin/amd64/toolbox

VERSION을 MCP Toolbox 버전(예: v0.7.0)으로 바꿉니다.

--- 탭: windows/amd64 [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#windowsamd64] ---
curl -O https://storage.googleapis.com/genai-toolbox/VERSION/windows/amd64/toolbox

VERSION을 MCP Toolbox 버전(예: v0.7.0)으로 바꿉니다.
바이너리를 실행 가능하게 만듭니다.
chmod +x toolbox
설치를 확인합니다.
./toolbox --version
MCP 클라이언트 구성
--- 탭: Claude 코드 [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#claude-%EC%BD%94%EB%93%9C] ---
1.  Claude Code [https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview]를 설치합니다. 
2.  프로젝트 루트에 .mcp.json 파일이 없으면 만듭니다. 
3.  구성을 추가하고 환경 변수를 값으로 바꾸고 저장합니다. 

{
  "mcpServers": {
    "bigquery": {
      "command": "./PATH/TO/toolbox",
      "args": ["--prebuilt","bigquery","--stdio"],
      "env": {
        "BIGQUERY_PROJECT": "PROJECT_ID"
      }
    }
  }
}

--- 탭: Claude Desktop [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#claude-desktop] ---
1.  Claude Desktop [https://claude.ai/download]을 열고 설정으로 이동합니다. 
2.  개발자 탭에서 구성 수정을 클릭하여 구성 파일을 엽니다. 
3.  구성을 추가하고 환경 변수를 값으로 바꾸고 저장합니다. 

{
  "mcpServers": {
    "bigquery": {
      "command": "./PATH/TO/toolbox",
      "args": ["--prebuilt","bigquery","--stdio"],
      "env": {
        "BIGQUERY_PROJECT": "PROJECT_ID"
      }
    }
  }
}


4.  Claude Desktop을 다시 시작합니다. 
5.  새 채팅 화면에 새 MCP 서버와 함께 망치(MCP) 아이콘이 표시됩니다.

--- 탭: Cline [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#cline] ---
1.  VS Code에서 Cline [https://github.com/cline/cline] 확장 프로그램을 열고 MCP Servers 아이콘을 탭합니다. 
2.  MCP 서버 구성을 탭하여 구성 파일을 엽니다. 
3.  다음 구성을 추가하고 환경 변수를 값으로 바꾸고 저장합니다. 

{
  "mcpServers": {
    "bigquery": {
      "command": "./PATH/TO/toolbox",
      "args": ["--prebuilt","bigquery","--stdio"],
      "env": {
        "BIGQUERY_PROJECT": "PROJECT_ID"
      }
    }
  }
}


서버가 성공적으로 연결되면 녹색 활성 상태가 표시됩니다.

--- 탭: Cursor [https://cloud.google.com/bigquery/docs/pre-built-tools-with-mcp-toolbox?hl=ko#cursor] ---
1.  프로젝트 루트에 .cursor 디렉터리가 없으면 만듭니다. 
2.  .cursor/mcp.json 파일이 없으면 만들고 엽니다.
3.  다음 구성을 추가하고 환경 변수를 값으로 바꾸고 저장합니다.

{
  "mcpServers": {
    "bigquery": {
      "command": "./PATH/TO/toolbox",
      "args": ["--prebuilt","bigquery","--stdio"],
      "env": {
        "BIGQUERY_PROJECT": "PROJECT_ID"
      }
    }
  }
}


4. 커서 [https://www.cursor.com/]를 열고 설정 > 커서 설정 > MCP로 이동합니다. 서버가 연결되면 녹색 활성 상태가 표시됩니다.

--- 탭: tabpanel-visual-studio-codecopilot ---
1.  VS Code [https://code.visualstudio.com/docs/copilot/overview]를 열고 프로젝트 루트에 .vscode 디렉터리가 없으면 만듭니다. 
2.  .vscode/mcp.json 파일이 없으면 만들고 엽니다. 
3.  다음 구성을 추가하고 환경 변수를 값으로 바꾸고 저장합니다. 

{
  "servers": {
    "bigquery": {
      "command": "./PATH/TO/toolbox",
      "args": ["--prebuilt","bigquery","--stdio"],
      "env": {
        "BIGQUERY_PROJECT": "PROJECT_ID"
      }
    }
  }
}

--- 탭: tabpanel-windsurf ---
1.  Windsurf [https://docs.codeium.com/windsurf]를 열고 Cascade 어시스턴트로 이동합니다. 
2.  MCP 아이콘을 클릭한 다음 구성을 클릭하여 구성 파일을 엽니다. 
3.  다음 구성을 추가하고 환경 변수를 값으로 바꾸고 저장합니다. 

{
  "mcpServers": {
    "bigquery": {
      "command": "./PATH/TO/toolbox",
      "args": ["--prebuilt","bigquery","--stdio"],
      "env": {
        "BIGQUERY_PROJECT": "PROJECT_ID"
      }
    }
  }
}




































도구 사용하기
이제 AI 도구가 MCP를 사용하여 BigQuery에 연결되었습니다. AI 어시스턴트에게 표를 나열하거나, 표를 만들거나, 다른 SQL 문을 정의하고 실행하도록 요청해 보세요.
LLM은 다음 도구를 사용할 수 있습니다.
execute_sql: SQL 문 실행하기
get_dataset_info: 데이터 세트 메타데이터 가져오기
get_table_info: 테이블 메타데이터 가져오기
list_dataset_ids: 데이터 세트 나열하기
list_table_ids: 테이블 나열하기
참고: 사전 빌드된 도구는 1.0 미만이므로 버전 간에 도구가 다소 변경될 수 있습니다. LLM은 사용 가능한 도구에 맞게 조정되므로 대부분의 사용자에게는 영향을 미치지 않습니다.
도움이 되었나요?
의견 보내기