Source URL: https://cloud.google.com/bigquery/docs/analyze-multimodal-data

이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.
Switch to English
BigQuery [https://cloud.google.com/bigquery?hl=ko]
Documentation [https://cloud.google.com/bigquery/docs?hl=ko]
가이드 [https://cloud.google.com/bigquery/docs/introduction?hl=ko]
도움이 되었나요?
의견 보내기
이 페이지의 내용
이점 [https://cloud.google.com/bigquery/docs/analyze-multimodal-data?hl=ko#benefits]
값 ObjectRef개 [https://cloud.google.com/bigquery/docs/analyze-multimodal-data?hl=ko#objectref_values]
값 ObjectRefRuntime개 [https://cloud.google.com/bigquery/docs/analyze-multimodal-data?hl=ko#objectrefruntime_values]
생성형 AI 함수 [https://cloud.google.com/bigquery/docs/analyze-multimodal-data?hl=ko#generative_ai_functions]
Python에서 멀티모달 데이터 작업 [https://cloud.google.com/bigquery/docs/analyze-multimodal-data?hl=ko#work_with_multimodal_data_in_python]
BigQuery에서 멀티모달 데이터 분석
bookmark_border
프리뷰
이 기능에는 서비스별 약관 [https://cloud.google.com/terms/service-terms?hl=ko#1]의 일반 서비스 약관 섹션에 있는 'GA 이전 제공 서비스 약관'이 적용됩니다. GA 이전 기능은 '있는 그대로' 제공되며 지원이 제한될 수 있습니다. 자세한 내용은 출시 단계 설명 [https://cloud.google.com/products?hl=ko#product-launch-stages]을 참조하세요.
참고: 이 기능에 대한 의견을 제공하거나 지원을 요청하려면 bq-objectref-feedback@google.com [mailto:bq-objectref-feedback@google.com]으로 이메일을 보내세요.
이 문서에서는 멀티모달 데이터를 분석하는 데 사용할 수 있는 BigQuery 기능을 설명합니다. 일부 기능은Google Cloud 콘솔 및 bq 명령줄 도구에서 사용할 수 있고, 다른 기능은 Python에서 BigQuery DataFrames [https://cloud.google.com/bigquery/docs/bigquery-dataframes-introduction?hl=ko]를 사용하여 사용할 수 있습니다. 이러한 기능을 함께 사용하여 멀티모달 데이터의 분석 및 변환 워크플로를 더 쉽게 사용할 수 있습니다.
BigQuery의 멀티모달 데이터 기능을 사용하면 다음 작업을 할 수 있습니다.
ObjectRef [https://cloud.google.com/bigquery/docs/analyze-multimodal-data?hl=ko#objectref_values] 값을 사용하여 비정형 데이터를 표준 테이블에 통합합니다.
ObjectRefRuntime [https://cloud.google.com/bigquery/docs/analyze-multimodal-data?hl=ko#objectrefruntime_values] 값을 사용하여 분석 및 변환 워크플로에서 비정형 데이터를 사용합니다.
Gemini 모델과 함께 BigQuery ML 생성형 AI 함수 [https://cloud.google.com/bigquery/docs/analyze-multimodal-data?hl=ko#generative_ai_functions]를 사용하여 멀티모달 데이터에서 텍스트, 임베딩, 스칼라 값을 생성합니다.
BigQuery DataFrames에서 멀티모달 DataFrames를 만듭니다 [https://cloud.google.com/bigquery/docs/analyze-multimodal-data?hl=ko#multimodal_dataframes].
BigQuery DataFrames Series.BlobAccessor 메서드를 사용하여 이미지를 변환하고 PDF 파일을 청크로 분할 [https://cloud.google.com/bigquery/docs/analyze-multimodal-data?hl=ko#object_transformation_methods]합니다.
BigQuery DataFrames 생성형 AI 메서드 [https://cloud.google.com/bigquery/docs/analyze-multimodal-data?hl=ko#generative_ai_methods]를 사용하여 멀티모달 데이터에서 텍스트와 임베딩을 생성합니다.
Google Cloud 콘솔을 사용하는 단계별 튜토리얼은 SQL로 멀티모달 데이터 분석 [https://cloud.google.com/bigquery/docs/multimodal-data-sql-tutorial?hl=ko]을 참고하세요. Python에서 BigQuery DataFrames를 사용하는 단계별 튜토리얼은 BigQuery DataFrames로 Python에서 멀티모달 데이터 분석 [https://cloud.google.com/bigquery/docs/multimodal-data-dataframes-tutorial?hl=ko]을 참고하세요.
이점
BigQuery의 멀티모달 데이터 기능은 다음과 같은 이점을 제공합니다.
구성 가능성: ObjectRef 값을 사용하여 구조화된 데이터와 구조화되지 않은 데이터를 동일한 표준 테이블 행에 저장하고 관리할 수 있습니다. 예를 들어 제품 이미지를 나머지 제품 정보와 동일한 행에 저장할 수 있습니다. 표준 SQL 함수를 사용하여 ObjectRef 값이 포함된 열을 만들고 업데이트할 수 있으며, 객체에 대한 변환 작업의 출력으로 ObjectRef 값을 만들 수 있습니다.
생성형 AI 프롬프트에서 객체 데이터 사용: ObjectRefRuntime 값을 생성형 AI 함수의 입력으로 사용합니다. 예를 들어 동일한 테이블의 이미지 및 텍스트 데이터에 대한 임베딩을 생성할 수 있습니다. 텍스트 및 스칼라 값 생성의 경우 모델에 전송하는 프롬프트 내에서 여러 객체를 참조할 수도 있습니다. 예를 들어 모델에 동물의 두 이미지를 비교한 후 동일한 유형의 동물이 표시되는지 여부를 나타내는 텍스트를 반환하도록 요청하는 프롬프트를 만들 수 있습니다.
청크 순서 유지: 객체를 청크로 나눈 다음 순서를 유지하기 위해 표준 테이블 열에 ObjectRef 값의 배열로 청크를 저장할 수 있습니다. 예를 들어 동영상에서 이미지를 파싱한 다음 이러한 이미지를 ObjectRef 값의 배열로 저장하여 이미지가 원본 동영상에 표시되는 순서를 유지할 수 있습니다.
값 ObjectRef개
ObjectRef 값은 ObjectRef 형식 [https://cloud.google.com/bigquery/docs/reference/standard-sql/objectref_functions?hl=ko#objectref]을 사용하는 STRUCT 값입니다. 이 형식을 사용하는 STRUCT 또는 ARRAY<STRUCT> 열을 만들어 BigQuery 표준 테이블 [https://cloud.google.com/bigquery/docs/tables-intro?hl=ko#standard_tables]에 Cloud Storage 객체 메타데이터와 연결된 승인자를 저장할 수 있습니다. 인증자 값은 BigQuery가 Cloud Storage 객체에 액세스하는 데 사용하는 Cloud 리소스 연결 [https://cloud.google.com/bigquery/docs/create-cloud-resource-connection?hl=ko]을 식별합니다.
구조화되지 않은 데이터를 표준 테이블에 통합해야 하는 경우 ObjectRef 값을 사용합니다. 예를 들어 제품 테이블에서 ObjectRef 값이 포함된 열을 추가하여 제품 이미지와 나머지 제품 정보를 동일한 행에 저장할 수 있습니다.
다음 GoogleSQL 함수를 사용하여 ObjectRef 값을 만들고 업데이트합니다.
OBJ.MAKE_REF [https://cloud.google.com/bigquery/docs/reference/standard-sql/objectref_functions?hl=ko#objmake_ref]: Cloud Storage 객체의 메타데이터가 포함된 ObjectRef 값을 만듭니다.
OBJ.FETCH_METADATA [https://cloud.google.com/bigquery/docs/reference/standard-sql/objectref_functions?hl=ko#objfetch_metadata]: uri 및 authorizer 값으로 부분적으로 채워진 ObjectRef 값의 Cloud Storage 메타데이터를 가져옵니다.
자세한 내용은 테이블 스키마에서 ObjectRef 열 지정 [https://cloud.google.com/bigquery/docs/objectref-columns?hl=ko]을 참고하세요.
값 ObjectRefRuntime개
ObjectRefRuntime 값은 ObjectRefRuntime 스키마 [https://cloud.google.com/bigquery/docs/reference/standard-sql/objectref_functions?hl=ko#objectrefruntime]를 사용하는 JSON 값입니다. ObjectRefRuntime 값에는 이를 만드는 데 사용된 ObjectRef 값의 Cloud Storage 객체 메타데이터, 연결된 승인자, 액세스 URL이 포함됩니다. 액세스 URL을 사용하여 Cloud Storage에서 객체를 읽거나 수정할 수 있습니다.
ObjectRefRuntime 값을 사용하여 분석 및 변환 워크플로에서 객체 데이터를 처리합니다. ObjectRefRuntime 값의 액세스 URL은 최대 6시간 후에 만료되지만 더 짧은 만료 시간을 구성할 수 있습니다. 워크플로의 일부로 ObjectRefRuntime 값을 어디에나 유지하는 경우 이 데이터를 정기적으로 새로고침해야 합니다. 객체 메타데이터를 유지하려면 대신 ObjectRef 값을 저장한 다음 필요할 때 이를 사용하여 ObjectRefRuntime 값을 생성합니다. Cloud Storage의 기본 객체가 수정되지 않는 한 ObjectRef 값을 새로고침할 필요가 없습니다.
OBJ.GET_ACCESS_URL 함수 [https://cloud.google.com/bigquery/docs/reference/standard-sql/objectref_functions?hl=ko#objget_access_url]를 사용하여 ObjectRefRuntime 값을 만듭니다.
생성형 AI 함수
Gemini 모델과 함께 다음 생성형 AI 함수를 사용하여 ObjectRefRuntime 입력을 기반으로 텍스트, 임베딩, 스칼라 값을 생성합니다.
ML.GENERATE_TEXT [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-generate-text?hl=ko]
AI.GENERATE_TABLE [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-generate-table?hl=ko]
AI.GENERATE [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-ai-generate?hl=ko]
AI.GENERATE_BOOL [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-ai-generate-bool?hl=ko]
AI.GENERATE_DOUBLE [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-ai-generate-double?hl=ko]
AI.GENERATE_INT [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-ai-generate-int?hl=ko]
ML.GENERATE_EMBEDDING [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-generate-embedding?hl=ko]
ML.GENERATE_EMBEDDING를 제외한 모든 함수에 ObjectRefRuntime 값을 단일 값 또는 배열로 제공할 수 있습니다. ML.GENERATE_EMBEDDING는 단일 값만 허용합니다.
Python에서 멀티모달 데이터 작업
BigQuery DataFrames 클래스와 메서드를 사용하여 Python에서 멀티모달 데이터를 분석할 수 있습니다.
멀티모달 DataFrames
다음 Session [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.session.Session?hl=ko] 메서드를 사용하여 정형 데이터와 비정형 데이터를 통합하는 멀티모달 DataFrame을 만듭니다.
from_glob_path 메서드 [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.session.Session?hl=ko#bigframes_session_Session_from_glob_path]: Cloud Storage 버킷에서 멀티모달 DataFrame을 만듭니다.
read_gbq_object_table 메서드 [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.session.Session?hl=ko#bigframes_session_Session_read_gbq_object_table]: 객체 테이블에서 멀티모달 DataFrame을 만듭니다.
객체 변환 메서드
다음 Series.BlobAccessor [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.operations.blob.BlobAccessor?hl=ko] 메서드를 사용하여 객체 데이터를 변환합니다.
pdf_chunk 메서드 [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.operations.blob.BlobAccessor?hl=ko#bigframes_operations_blob_BlobAccessor_pdf_chunk]: 멀티모달 DataFrame에서 PDF 객체를 청크합니다.
멀티모달 DataFrame에서 이미지 객체를 변환하는 방법은 다음과 같습니다.
image_blur [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.operations.blob.BlobAccessor?hl=ko#bigframes_operations_blob_BlobAccessor_image_blur]
image_normalize [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.operations.blob.BlobAccessor?hl=ko#bigframes_operations_blob_BlobAccessor_image_normalize]
image_resize [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.operations.blob.BlobAccessor?hl=ko#bigframes_operations_blob_BlobAccessor_image_resize]
생성형 AI 방법
다음 메서드를 사용하여 멀티모달 데이터에 생성형 AI 작업을 실행합니다.
GeminiTextGenerator 클래스 [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.ml.llm.GeminiTextGenerator?hl=ko]의 predict 메서드 [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.ml.llm.GeminiTextGenerator?hl=ko#bigframes_ml_llm_GeminiTextGenerator_predict]: 멀티모달 데이터를 기반으로 텍스트를 생성합니다.
MultimodalEmbeddingGenerator 클래스 [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.ml.llm.MultimodalEmbeddingGenerator?hl=ko]의 predict 메서드 [https://cloud.google.com/python/docs/reference/bigframes/latest/bigframes.ml.llm.MultimodalEmbeddingGenerator?hl=ko#bigframes_ml_llm_MultimodalEmbeddingGenerator_predict]: 멀티모달 데이터를 기반으로 임베딩을 생성합니다.
객체 테이블
멀티모달 데이터 미리보기 허용 목록에 있는 경우 생성하는 모든 새 객체 테이블 [https://cloud.google.com/bigquery/docs/object-table-introduction?hl=ko]에는 지정된 객체의 ObjectRef 값을 포함하는 ref 열이 있습니다. 객체 테이블을 만드는 데 사용되는 연결은 ref 열에 authorizer 값을 입력하는 데 사용됩니다. ref 열을 사용하여 표준 테이블에서 ObjectRef 값을 채우고 새로고침할 수 있습니다.
제한사항
BigQuery 멀티모달 데이터 기능에는 다음 제한사항이 적용됩니다.
ObjectRef 값을 참조하는 쿼리는 ObjectRef 값을 포함하는 테이블과 동일한 프로젝트에서 실행해야 합니다.
ObjectRef 또는 ObjectRefRuntime 값을 참조하는 쿼리를 실행하는 프로젝트 및 리전에는 20개 이상의 연결이 있을 수 없습니다. 예를 들어 myproject에서 asia-east1의 쿼리를 실행하는 경우 myproject에서 asia-east1의 연결은 20개를 초과할 수 없습니다.
비용
멀티모달 데이터를 사용할 때는 다음 비용이 적용됩니다.
표준 테이블에 객체 메타데이터를 ObjectRef 값으로 저장하면 테이블의 BigQuery 스토리지 비용이 발생합니다.
ObjectRef 값에서 실행되는 쿼리에는 BigQuery 컴퓨팅 비용이 발생합니다.
객체 변환으로 만든 새 객체에는 Cloud Storage 비용이 발생합니다.
BigQuery에서 생성하고 유지하는 새 데이터에는 BigQuery 스토리지 비용이 발생합니다.
생성형 AI 기능을 사용하면 Vertex AI 비용이 발생합니다.
BigQuery Python UDF와 BigQuery DataFrames의 멀티모달 DataFrame 및 객체 변환 메서드를 사용하면 Python UDF 비용이 발생합니다.
자세한 내용은 다음 가격 책정 페이지를 참고하세요.
BigQuery 가격 책정 [https://cloud.google.com/bigquery/pricing?hl=ko]
BigQuery Python UDF 가격 책정 [https://cloud.google.com/bigquery/docs/user-defined-functions-python?hl=ko#pricing]
Vertex AI 가격 책정 [https://cloud.google.com/vertex-ai/generative-ai/pricing?hl=ko]
Cloud Storage 가격 책정 [https://cloud.google.com/storage/pricing?hl=ko]
다음 단계
테이블 스키마에 ObjectRef 열 지정 [https://cloud.google.com/bigquery/docs/objectref-columns?hl=ko]
SQL로 멀티모달 데이터 분석 [https://cloud.google.com/bigquery/docs/multimodal-data-sql-tutorial?hl=ko]
BigQuery DataFrames를 사용하여 Python에서 멀티모달 데이터 분석 [https://cloud.google.com/bigquery/docs/multimodal-data-dataframes-tutorial?hl=ko]
BigQuery ML의 생성형 AI [https://cloud.google.com/bigquery/docs/generative-ai-overview?hl=ko]에 대해 자세히 알아보세요.
BigQuery DataFrames [https://cloud.google.com/bigquery/docs/bigquery-dataframes-introduction?hl=ko]에 대해 자세히 알아보세요.
도움이 되었나요?
의견 보내기