Source URL: https://cloud.google.com/bigquery/docs/adding-labels

BigQuery [https://cloud.google.com/bigquery?hl=ko]
Documentation [https://cloud.google.com/bigquery/docs?hl=ko]
가이드 [https://cloud.google.com/bigquery/docs/introduction?hl=ko]
도움이 되었나요?
의견 보내기
이 페이지의 내용
시작하기 전에 [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#before_you_begin]
데이터 세트에 라벨 추가 [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#adding_dataset_labels]
필요한 IAM 역할 [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#dataset-iam-roles]
데이터 세트에 라벨 추가 [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#adding_a_label_to_a_dataset]
테이블 및 뷰에 라벨 추가 [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#adding_table_and_view_labels]
필요한 IAM 역할 [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#table-view-iam-roles]
테이블 또는 뷰에 라벨 추가 [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#adding_a_label_to_a_table_or_view]
작업에 라벨 추가 [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#job-label]
리소스에 라벨 추가
bookmark_border
이 페이지에서는 BigQuery 리소스에 라벨을 지정하는 방법을 설명합니다.
시작하기 전에
사용자에게 이 문서의 각 작업을 수행하는 데 필요한 권한을 부여하는 Identity and Access Management(IAM) 역할을 부여합니다. 태스크를 수행하는 데 필요한 모든 권한이 태스크의 '필요한 IAM 역할' 섹션에 나열됩니다.
데이터 세트에 라벨 추가
bq 명령줄 도구의 bq mk 명령어를 사용하거나 datasets.insert [https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets/insert?hl=ko] API 메서드를 호출하여 BigQuery 데이터 세트를 만들 때 여기에 라벨을 추가할 수 있습니다. Google Cloud 콘솔을 사용하여 데이터 세트를 만들 때 여기에 라벨을 추가할 수 없습니다.
이 페이지에서는 데이터 세트가 만들어진 후 라벨을 추가하는 방법에 대해 설명합니다. 데이터 세트를 만들 때 라벨을 추가하는 방법에 대한 자세한 내용은 데이터 세트 만들기 [https://cloud.google.com/bigquery/docs/datasets?hl=ko]를 참조하세요.
데이터 세트에 라벨을 추가할 때, 라벨이 데이터 세트 내의 리소스로 전파되지는 않습니다. 데이터 세트 라벨은 테이블 또는 뷰에 상속되지 않습니다. 또한 데이터 세트에 라벨을 추가하면 스토리지 결제 데이터에 포함되지만 작업 관련 결제 데이터에는 포함되지 않습니다.
라벨 형식에 대한 자세한 내용은 라벨 요구사항 [https://cloud.google.com/bigquery/docs/labels-intro?hl=ko#requirements]을 참조하세요.
필요한 IAM 역할
기존 데이터 세트에 라벨을 추가하는 데 필요한 권한을 얻으려면 관리자에게 BigQuery 데이터 편집자 [https://cloud.google.com/iam/docs/roles-permissions/bigquery?hl=ko#bigquery.dataEditor](roles/bigquery.dataEditor) IAM 역할을 부여해 달라고 요청하세요. 역할 부여에 대한 자세한 내용은 프로젝트, 폴더, 조직에 대한 액세스 관리 [https://cloud.google.com/iam/docs/granting-changing-revoking-access?hl=ko]를 참조하세요.
이 사전 정의된 역할에는 기존 데이터 세트에 라벨을 추가하는 데 필요한 bigquery.datasets.update 권한이 포함되어 있습니다.
커스텀 역할 [https://cloud.google.com/iam/docs/creating-custom-roles?hl=ko]이나 다른 사전 정의된 역할 [https://cloud.google.com/iam/docs/roles-overview?hl=ko#predefined]을 사용하여 이 권한을 부여받을 수도 있습니다.
BigQuery의 IAM 역할과 권한에 대한 자세한 내용은 사전 정의된 역할 및 권한 [https://cloud.google.com/bigquery/docs/access-control?hl=ko]을 참조하세요.
데이터 세트에 라벨 추가
데이터 세트가 만들어진 후 데이터 세트에 라벨을 추가하려면 다음 안내를 따르세요.
--- 탭: 콘솔 [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#%EC%BD%98%EC%86%94] ---
Google Cloud 콘솔에서 데이터 세트를 선택합니다.
데이터세트 세부정보 페이지에서 라벨 오른쪽에 있는 연필 아이콘을 클릭합니다.


 

라벨 수정 대화상자에서 다음을 수행합니다.


라벨 추가를 클릭합니다.
키와 값을 입력합니다. 추가 라벨을 적용하려면 라벨 추가를 클릭합니다. 각 키는 데이터 세트당 한 번만 사용할 수 있지만 동일한 프로젝트의 여러 데이터 세트에 동일한 키를 사용할 수 있습니다.
라벨을 업데이트하려면 기존 키나 값을 수정합니다.
변경사항을 저장하려면 업데이트를 클릭합니다.

--- 탭: SQL [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#sql] ---
기존 데이터 세트의 라벨을 설정하려면 ALTER SCHEMA SET OPTIONS DDL 문 [https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language?hl=ko#alter_schema_set_options_statement]을 사용합니다. 라벨을 설정하면 데이터 세트의 기존 라벨을 덮어씁니다. 다음 예시에서는 mydataset 데이터 세트에 라벨을 설정합니다.




 Google Cloud 콘솔에서 BigQuery 페이지로 이동합니다.

BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko] 
쿼리 편집기에서 다음 문을 입력합니다.

ALTER SCHEMA mydataset
SET OPTIONS (
  labels = [('sensitivity', 'high')]);


play_circle 실행을 클릭합니다.




쿼리를 실행하는 방법에 대한 자세한 내용은 대화형 쿼리 실행 [https://cloud.google.com/bigquery/docs/running-queries?hl=ko#queries]을 참조하세요.

--- 탭: bq [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#bq] ---
기존 데이터 세트에 라벨을 추가하려면 bq update 명령어를 set_label 플래그와 함께 실행합니다. 여러 개의 라벨을 추가하려면 플래그를 반복합니다.

데이터 세트가 기본 프로젝트 이외의 프로젝트에 있으면 PROJECT_ID:DATASET 형식으로 데이터 세트에 프로젝트 ID를 추가합니다.

bq update --set_label KEY:VALUE PROJECT_ID:DATASET

다음을 바꿉니다.


KEY:VALUE: 추가하려는 라벨의 키-값 쌍. 키는 고유해야 합니다. 키와 값에는 소문자, 숫자, 밑줄, 대시만 사용할 수 있습니다. 모든 문자는 UTF-8 인코딩을 사용해야 하며 국제 문자가 허용됩니다.
PROJECT_ID: 프로젝트 ID
DATASET: 라벨을 지정하는 데이터 세트


예를 들면 다음과 같습니다.

부서를 추적하는 라벨을 추가하려면 bq update 명령어를 입력하고 department를 라벨 키로 지정합니다. 예를 들어 기본 프로젝트의 mydataset에 department:shipping 라벨을 추가하려면 다음을 입력합니다.
    bq update --set_label department:shipping mydataset

데이터 세트에 여러 라벨을 추가하려면 set_label 플래그를 반복하고 각 라벨에 고유 키를 지정합니다. 예를 들어 기본 프로젝트의 mydataset에 department:shipping 라벨과 cost_center:logistics 라벨을 추가하려면 다음을 입력합니다.
    bq update \
    --set_label department:shipping \
    --set_label cost_center:logistics \
    mydataset

--- 탭: API [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#api] ---
기존 데이터 세트에 라벨을 추가하려면 datasets.patch [https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets/patch?hl=ko] 메서드를 호출하고 데이터 세트 리소스 [https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets?hl=ko]의 labels 속성을 입력합니다.

datasets.update 메서드는 전체 데이터 세트 리소스를 대체하므로 datasets.patch 메서드를 사용하는 것이 좋습니다.

--- 탭: tabpanel-go ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Go 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Go API 참고 문서 [https://godoc.org/cloud.google.com/go/bigquery]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  import (
	"context"
	"fmt"

	"cloud.google.com/go/bigquery"
)

// addDatasetLabel demonstrates adding label metadata to an existing dataset.
func addDatasetLabel(projectID, datasetID string) error {
	// projectID := "my-project-id"
	// datasetID := "mydataset"
	ctx := context.Background()
	client, err := bigquery.NewClient(ctx, projectID)
	if err != nil {
		return fmt.Errorf("bigquery.NewClient: %v", err)
	}
	defer client.Close()

	ds := client.Dataset(datasetID)
	meta, err := ds.Metadata(ctx)
	if err != nil {
		return err
	}

	update := bigquery.DatasetMetadataToUpdate [https://cloud.google.com/go/docs/reference/cloud.google.com/go/bigquery/latest/index.html?hl=ko#cloud_google_com_go_bigquery_DatasetMetadataToUpdate]{}
	update.SetLabel("color", "green")
	if _, err := ds.Update(ctx, update, meta.ETag); err != nil {
		return err
	}
	return nil
}

--- 탭: tabpanel-java ---
이 샘플은 Java용 Google HTTP 클라이언트 라이브러리 [https://developers.google.com/api-client-library/java/google-http-java-client/?hl=ko]를 사용하여 BigQuery API에 요청을 전송합니다.











  
  
  
  





  
  
  
    
  




  



  







  
    
  



  



  
  
    
    
      
        
          이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Java 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Java API 참고 문서 [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/overview?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  import com.google.cloud.bigquery.BigQuery [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQuery.html?hl=ko];
import com.google.cloud.bigquery.BigQueryException [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQueryException.html?hl=ko];
import com.google.cloud.bigquery.BigQueryOptions [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQueryOptions.html?hl=ko];
import com.google.cloud.bigquery.Dataset [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.Dataset.html?hl=ko];
import java.util.HashMap;
import java.util.Map;

// Sample to updates a label on dataset
public class LabelDataset {

  public static void main(String[] args) {
    // TODO(developer): Replace these variables before running the sample.
    String datasetName = "MY_DATASET_NAME";
    labelDataset(datasetName);
  }

  public static void labelDataset(String datasetName) {
    try {
      // Initialize client that will be used to send requests. This client only needs to be created
      // once, and can be reused for multiple requests.
      BigQuery [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQuery.html?hl=ko] bigquery = BigQueryOptions [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQueryOptions.html?hl=ko].getDefaultInstance().getService();

      // This example dataset starts with existing label { color: 'green' }
      Dataset [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.Dataset.html?hl=ko] dataset = bigquery.getDataset [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQuery.html?hl=ko#com_google_cloud_bigquery_BigQuery_getDataset_com_google_cloud_bigquery_DatasetId_com_google_cloud_bigquery_BigQuery_DatasetOption____](datasetName);
      // Add label to dataset
      Map<String, String> labels = new HashMap<>();
      labels.put("color", "green");

      dataset.toBuilder [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.Dataset.html?hl=ko#com_google_cloud_bigquery_Dataset_toBuilder__]().setLabels(labels).build().update();
      System.out.println("Label added successfully");
    } catch (BigQueryException [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQueryException.html?hl=ko] e) {
      System.out.println("Label was not added. \n" + e.toString());
    }
  }
}

--- 탭: tabpanel-node.js ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Node.js 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Node.js API 참고 문서 [https://googleapis.dev/nodejs/bigquery/latest/index.html]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  // Import the Google Cloud client library
const {BigQuery} = require('@google-cloud/bigquery [https://cloud.google.com/nodejs/docs/reference/bigquery/latest/overview.html?hl=ko]');
const bigquery = new BigQuery [https://cloud.google.com/nodejs/docs/reference/bigquery/latest/bigquery/bigquery.html?hl=ko]();

async function labelDataset() {
  // Updates a label on a dataset.

  /**
   * TODO(developer): Uncomment the following lines before running the sample
   */
  // const datasetId = "my_dataset";

  // Retrieve current dataset metadata.
  const dataset = bigquery.dataset(datasetId);
  const [metadata] = await dataset.getMetadata();

  // Add label to dataset metadata
  metadata.labels = {color: 'green'};
  const [apiResponse] = await dataset.setMetadata(metadata);

  console.log(`${datasetId} labels:`);
  console.log(apiResponse.labels);
}

--- 탭: tabpanel-python ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Python 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Python API 참고 문서 [https://cloud.google.com/python/docs/reference/bigquery/latest?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  
from google.cloud import bigquery [https://cloud.google.com/python/docs/reference/bigquery/latest/?hl=ko]

# Construct a BigQuery client object.
client = bigquery [https://cloud.google.com/python/docs/reference/bigquery/latest/?hl=ko].Client [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client.html?hl=ko]()

# TODO(developer): Set dataset_id to the ID of the dataset to fetch.
# dataset_id = "your-project.your_dataset"

dataset = client.get_dataset [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client.html?hl=ko#google_cloud_bigquery_client_Client_get_dataset](dataset_id)  # Make an API request.
dataset.labels = {"color": "green"}
dataset = client.update_dataset [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client.html?hl=ko#google_cloud_bigquery_client_Client_update_dataset](dataset, ["labels"])  # Make an API request.

print("Labels added to {}".format(dataset_id))
테이블 및 뷰에 라벨 추가
이 페이지에서는 기존 테이블 또는 뷰에 라벨을 추가하는 방법에 대해 설명합니다. 테이블 또는 뷰를 만들 때 라벨을 추가하는 방법에 관한 자세한 내용은 테이블 만들기 [https://cloud.google.com/bigquery/docs/tables?hl=ko] 또는 뷰 만들기 [https://cloud.google.com/bigquery/docs/views?hl=ko]를 참조하세요.
뷰는 테이블 리소스와 같이 취급되므로 tables.patch 메서드를 사용하여 뷰와 테이블을 모두 수정합니다.
참고: 테이블 및 뷰 라벨은 결제 데이터에 포함되지 않습니다.
필요한 IAM 역할
기존 테이블 또는 뷰에 라벨을 추가하는 데 필요한 권한을 얻으려면 관리자에게 BigQuery 데이터 편집자 [https://cloud.google.com/iam/docs/roles-permissions/bigquery?hl=ko#bigquery.dataEditor](roles/bigquery.dataEditor) IAM 역할을 부여해 달라고 요청하세요. 역할 부여에 대한 자세한 내용은 프로젝트, 폴더, 조직에 대한 액세스 관리 [https://cloud.google.com/iam/docs/granting-changing-revoking-access?hl=ko]를 참조하세요.
이 사전 정의된 역할에는 기존 테이블 또는 뷰에 라벨을 추가하는 데 필요한 권한이 포함되어 있습니다. 필요한 정확한 권한을 보려면 필수 권한 섹션을 펼치세요.
필수 권한
커스텀 역할 [https://cloud.google.com/iam/docs/creating-custom-roles?hl=ko]이나 다른 사전 정의된 역할 [https://cloud.google.com/iam/docs/roles-overview?hl=ko#predefined]을 사용하여 이 권한을 부여받을 수도 있습니다.
BigQuery의 IAM 역할과 권한에 대한 자세한 내용은 사전 정의된 역할 및 권한 [https://cloud.google.com/bigquery/docs/access-control?hl=ko]을 참조하세요.
테이블 또는 뷰에 라벨 추가
기존 테이블 또는 뷰에 라벨을 추가하려면 다음 안내를 따르세요.
--- 탭: 콘솔 [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#%EC%BD%98%EC%86%94] ---
Google Cloud 콘솔에서 테이블 또는 뷰를 선택합니다.
세부정보 탭을 클릭합니다.


 

라벨 오른쪽에 있는 연필 아이콘을 클릭합니다.


 

라벨 수정 대화상자에서 다음을 수행합니다.


라벨 추가를 클릭합니다.
키와 값을 입력하여 라벨을 추가합니다. 추가 라벨을 적용하려면 라벨 추가를 클릭합니다. 각 키는 데이터 세트당 한 번만 사용할 수 있지만 동일한 프로젝트의 여러 데이터 세트에 동일한 키를 사용할 수 있습니다.
기존 키 또는 값을 수정하여 라벨을 업데이트합니다.
업데이트를 클릭하여 변경사항을 저장합니다.

--- 탭: SQL [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#sql] ---
ALTER TABLE SET OPTIONS DDL 문 [https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language?hl=ko#alter_table_set_options_statement]을 사용하여 기존 테이블에 라벨을 설정하거나 ALTER VIEW SET OPTIONS DDL 문 [https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language?hl=ko#alter_view_set_options_statement]을 사용하여 기존 뷰에 라벨을 설정합니다. 라벨을 설정하면 테이블 또는 뷰의 기존 라벨을 덮어씁니다. 다음 예시에서는 테이블 mytable에 라벨 두 개를 설정합니다.




 Google Cloud 콘솔에서 BigQuery 페이지로 이동합니다.

BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko] 
쿼리 편집기에서 다음 문을 입력합니다.

ALTER TABLE mydataset.mytable
SET OPTIONS (
  labels = [('department', 'shipping'), ('cost_center', 'logistics')]);


play_circle 실행을 클릭합니다.




쿼리를 실행하는 방법에 대한 자세한 내용은 대화형 쿼리 실행 [https://cloud.google.com/bigquery/docs/running-queries?hl=ko#queries]을 참조하세요.

--- 탭: bq [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#bq] ---
기존 테이블 또는 뷰에 라벨을 추가하려면 bq update 명령어를 set_label 플래그와 함께 실행합니다. 라벨을 여러 개 추가하려면 플래그를 반복합니다.

테이블 또는 뷰가 기본 프로젝트 이외의 프로젝트에 있으면 프로젝트 ID를 project_id:dataset 형식으로 데이터 세트에 추가합니다.

bq update \
--set_label KEY:VALUE \
PROJECT_ID:DATASET.TABLE_OR_VIEW

다음을 바꿉니다.


KEY:VALUE: 추가하려는 라벨의 키-값 쌍. 키는 고유해야 합니다. 키와 값에는 소문자, 숫자, 밑줄, 대시만 사용할 수 있습니다. 모든 문자는 UTF-8 인코딩을 사용해야 하며 국제 문자가 허용됩니다.
PROJECT_ID: 프로젝트 ID
DATASET: 라벨을 지정할 테이블 또는 뷰가 포함된 데이터 세트
TABLE_OR_VIEW: 라벨을 지정할 테이블 또는 뷰의 이름


예를 들면 다음과 같습니다.

부서를 추적하는 테이블 라벨을 추가하려면 bq update 명령어를 입력하고 department를 라벨 키로 지정합니다. 예를 들어 기본 프로젝트의 mytable에 department:shipping 라벨을 추가하려면 다음을 입력합니다.
    bq update --set_label department:shipping mydataset.mytable

부서를 추적하는 뷰 라벨을 추가하려면 bq update 명령어를 입력하고 department를 라벨 키로 지정합니다. 예를 들어 기본 프로젝트의 myview에 department:shipping 라벨을 추가하려면 다음을 입력합니다.
    bq update --set_label department:shipping mydataset.myview

테이블 또는 뷰에 여러 라벨을 추가하려면 set_label 플래그를 반복하고 각 라벨에 고유한 키를 지정합니다. 예를 들어 기본 프로젝트의 mytable에 department:shipping 라벨과 cost_center:logistics 라벨을 추가하려면 다음을 입력합니다.
    bq update \
    --set_label department:shipping \
    --set_label cost_center:logistics \
    mydataset.mytable

--- 탭: API [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#api] ---
기존 테이블 또는 뷰에 라벨을 추가하려면 tables.patch [https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/patch?hl=ko] 메서드를 호출하고 테이블 리소스 [https://cloud.google.com/bigquery/docs/reference/rest/v2/tables?hl=ko]의 labels 속성을 입력합니다.

뷰는 테이블 리소스와 같이 취급되므로 tables.patch 메서드를 사용하여 뷰와 테이블을 모두 수정합니다.

tables.update 메서드는 전체 데이터 세트 리소스를 대체하므로 tables.patch 메서드를 사용하는 것이 좋습니다.

--- 탭: tabpanel-go ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Go 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Go API 참고 문서 [https://godoc.org/cloud.google.com/go/bigquery]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  import (
	"context"
	"fmt"

	"cloud.google.com/go/bigquery"
)

// addTableLabel demonstrates adding Label metadata to a BigQuery table.
func addTableLabel(projectID, datasetID, tableID string) error {
	// projectID := "my-project-id"
	// datasetID := "mydataset"
	// tableID := "mytable"
	ctx := context.Background()
	client, err := bigquery.NewClient(ctx, projectID)
	if err != nil {
		return fmt.Errorf("bigquery.NewClient: %v", err)
	}
	defer client.Close()

	tbl := client.Dataset(datasetID).Table(tableID)
	meta, err := tbl.Metadata(ctx)
	if err != nil {
		return err
	}

	update := bigquery.TableMetadataToUpdate [https://cloud.google.com/go/docs/reference/cloud.google.com/go/bigquery/latest/index.html?hl=ko#cloud_google_com_go_bigquery_TableMetadataToUpdate]{}
	update.SetLabel("color", "green")
	if _, err := tbl.Update(ctx, update, meta.ETag); err != nil {
		return err
	}
	return nil
}

--- 탭: tabpanel-java ---
이 샘플은 Java용 Google HTTP 클라이언트 라이브러리 [https://developers.google.com/api-client-library/java/google-http-java-client/?hl=ko]를 사용하여 BigQuery API에 요청을 전송합니다.











  
  
  
  





  
  
  
    
  




  



  







  
    
  



  



  
  
    
    
      
        
          이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Java 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Java API 참고 문서 [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/overview?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  import com.google.cloud.bigquery.BigQuery [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQuery.html?hl=ko];
import com.google.cloud.bigquery.BigQueryException [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQueryException.html?hl=ko];
import com.google.cloud.bigquery.BigQueryOptions [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQueryOptions.html?hl=ko];
import com.google.cloud.bigquery.Table [https://cloud.google.com/java/docs/reference/google-cloud-biglake/latest/com.google.cloud.bigquery.biglake.v1.Table.html?hl=ko];
import com.google.cloud.bigquery.TableId [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.TableId.html?hl=ko];
import java.util.HashMap;
import java.util.Map;

// Sample to adds a label to an existing table
public class LabelTable {

  public static void main(String[] args) {
    // TODO(developer): Replace these variables before running the sample.
    String datasetName = "MY_DATASET_NAME";
    String tableName = "MY_TABLE_NAME";
    labelTable(datasetName, tableName);
  }

  public static void labelTable(String datasetName, String tableName) {
    try {
      // Initialize client that will be used to send requests. This client only needs to be created
      // once, and can be reused for multiple requests.
      BigQuery [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQuery.html?hl=ko] bigquery = BigQueryOptions [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQueryOptions.html?hl=ko].getDefaultInstance().getService();

      // This example table starts with existing label { color: 'green' }
      Table [https://cloud.google.com/java/docs/reference/google-cloud-biglake/latest/com.google.cloud.bigquery.biglake.v1.Table.html?hl=ko] table = bigquery.getTable [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQuery.html?hl=ko#com_google_cloud_bigquery_BigQuery_getTable_com_google_cloud_bigquery_TableId_com_google_cloud_bigquery_BigQuery_TableOption____](TableId.of(datasetName, tableName));
      // Add label to table
      Map<String, String> labels = new HashMap<>();
      labels.put("color", "green");

      table.toBuilder [https://cloud.google.com/java/docs/reference/google-cloud-biglake/latest/com.google.cloud.bigquery.biglake.v1.Table.html?hl=ko#com_google_cloud_bigquery_biglake_v1_Table_toBuilder__]().setLabels(labels).build().update();
      System.out.println("Label added successfully");
    } catch (BigQueryException [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/com.google.cloud.bigquery.BigQueryException.html?hl=ko] e) {
      System.out.println("Label was not added. \n" + e.toString());
    }
  }
}

--- 탭: tabpanel-node.js ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Node.js 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Node.js API 참고 문서 [https://googleapis.dev/nodejs/bigquery/latest/index.html]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  // Import the Google Cloud client library
const {BigQuery} = require('@google-cloud/bigquery [https://cloud.google.com/nodejs/docs/reference/bigquery/latest/overview.html?hl=ko]');
const bigquery = new BigQuery [https://cloud.google.com/nodejs/docs/reference/bigquery/latest/bigquery/bigquery.html?hl=ko]();

async function labelTable() {
  // Adds a label to an existing table.

  /**
   * TODO(developer): Uncomment the following lines before running the sample.
   */
  // const datasetId = 'my_dataset';
  // const tableId = 'my_table';

  const dataset = bigquery.dataset(datasetId);
  const [table] = await dataset.table(tableId).get();

  // Retrieve current table metadata
  const [metadata] = await table.getMetadata();

  // Add label to table metadata
  metadata.labels = {color: 'green'};
  const [apiResponse] = await table.setMetadata(metadata);

  console.log(`${tableId} labels:`);
  console.log(apiResponse.labels);
}

--- 탭: tabpanel-python ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Python 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Python API 참고 문서 [https://cloud.google.com/python/docs/reference/bigquery/latest?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  from google.cloud import bigquery [https://cloud.google.com/python/docs/reference/bigquery/latest/?hl=ko]

client = bigquery [https://cloud.google.com/python/docs/reference/bigquery/latest/?hl=ko].Client [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client.html?hl=ko]()

# TODO(dev): Change table_id to the full name of the table you want to create.
table_id = "your-project.your_dataset.your_table_name"

table = client.get_table [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client.html?hl=ko#google_cloud_bigquery_client_Client_get_table](table_id)  # API request

labels = {"color": "green"}
table.labels = labels

table = client.update_table [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client.html?hl=ko#google_cloud_bigquery_client_Client_update_table](table, ["labels"])  # API request

print(f"Added {table.labels} to {table_id}.")
작업에 라벨 추가
bq 명령줄 도구의 --label 플래그를 사용하여 명령줄을 통해 쿼리 작업에 라벨을 추가할 수 있습니다. bq 도구는 쿼리 작업에만 라벨 추가를 지원합니다.
또한 jobs.insert [https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/insert?hl=ko] 메서드를 호출할 때 작업 구성에서 labels 속성을 지정하면 API를 통해 작업을 제출할 때 작업에 라벨을 추가할 수 있습니다. API를 사용하면 모든 작업 유형에 라벨을 추가할 수 있습니다.
대기 중이거나 실행 중이거나 완료된 작업에는 라벨을 추가하거나 업데이트할 수 없습니다.
작업에 라벨을 추가하면 라벨이 결제 데이터에 포함됩니다.
필요한 IAM 역할
작업에 라벨을 추가하는 데 필요한 권한을 얻으려면 관리자에게 BigQuery 사용자 [https://cloud.google.com/iam/docs/roles-permissions/bigquery?hl=ko#bigquery.user](roles/bigquery.user) IAM 역할을 부여해 달라고 요청하세요. 역할 부여에 대한 자세한 내용은 프로젝트, 폴더, 조직에 대한 액세스 관리 [https://cloud.google.com/iam/docs/granting-changing-revoking-access?hl=ko]를 참조하세요.
이 사전 정의된 역할에는 작업에 라벨을 추가하는 데 필요한 bigquery.jobs.create 권한이 포함되어 있습니다.
커스텀 역할 [https://cloud.google.com/iam/docs/creating-custom-roles?hl=ko]이나 다른 사전 정의된 역할 [https://cloud.google.com/iam/docs/roles-overview?hl=ko#predefined]을 사용하여 이 권한을 부여받을 수도 있습니다.
BigQuery의 IAM 역할과 권한에 대한 자세한 내용은 사전 정의된 역할 및 권한 [https://cloud.google.com/bigquery/docs/access-control?hl=ko]을 참조하세요.
작업에 라벨 추가
작업에 라벨을 추가하려면 다음 안내를 따르세요.
--- 탭: bq [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#bq] ---
쿼리 작업에 라벨을 추가하려면 --label 명령어를 bq query 플래그와 함께 실행합니다. 라벨을 여러 개 추가하려면 플래그를 반복합니다. 플래그는 쿼리가 GoogleSQL 문법임을 나타냅니다.

bq query --label KEY:VALUE  'QUERY'

다음을 바꿉니다.


KEY:VALUE: 쿼리 작업에 추가하려는 라벨의 키-값 쌍. 키는 고유해야 합니다. 키와 값에는 소문자, 숫자, 밑줄, 대시만 사용할 수 있습니다. 모든 문자는 UTF-8 인코딩을 사용해야 하며 국제 문자가 허용됩니다. 쿼리 작업에 여러 라벨을 추가하려면 --label 플래그를 반복하고 각 라벨에 고유한 키를 지정합니다.
QUERY: 유효한 GoogleSQL 쿼리


예를 들면 다음과 같습니다.

쿼리 작업에 라벨을 추가하려면 다음을 입력합니다.
    bq query \
    --label department:shipping \
     \
    'SELECT
       column1, column2
     FROM
       `mydataset.mytable`'

쿼리 작업에 여러 라벨을 추가하려면 --label 플래그를 반복하고 각 라벨에 고유한 키를 지정합니다. 예를 들어 쿼리 작업에 department:shipping 라벨과 cost_center:logistics 라벨을 추가하려면 다음을 입력합니다.
    bq query \
    --label department:shipping \
    --label cost_center:logistics \
     \
    'SELECT
       column1, column2
     FROM
       `mydataset.mytable`'

--- 탭: API [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#api] ---
작업에 라벨을 추가하려면 jobs.insert [https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/insert?hl=ko] 메서드를 호출하고 작업 구성 [https://cloud.google.com/bigquery/docs/reference/rest/v2/Job?hl=ko#jobconfiguration]의 labels 속성을 입력합니다.
API를 사용하면 모든 작업 유형에 라벨을 추가할 수 있습니다.

--- 탭: Python [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#python] ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Python 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Python API 참고 문서 [https://cloud.google.com/python/docs/reference/bigquery/latest?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  from google.cloud import bigquery [https://cloud.google.com/python/docs/reference/bigquery/latest/?hl=ko]

client = bigquery [https://cloud.google.com/python/docs/reference/bigquery/latest/?hl=ko].Client [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client.html?hl=ko]()

sql = """
    SELECT corpus
    FROM `bigquery-public-data.samples.shakespeare`
    GROUP BY corpus;
"""
labels = {"color": "green"}

config = bigquery [https://cloud.google.com/python/docs/reference/bigquery/latest/?hl=ko].QueryJobConfig [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.job.QueryJobConfig.html?hl=ko]()
config.labels = labels
location = "us"
job = client.query [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client.html?hl=ko](sql, location=location, job_config=config)
job_id = job [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.job.html?hl=ko].job_id

print(f"Added {job [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.job.html?hl=ko].labels} to {job_id}.")
세션의 작업을 라벨과 연결
세션 [https://cloud.google.com/bigquery/docs/sessions-intro?hl=ko]에서 쿼리를 실행하는 경우 BigQuery 멀티 문 쿼리를 사용하여 세션의 모든 향후 쿼리 작업에 라벨을 할당할 수 있습니다.
--- 탭: SQL [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#sql] ---
다음 쿼리를 실행하여 세션에서 @@query_label [https://cloud.google.com/bigquery/docs/reference/system-variables?hl=ko] 시스템 변수를 설정합니다.

  SET @@query_label = "KEY:VALUE";
  


KEY:VALUE: 세션의 모든 향후 쿼리에 할당할 라벨의 키-값 쌍입니다. 쉼표로 구분된 여러 키-값 쌍을 추가할 수도 있습니다(예: SET @@query_label = "key1:value1,key2:value2"). 키는 고유해야 합니다. 키와 값에는 소문자, 숫자, 밑줄, 대시만 사용할 수 있습니다. 모든 문자는 UTF-8 인코딩을 사용해야 하며 국제 문자가 허용됩니다.


예를 들면 다음과 같습니다.

  SET @@query_label = "cost_center:logistics";

--- 탭: API [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#api] ---
API 호출을 사용하여 쿼리를 실행 [https://cloud.google.com/bigquery/docs/sessions-run-queries?hl=ko]할 때 세션의 쿼리 작업에 라벨을 추가하려면 jobs.insert [https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/insert?hl=ko] 메서드를 호출하고 connectionProperties [https://cloud.google.com/bigquery/docs/reference/rest/v2/ConnectionProperty?hl=ko] 작업 구성 [https://cloud.google.com/bigquery/docs/reference/rest/v2/Job?hl=ko#jobconfiguration]의 query_label 속성을 채웁니다.
쿼리 라벨을 세션과 연결하고 세션 내에서 쿼리를 실행한 후에는 해당 쿼리 라벨이 있는 쿼리의 감사 로그를 수집할 수 있습니다. 자세한 내용은 BigQuery의 감사 로그 참조 [https://cloud.google.com/bigquery/docs/reference/auditlogs?hl=ko]를 확인하세요.
예약에 라벨 추가
프리뷰
이 제품 또는 기능에는 서비스별 약관 [https://cloud.google.com/terms/service-terms?hl=ko#1]의 일반 서비스 약관 섹션에 있는 'GA 이전 제공 서비스 약관'이 적용됩니다. GA 이전 제품 및 기능은 '있는 그대로' 제공되며 지원이 제한될 수 있습니다. 자세한 내용은 출시 단계 설명 [https://cloud.google.com/products?hl=ko#product-launch-stages]을 참조하세요.
예약에 라벨을 추가하면 라벨이 결제 데이터에 포함됩니다. 라벨을 사용하여 Cloud Billing 데이터에서 분석 슬롯 기여 분석 SKU를 필터링할 수 있습니다.
결제 데이터에서 라벨을 사용하는 방법에 대한 자세한 내용은 필터를 사용하여 데이터 미세 조정하기 [https://cloud.google.com/billing/docs/how-to/reports?hl=ko#filter-by-labels]를 참고하세요.
필요한 IAM 역할
예약에 라벨을 추가하는 데 필요한 권한을 얻으려면 관리자에게 관리 프로젝트에 대한 BigQuery 리소스 편집자 [https://cloud.google.com/iam/docs/roles-permissions/bigquery?hl=ko#bigquery.resourceEditor](roles/bigquery.resourceEditor) IAM 역할을 부여해 달라고 요청하세요. 역할 부여에 대한 자세한 내용은 프로젝트, 폴더, 조직에 대한 액세스 관리 [https://cloud.google.com/iam/docs/granting-changing-revoking-access?hl=ko]를 참조하세요.
이 사전 정의된 역할에는 예약에 라벨을 추가하는 데 필요한 bigquery.reservations.update 권한이 포함되어 있습니다.
커스텀 역할 [https://cloud.google.com/iam/docs/creating-custom-roles?hl=ko]이나 다른 사전 정의된 역할 [https://cloud.google.com/iam/docs/roles-overview?hl=ko#predefined]을 사용하여 이 권한을 부여받을 수도 있습니다.
예약에 라벨 추가
예약에 라벨을 추가하려면 다음 안내를 따르세요.
--- 탭: SQL [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#sql] ---
예약에 라벨을 추가하려면 ALTER RESERVATION SET OPTIONS DDL 문 [https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language?hl=ko#alter_reservation_set_options_statement]을 사용합니다.
라벨을 설정하면 데이터 세트의 기존 라벨을 덮어씁니다. 다음 예시에서는 myreservation 예약에 라벨을 설정합니다.




 Google Cloud 콘솔에서 BigQuery 페이지로 이동합니다.

BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko] 
쿼리 편집기에서 다음 문을 입력합니다.

ALTER RESERVATION myreservation
SET OPTIONS (
  labels = [('sensitivity', 'high')]);


play_circle 실행을 클릭합니다.




쿼리를 실행하는 방법에 대한 자세한 내용은 대화형 쿼리 실행 [https://cloud.google.com/bigquery/docs/running-queries?hl=ko#queries]을 참조하세요.

--- 탭: bq [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#bq] ---
예약에 라벨을 추가하려면 bq update 명령어를 set_label 플래그 및 --reservation 플래그와 함께 실행합니다. 라벨을 여러 개 추가하려면 set_label 플래그를 반복합니다.

bq update --set_label KEY:VALUE --location LOCATION --reservation RESERVATION_NAME

다음을 바꿉니다.


KEY:VALUE: 예약에 추가하려는 라벨의 키-값 쌍입니다. 키는 고유해야 합니다. 키와 값에는 소문자, 숫자, 밑줄, 대시만 사용할 수 있습니다. 모든 문자는 UTF-8 인코딩을 사용해야 하며 국제 문자가 허용됩니다. 예약에 여러 라벨을 추가하려면 --set_label 플래그를 반복하고 각 라벨에 고유한 키를 지정합니다.
LOCATION: 예약 위치
location 플래그는 명령어의 마지막에 올 수 없습니다. 그렇지 않으면 FATAL Flags positioning 오류가 반환됩니다.
RESERVATION_NAME: 예약 이름.
값이 없는 라벨 추가
키의 값이 비어 있는 라벨을 태그라고도 부릅니다. 이를 태그 리소스 [https://cloud.google.com/bigquery/docs/tags?hl=ko]와 혼동해서는 안 됩니다. 자세한 내용은 라벨 및 태그 [https://cloud.google.com/resource-manager/docs/tags/tags-overview?hl=ko]를 참조하세요. 값이 없는 새 라벨을 만들거나 기존 라벨 키에서 값을 삭제할 수 있습니다.
값이 없는 라벨은 리소스에 라벨을 지정하지만 키-값 형식이 필요하지 않은 경우에 유용할 수 있습니다. 예를 들어 테이블에 지원 또는 개발과 같은 여러 그룹에 사용되는 테스트 데이터가 포함된 경우 test_data 라벨을 테이블에 추가하여 이를 식별할 수 있습니다.
값이 없는 라벨을 추가하려면 다음 안내를 따르세요.
--- 탭: 콘솔 [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#%EC%BD%98%EC%86%94] ---
Google Cloud 콘솔에서 적절한 리소스(데이터 세트, 테이블, 뷰)를 선택합니다.
데이터세트의 경우 데이터세트 세부정보 페이지가 자동으로 열립니다. 테이블 및 뷰의 경우 세부정보를 클릭하여 세부정보 페이지를 엽니다.


 

세부정보 페이지에서 라벨 오른쪽에 있는 연필 아이콘을 클릭합니다.


 

라벨 수정 대화상자에서 다음을 수행합니다.


라벨 추가를 클릭합니다.
새 키를 입력하고 값을 비워 둡니다. 추가 라벨을 적용하려면 라벨 추가를 클릭하고 반복합니다.
변경사항을 저장하려면 업데이트를 클릭합니다.

--- 탭: SQL [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#sql] ---
값 없이 라벨을 추가하려면 ALTER TABLE SET OPTIONS DDL 문 [https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language?hl=ko#alter_table_set_options_statement]을 사용합니다.




 Google Cloud 콘솔에서 BigQuery 페이지로 이동합니다.

BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko] 
쿼리 편집기에서 다음 문을 입력합니다.

ALTER TABLE mydataset.mytable
SET OPTIONS (
  labels=[("key1", ""), ("key2", "")]);


play_circle 실행을 클릭합니다.




쿼리를 실행하는 방법에 대한 자세한 내용은 대화형 쿼리 실행 [https://cloud.google.com/bigquery/docs/running-queries?hl=ko#queries]을 참조하세요.

--- 탭: bq [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#bq] ---
기존 리소스에 값이 없는 라벨을 추가하려면 bq update 명령어를 set_label 플래그와 함께 실행합니다. 키를 지정하고 그 뒤에 콜론을 입력하고, 값을 지정하지 않고 비워 둡니다.

bq update --set_label KEY: RESOURCE_ID

다음을 바꿉니다.


KEY:: 사용할 라벨 키
RESOURCE_ID: 유효한 데이터 세트, 테이블 또는 뷰 이름.
리소스가 기본 프로젝트 이외의 프로젝트에 있으면 PROJECT_ID:DATASET 형식으로 프로젝트 ID를 추가합니다.


예를 들면 다음과 같습니다.

다음 명령어를 입력하여 mydataset.mytable에 대해 test_data 라벨을 만듭니다. 여기서 mydataset는 기본 프로젝트에 있습니다.
bq update --set_label test_data: mydataset

--- 탭: API [https://cloud.google.com/bigquery/docs/adding-labels?hl=ko#api] ---
datasets.patch [https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets/patch?hl=ko] 메서드 또는 tables.patch [https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/patch?hl=ko] 메서드를 호출하고 데이터 세트 리소스 [https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets?hl=ko] 또는 테이블 리소스 [https://cloud.google.com/bigquery/docs/reference/rest/v2/tables?hl=ko]에 빈 문자열("")로 설정된 값이 있는 라벨을 추가합니다.
기존 라벨의 값을 빈 문자열로 대체하여 값을 삭제할 수 있습니다.

뷰는 테이블 리소스와 같이 취급되므로 tables.patch 메서드를 사용하여 뷰와 테이블을 모두 수정합니다. 또한 tables.update 메서드는 전체 데이터 세트 리소스를 대체하므로 tables.patch 메서드를 사용하는 것이 좋습니다.
다음 단계
BigQuery 리소스에 대한 라벨 보기 [https://cloud.google.com/bigquery/docs/viewing-labels?hl=ko] 방법을 알아보세요.
BigQuery 리소스에 대한 라벨 업데이트 [https://cloud.google.com/bigquery/docs/updating-labels?hl=ko] 방법 알아보기
라벨을 사용한 리소스 필터링 [https://cloud.google.com/bigquery/docs/filtering-labels?hl=ko] 방법 알아보기
BigQuery 리소스의 라벨 삭제 [https://cloud.google.com/bigquery/docs/deleting-labels?hl=ko] 방법 알아보기
Resource Manager 문서의 라벨 사용 [https://cloud.google.com/resource-manager/docs/using-labels?hl=ko] 읽어보기
도움이 되었나요?
의견 보내기