Source URL: https://cloud.google.com/bigquery/docs/use-service-accounts

BigQuery [https://cloud.google.com/bigquery?hl=ko]
Documentation [https://cloud.google.com/bigquery/docs?hl=ko]
가이드 [https://cloud.google.com/bigquery/docs/introduction?hl=ko]
도움이 되었나요?
의견 보내기
이 페이지의 내용
서비스 계정 지원이 포함된 데이터 소스 [https://cloud.google.com/bigquery/docs/use-service-accounts?hl=ko#data_sources_with_service_account_support]
시작하기 전에 [https://cloud.google.com/bigquery/docs/use-service-accounts?hl=ko#before_you_begin]
필수 권한 [https://cloud.google.com/bigquery/docs/use-service-accounts?hl=ko#required_permissions]
데이터 전송 사용자 인증 정보 업데이트 [https://cloud.google.com/bigquery/docs/use-service-accounts?hl=ko#update_data_transfer_credentials]
서비스 계정 사용
bookmark_border
일부 데이터 소스는 Google Cloud 콘솔, API, bq 명령줄을 통해 서비스 계정 [https://cloud.google.com/iam/docs/service-account-overview?hl=ko]을 사용한 데이터 전송 인증을 지원합니다. 서비스 계정은 Google Cloud 프로젝트와 연결된 Google 계정입니다. 서비스 계정은 사용자 인증 정보가 아닌 서비스 계정 사용자 인증 정보를 사용해서 인증을 수행하여 예약된 쿼리 또는 일괄 처리 파이프라인과 같은 작업을 실행할 수 있습니다.
서비스 계정의 사용자 인증 정보를 사용하여 기존 데이터 전송을 업데이트할 수 있습니다. 자세한 내용은 데이터 전송 사용자 인증 정보 업데이트 [https://cloud.google.com/bigquery/docs/use-service-accounts?hl=ko#update_data_transfer_credentials]를 참조하세요.
다음 상황에서는 사용자 인증 정보를 업데이트해야 합니다.
전송 중 사용자의 데이터 소스 액세스를 승인하지 못했습니다.
Error code 401 : Request is missing required authentication credential. UNAUTHENTICATED
전송을 실행하려고 할 때 INVALID_USER 오류가 발생합니다.
Error code 5 : Authentication failure: User Id not found. Error code: INVALID_USERID
서비스 계정을 사용하여 인증을 수행하는 방법에 대한 자세한 내용은 인증 소개 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#sa-impersonation]를 참조하세요.
서비스 계정 지원이 포함된 데이터 소스
BigQuery Data Transfer Service는 다음을 포함한 전송에 서비스 계정 사용자 인증 정보를 사용할 수 있습니다.
Cloud Storage [https://cloud.google.com/bigquery/docs/cloud-storage-transfer?hl=ko]
Amazon Redshift [https://cloud.google.com/bigquery/docs/migration/redshift-overview?hl=ko]
Amazon S3 [https://cloud.google.com/bigquery/docs/s3-transfer-intro?hl=ko]
Campaign Manager [https://cloud.google.com/bigquery/docs/doubleclick-campaign-transfer?hl=ko]
탄소 발자국 [https://cloud.google.com/carbon-footprint/docs/export?hl=ko]
데이터 세트 사본 [https://cloud.google.com/bigquery/docs/copying-datasets?hl=ko]
Display & Video 360 [https://cloud.google.com/bigquery/docs/display-video-transfer?hl=ko]
Google Ad Manager [https://cloud.google.com/bigquery/docs/doubleclick-publisher-transfer?hl=ko]
Google Ads [https://cloud.google.com/bigquery/docs/google-ads-transfer?hl=ko]
Google 판매자 센터 [https://cloud.google.com/bigquery/docs/merchant-center-transfer?hl=ko]
Google Play [https://cloud.google.com/bigquery/docs/play-transfer?hl=ko]
예약된 쿼리 [https://cloud.google.com/bigquery/docs/scheduling-queries?hl=ko#using_a_service_account]
Search Ads 360 [https://cloud.google.com/bigquery/docs/search-ads-transfer?hl=ko]
Teradata [https://cloud.google.com/bigquery/docs/migration/teradata-overview?hl=ko]
YouTube 콘텐츠 소유자 [https://cloud.google.com/bigquery/docs/youtube-content-owner-transfer?hl=ko]
시작하기 전에
BigQuery Data Transfer Service 사용 설정 [https://cloud.google.com/bigquery/docs/enable-transfer-service?hl=ko]에 필요한 모든 작업을 완료했는지 확인합니다.
사용자에게 이 문서의 각 태스크를 수행하는 데 필요한 권한을 부여하는 Identity and Access Management(IAM) 역할을 부여합니다.
필수 권한
서비스 계정을 사용하도록 데이터 전송을 업데이트하려면 다음 권한이 있어야 합니다.
전송을 수정할 수 있는 bigquery.transfers.update 권한.
사전 정의된 roles/bigquery.admin IAM 역할에 이 권한이 포함되어 있습니다.
서비스 계정에 대한 액세스 권한. 사용자에게 서비스 계정 역할을 부여하는 방법에 대한 자세한 내용은 서비스 계정 사용자 역할 [https://cloud.google.com/iam/docs/service-account-permissions?hl=ko#user-role]을 참조하세요.
전송을 실행하기 위해 선택한 서비스 계정에 다음 권한이 있는지 확인합니다.
대상 데이터 세트에 대한 bigquery.datasets.get 및 bigquery.datasets.update 권한. 테이블에서 열 수준 액세스 제어 [https://cloud.google.com/bigquery/docs/column-level-security-intro?hl=ko]를 사용하는 경우 서비스 계정에 bigquery.tables.setCategory 권한도 있어야 합니다.
사전 정의된 IAM 역할 bigquery.admin에 이러한 모든 권한이 포함되어 있습니다. BigQuery Data Transfer Service의 IAM 역할에 대한 자세한 내용은 IAM 소개 [https://cloud.google.com/bigquery/docs/access-control?hl=ko]를 참조하세요.
구성된 전송 데이터 소스에 대한 액세스 권한. 여러 데이터 소스에 필요한 권한에 대한 자세한 내용은 서비스 계정 지원이 포함된 데이터 소스 [https://cloud.google.com/bigquery/docs/use-service-accounts?hl=ko#data_sources_with_service_account_support]를 참조하세요.
Google Ads 전송의 경우 서비스 계정에 도메인 전체 권한이 부여되어야 합니다. 자세한 내용은 Google Ads API 서비스 계정 가이드 [https://developers.google.com/google-ads/api/docs/oauth/service-accounts?hl=ko#service_account_access_setup]를 참고하세요.
데이터 전송 사용자 인증 정보 업데이트
--- 탭: 콘솔 [https://cloud.google.com/bigquery/docs/use-service-accounts?hl=ko#%EC%BD%98%EC%86%94] ---
다음 절차에서는 개별 사용자 계정 대신 서비스 계정으로 인증을 수행하도록 데이터 전송 구성을 업데이트합니다.


 Google Cloud 콘솔에서 데이터 전송 페이지로 이동합니다.

데이터 전송으로 이동 [https://console.cloud.google.com/bigquery/transfers?hl=ko] 
데이터 전송 목록에서 전송을 클릭합니다.
수정을 클릭하여 전송 구성을 업데이트합니다.


서비스 계정 필드에 서비스 계정 이름을 입력합니다.
저장을 클릭합니다.

--- 탭: bq [https://cloud.google.com/bigquery/docs/use-service-accounts?hl=ko#bq] ---
데이터 전송의 사용자 인증 정보를 업데이트하려면 bq 명령줄 도구를 사용하여 전송 구성을 업데이트하면 됩니다.

bq update 명령어를 --transfer_config, --update_credentials, --service_account_name 플래그와 함께 사용합니다.

예를 들어 다음 명령어는 개별 사용자 계정 대신 서비스 계정으로 인증을 수행하도록 데이터 전송 구성을 업데이트합니다.
bq update \
--transfer_config \
--update_credentials \
--service_account_name=abcdef-test-sa@abcdef-test.iam.gserviceaccount.com projects/862514376110/locations/us/transferConfigs/5dd12f26-0000-262f-bc38-089e0820fe38 \
참고: bq 명령줄 도구를 사용하는 경우 서비스 계정으로 인증하는 대신 --service_account_name 플래그를 사용하세요.

--- 탭: 자바 [https://cloud.google.com/bigquery/docs/use-service-accounts?hl=ko#%EC%9E%90%EB%B0%94] ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Java 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Java API 참고 문서 [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/overview?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  import com.google.api.gax.rpc.ApiException [https://cloud.google.com/java/docs/reference/gax/latest/com.google.api.gax.rpc.ApiException.html?hl=ko];
import com.google.cloud.bigquery.datatransfer.v1.DataTransferServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigquerydatatransfer/latest/com.google.cloud.bigquery.datatransfer.v1.DataTransferServiceClient.html?hl=ko];
import com.google.cloud.bigquery.datatransfer.v1.TransferConfig [https://cloud.google.com/java/docs/reference/google-cloud-bigquerydatatransfer/latest/com.google.cloud.bigquery.datatransfer.v1.TransferConfig.html?hl=ko];
import com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigquerydatatransfer/latest/com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.html?hl=ko];
import com.google.protobuf.FieldMask [https://cloud.google.com/java/docs/reference/protobuf/latest/com.google.protobuf.FieldMask.html?hl=ko];
import com.google.protobuf.util.FieldMaskUtil [https://cloud.google.com/java/docs/reference/protobuf/latest/com.google.protobuf.util.FieldMaskUtil.html?hl=ko];
import java.io.IOException;

// Sample to update credentials in transfer config.
public class UpdateCredentials {

  public static void main(String[] args) throws IOException {
    // TODO(developer): Replace these variables before running the sample.
    String configId = "MY_CONFIG_ID";
    String serviceAccount = "MY_SERVICE_ACCOUNT";
    TransferConfig [https://cloud.google.com/java/docs/reference/google-cloud-bigquerydatatransfer/latest/com.google.cloud.bigquery.datatransfer.v1.TransferConfig.html?hl=ko] transferConfig = TransferConfig [https://cloud.google.com/java/docs/reference/google-cloud-bigquerydatatransfer/latest/com.google.cloud.bigquery.datatransfer.v1.TransferConfig.html?hl=ko].newBuilder().setName(configId).build();
    FieldMask [https://cloud.google.com/java/docs/reference/protobuf/latest/com.google.protobuf.FieldMask.html?hl=ko] updateMask = FieldMaskUtil [https://cloud.google.com/java/docs/reference/protobuf/latest/com.google.protobuf.util.FieldMaskUtil.html?hl=ko].fromString("service_account_name");
    updateCredentials(transferConfig, serviceAccount, updateMask);
  }

  public static void updateCredentials(
      TransferConfig [https://cloud.google.com/java/docs/reference/google-cloud-bigquerydatatransfer/latest/com.google.cloud.bigquery.datatransfer.v1.TransferConfig.html?hl=ko] transferConfig, String serviceAccount, FieldMask [https://cloud.google.com/java/docs/reference/protobuf/latest/com.google.protobuf.FieldMask.html?hl=ko] updateMask)
      throws IOException {
    try (DataTransferServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigquerydatatransfer/latest/com.google.cloud.bigquery.datatransfer.v1.DataTransferServiceClient.html?hl=ko] dataTransferServiceClient = DataTransferServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigquerydatatransfer/latest/com.google.cloud.bigquery.datatransfer.v1.DataTransferServiceClient.html?hl=ko].create()) {
      UpdateTransferConfigRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigquerydatatransfer/latest/com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.html?hl=ko] request =
          UpdateTransferConfigRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigquerydatatransfer/latest/com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.html?hl=ko].newBuilder()
              .setTransferConfig(transferConfig)
              .setUpdateMask [https://cloud.google.com/java/docs/reference/google-cloud-bigquerydatatransfer/latest/com.google.cloud.bigquery.datatransfer.v1.UpdateTransferConfigRequest.Builder.html?hl=ko#com_google_cloud_bigquery_datatransfer_v1_UpdateTransferConfigRequest_Builder_setUpdateMask_com_google_protobuf_FieldMask_](updateMask)
              .setServiceAccountName(serviceAccount)
              .build();
      dataTransferServiceClient.updateTransferConfig(request);
      System.out.println("Credentials updated successfully");
    } catch (ApiException [https://cloud.google.com/java/docs/reference/gax/latest/com.google.api.gax.rpc.ApiException.html?hl=ko] ex) {
      System.out.print("Credentials was not updated." + ex.toString());
    }
  }
}

--- 탭: Python [https://cloud.google.com/bigquery/docs/use-service-accounts?hl=ko#python] ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Python 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Python API 참고 문서 [https://cloud.google.com/python/docs/reference/bigquery/latest?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  from google.cloud import bigquery_datatransfer
from google.protobuf import field_mask_pb2

transfer_client = bigquery_datatransfer.DataTransferServiceClient [https://cloud.google.com/python/docs/reference/bigquerydatatransfer/latest/google.cloud.bigquery_datatransfer_v1.services.data_transfer_service.DataTransferServiceClient.html?hl=ko]()

service_account_name = "abcdef-test-sa@abcdef-test.iam.gserviceaccount.com"
transfer_config_name = "projects/1234/locations/us/transferConfigs/abcd"

transfer_config = bigquery_datatransfer.TransferConfig [https://cloud.google.com/python/docs/reference/bigquerydatatransfer/latest/google.cloud.bigquery_datatransfer_v1.types.TransferConfig.html?hl=ko](name=transfer_config_name)

transfer_config = transfer_client.update_transfer_config [https://cloud.google.com/python/docs/reference/bigquerydatatransfer/latest/google.cloud.bigquery_datatransfer_v1.services.data_transfer_service.DataTransferServiceClient.html?hl=ko#google_cloud_bigquery_datatransfer_v1_services_data_transfer_service_DataTransferServiceClient_update_transfer_config](
    {
        "transfer_config": transfer_config,
        "update_mask": field_mask_pb2.FieldMask(paths=["service_account_name"]),
        "service_account_name": service_account_name,
    }
)

print("Updated config: '{}'".format(transfer_config.name))
도움이 되었나요?
의견 보내기