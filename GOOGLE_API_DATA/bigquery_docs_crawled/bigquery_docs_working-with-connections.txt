Source URL: https://cloud.google.com/bigquery/docs/working-with-connections

이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.
Switch to English
BigQuery [https://cloud.google.com/bigquery?hl=ko]
Documentation [https://cloud.google.com/bigquery/docs?hl=ko]
가이드 [https://cloud.google.com/bigquery/docs/introduction?hl=ko]
도움이 되었나요?
의견 보내기
이 페이지의 내용
시작하기 전에
필요한 역할
모든 연결 나열
연결 세부정보 보기
사용자와 연결 공유
연결 수정
연결 삭제
다음 단계
연결 관리
bookmark_border
이 문서에서는 BigQuery 연결을 확인, 나열, 공유, 수정, 삭제하고 문제를 해결하는 방법을 설명합니다.
BigQuery 관리자는 서비스 및 외부 데이터 소스에 연결하는 데 사용되는 연결을 만들고 관리할 수 있습니다. BigQuery 분석가는 BigQuery로 데이터를 이동하거나 복사하지 않고도 이러한 연결을 사용하여 외부 데이터 소스에 대해 쿼리를 제출할 수 있습니다. 만들 수 있는 연결 유형은 다음과 같습니다.
Amazon S3 연결 [https://cloud.google.com/bigquery/docs/omni-aws-create-connection?hl=ko]
Apache Spark 연결 [https://cloud.google.com/bigquery/docs/connect-to-spark?hl=ko]
Blob Storage 연결 [https://cloud.google.com/bigquery/docs/omni-azure-create-connection?hl=ko]
Cloud Storage 데이터에 연결하고 원격 함수 [https://cloud.google.com/bigquery/docs/remote-functions?hl=ko]를 구현하기 위한 Cloud 리소스 연결 [https://cloud.google.com/bigquery/docs/create-cloud-resource-connection?hl=ko]
Spanner 연결 [https://cloud.google.com/bigquery/docs/connect-to-spanner?hl=ko]
Cloud SQL 연결 [https://cloud.google.com/bigquery/docs/connect-to-sql?hl=ko]
AlloyDB 연결 [https://cloud.google.com/bigquery/docs/connect-to-alloydb?hl=ko]
프로젝트의 기본 연결을 만들려면 기본 연결 개요 [https://cloud.google.com/bigquery/docs/default-connections?hl=ko]를 참고하세요.
시작하기 전에
연결 [https://cloud.google.com/bigquery/docs/connections-api-intro?hl=ko]이 작동하는지 확인합니다. 연결은 유형별 [https://cloud.google.com/bigquery/docs/connections-api-intro?hl=ko#connection_types]로 사용되며 연결된 외부 데이터 소스에 따라 달라집니다.
BigQuery Connection API 사용 설정하기
API 사용 설정하기 [https://console.cloud.google.com/apis/library/bigqueryconnection.googleapis.com?hl=ko]
프로젝트의 서비스 계정 목록 [https://cloud.google.com/iam/docs/service-accounts-list-edit?hl=ko#listing]을 볼 수 있는지 확인합니다. BigQuery는 서비스 계정 [https://cloud.google.com/iam/docs/service-agents?hl=ko]을 만들고 사용하여 외부 데이터 소스에 연결합니다. 연결을 만들면 Google Cloud관리 Identity and Access Management (IAM) 서비스 계정 [https://cloud.google.com/iam/docs/service-account-types?hl=ko#google-managed]이 자동으로 생성됩니다. 특정 연결에 연결된 서비스 계정을 보려면 연결 세부정보를 확인 [https://cloud.google.com/bigquery/docs/working-with-connections?hl=ko#view-connections]합니다.
필요한 역할
연결을 관리하는 데 필요한 권한을 얻으려면 관리자에게 다음 IAM 역할을 부여해 달라고 요청하세요.
연결 세부정보 보기 [https://cloud.google.com/bigquery/docs/working-with-connections?hl=ko#view-connections]: 데이터 세트의 BigQuery 연결 사용자 [https://cloud.google.com/iam/docs/roles-permissions/bigquery?hl=ko#bigquery.connectionUser] (roles/bigquery.connectionUser)
모든 연결 나열 [https://cloud.google.com/bigquery/docs/working-with-connections?hl=ko#list-connections]: 데이터 세트의 BigQuery 연결 사용자 [https://cloud.google.com/iam/docs/roles-permissions/bigquery?hl=ko#bigquery.connectionUser] (roles/bigquery.connectionUser)
연결 공유 [https://cloud.google.com/bigquery/docs/working-with-connections?hl=ko#share-connections]: 연결에 대한 BigQuery 연결 관리자 [https://cloud.google.com/iam/docs/roles-permissions/bigquery?hl=ko#bigquery.connectionAdmin] (roles/bigquery.connectionAdmin)
연결 수정 [https://cloud.google.com/bigquery/docs/working-with-connections?hl=ko#edit-connections]: 연결에 대한 BigQuery 연결 관리자 [https://cloud.google.com/iam/docs/roles-permissions/bigquery?hl=ko#bigquery.connectionAdmin] (roles/bigquery.connectionAdmin)
연결 삭제 [https://cloud.google.com/bigquery/docs/working-with-connections?hl=ko#delete-connections]: 연결에 대한 BigQuery 연결 관리자 [https://cloud.google.com/iam/docs/roles-permissions/bigquery?hl=ko#bigquery.connectionAdmin] (roles/bigquery.connectionAdmin)
역할 부여에 대한 자세한 내용은 프로젝트, 폴더, 조직에 대한 액세스 관리 [https://cloud.google.com/iam/docs/granting-changing-revoking-access?hl=ko]를 참조하세요.
커스텀 역할 [https://cloud.google.com/iam/docs/creating-custom-roles?hl=ko]이나 다른 사전 정의된 역할 [https://cloud.google.com/iam/docs/roles-overview?hl=ko#predefined]을 통해 필요한 권한을 얻을 수도 있습니다.
기본 연결을 만들고 사용하는 데 필요한 역할에 대한 자세한 내용은 필수 역할 및 권한 [https://cloud.google.com/bigquery/docs/default-connections?hl=ko#required_roles_and_permissions]을 참고하세요.
이러한 사전 정의된 역할에는 이 문서의 작업을 수행하는 데 필요한 권한이 포함되어 있습니다. 필요한 정확한 권한을 보려면 필수 권한 섹션을 확장하세요.
필수 권한
모든 연결 나열
다음 옵션 중 하나를 선택합니다.
--- 탭: 콘솔 ---
BigQuery 페이지로 이동합니다.

BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko] 

이러한 연결은 프로젝트의 외부 연결 그룹에 나열됩니다.
탐색기 창에서 프로젝트 이름 > 외부 연결을 클릭하면 모든 연결 목록이 표시됩니다.

--- 탭: bq ---
bq ls 명령어를 입력하고 --connection 플래그를 지정합니다. 선택적으로 나열할 연결 위치 및 프로젝트를 식별하기 위해 --project_id 및 --location 플래그를 지정합니다.

bq ls --connection --project_id=PROJECT_ID --location=REGION


다음을 바꿉니다.


PROJECT_ID: Google Cloud 프로젝트 ID
REGION: 연결 리전 [https://cloud.google.com/bigquery/docs/locations?hl=ko#supported_locations]

--- 탭: API ---
REST API 참조 섹션에서 projects.locations.connections.list 메서드를 사용 [https://cloud.google.com/bigquery/docs/reference/bigqueryconnection/rest/v1/projects.locations.connections?hl=ko#methods]합니다.

--- 탭: Java ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Java 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Java API 참고 문서 [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/overview?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  import com.google.cloud.bigquery.connection.v1.ListConnectionsRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ListConnectionsRequest.html?hl=ko];
import com.google.cloud.bigquery.connection.v1.LocationName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.LocationName.html?hl=ko];
import com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko];
import java.io.IOException;

// Sample to get list of connections
public class ListConnections {

  public static void main(String[] args) throws IOException {
    // TODO(developer): Replace these variables before running the sample.
    String projectId = "MY_PROJECT_ID";
    String location = "MY_LOCATION";
    listConnections(projectId, location);
  }

  static void listConnections(String projectId, String location) throws IOException {
    try (ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko] client = ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko].create()) {
      LocationName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.LocationName.html?hl=ko] parent = LocationName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.LocationName.html?hl=ko].of(projectId, location);
      int pageSize = 10;
      ListConnectionsRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ListConnectionsRequest.html?hl=ko] request =
          ListConnectionsRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ListConnectionsRequest.html?hl=ko].newBuilder()
              .setParent(parent.toString [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.LocationName.html?hl=ko#com_google_cloud_bigquery_connection_v1_LocationName_toString__]())
              .setPageSize [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ListConnectionsRequest.Builder.html?hl=ko#com_google_cloud_bigquery_connection_v1_ListConnectionsRequest_Builder_setPageSize_int_](pageSize)
              .build();
      client
          .listConnections(request)
          .iterateAll()
          .forEach(con -> System.out.println("Connection Id :" + con.getName()));
    }
  }
}
연결 세부정보 보기
연결을 만든 후에는 연결의 구성에 대한 정보를 가져올 수 있습니다. 구성에는 전송을 만들 때 사용자가 입력한 값이 포함됩니다.
다음 옵션 중 하나를 선택합니다.
--- 탭: 콘솔 ---
BigQuery 페이지로 이동합니다.

BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko] 

이러한 연결은 프로젝트의 외부 연결 그룹에 나열됩니다.
탐색기 창에서 프로젝트 이름 > 외부 연결 > 연결을 클릭합니다.

--- 탭: bq ---
bq show 명령어를 입력하고 --connection 플래그를 지정합니다. 선택적으로 연결 ID를 해당 연결의 프로젝트 ID 및 리전과 연결합니다.

bq show --connection PROJECT_ID.REGION.CONNECTION_ID


다음을 바꿉니다.


PROJECT_ID: Google Cloud 프로젝트 ID
REGION: 연결 리전 [https://cloud.google.com/bigquery/docs/locations?hl=ko#supported_locations]
CONNECTION_I: 연결 ID

--- 탭: API ---
REST API 참조 섹션에서 projects.locations.connections.get 메서드 [https://cloud.google.com/bigquery/docs/reference/bigqueryconnection/rest/v1/projects.locations.connections?hl=ko#methods]를 사용합니다.

--- 탭: Java ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Java 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Java API 참고 문서 [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/overview?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  import com.google.cloud.bigquery.connection.v1.Connection [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.Connection.html?hl=ko];
import com.google.cloud.bigquery.connection.v1.ConnectionName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko];
import com.google.cloud.bigquery.connection.v1.GetConnectionRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.GetConnectionRequest.html?hl=ko];
import com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko];
import java.io.IOException;

// Sample to get connection
public class GetConnection {

  public static void main(String[] args) throws IOException {
    // TODO(developer): Replace these variables before running the sample.
    String projectId = "MY_PROJECT_ID";
    String location = "MY_LOCATION";
    String connectionId = "MY_CONNECTION_ID";
    getConnection(projectId, location, connectionId);
  }

  static void getConnection(String projectId, String location, String connectionId)
      throws IOException {
    try (ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko] client = ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko].create()) {
      ConnectionName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko] name = ConnectionName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko].of(projectId, location, connectionId);
      GetConnectionRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.GetConnectionRequest.html?hl=ko] request =
          GetConnectionRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.GetConnectionRequest.html?hl=ko].newBuilder().setName(name.toString [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko#com_google_cloud_bigquery_connection_v1_ConnectionName_toString__]()).build();
      Connection [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.Connection.html?hl=ko] response = client.getConnection(request);
      System.out.println("Connection info retrieved successfully :" + response.getName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.Connection.html?hl=ko#com_google_cloud_bigquery_connection_v1_Connection_getName__]());
    }
  }
}
사용자와 연결 공유
데이터를 쿼리하고 연결을 관리할 수 있도록 사용자에게 다음 역할을 부여할 수 있습니다.
roles/bigquery.connectionUser: 사용자가 연결을 사용하여 외부 데이터 소스에 연결하고 쿼리를 실행할 수 있습니다.
roles/bigquery.connectionAdmin: 사용자가 연결을 관리할 수 있습니다.
BigQuery의 IAM 역할과 권한에 대한 자세한 내용은 사전 정의된 역할 및 권한 [https://cloud.google.com/bigquery/access-control?hl=ko]을 참조하세요.
다음 옵션 중 하나를 선택합니다.
--- 탭: 콘솔 ---
BigQuery 페이지로 이동합니다.

BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko] 

이러한 연결은 프로젝트의 외부 연결 그룹에 나열됩니다.
탐색기 창에서 프로젝트 이름 > 외부 연결 > 연결을 클릭합니다.
세부정보 창에서 공유를 클릭하여 연결을 공유합니다.
다음 작업을 수행합니다.


연결 권한 대화상자에서 주 구성원을 추가하거나 수정하여 다른 주 구성원과 연결을 공유합니다.
저장을 클릭합니다.

--- 탭: bq ---
bq 명령줄 도구로 연결을 공유할 수 없습니다.
연결을 공유하려면 Google Cloud 콘솔 또는 BigQuery Connections API 메서드를 사용하여 연결을 공유합니다.

--- 탭: API ---
BigQuery 연결 REST API 참조 섹션의 projects.locations.connections.setIAM 메서드 [https://cloud.google.com/bigquery/docs/reference/bigqueryconnection/rest/v1/projects.locations.connections?hl=ko#methods]를 사용하고 policy 리소스의 인스턴스를 지정합니다.

--- 탭: 자바 ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Java 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Java API 참고 문서 [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/overview?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  import com.google.api.resourcenames.ResourceName [https://cloud.google.com/java/docs/reference/api-common/latest/com.google.api.resourcenames.ResourceName.html?hl=ko];
import com.google.cloud.bigquery.connection.v1.ConnectionName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko];
import com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko];
import com.google.iam.v1.Binding [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.Binding.html?hl=ko];
import com.google.iam.v1.Policy [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.Policy.html?hl=ko];
import com.google.iam.v1.SetIamPolicyRequest [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.SetIamPolicyRequest.html?hl=ko];
import java.io.IOException;

// Sample to share connections
public class ShareConnection {

  public static void main(String[] args) throws IOException {
    // TODO(developer): Replace these variables before running the sample.
    String projectId = "MY_PROJECT_ID";
    String location = "MY_LOCATION";
    String connectionId = "MY_CONNECTION_ID";
    shareConnection(projectId, location, connectionId);
  }

  static void shareConnection(String projectId, String location, String connectionId)
      throws IOException {
    try (ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko] client = ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko].create()) {
      ResourceName [https://cloud.google.com/java/docs/reference/api-common/latest/com.google.api.resourcenames.ResourceName.html?hl=ko] resource = ConnectionName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko].of(projectId, location, connectionId);
      Binding [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.Binding.html?hl=ko] binding =
          Binding [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.Binding.html?hl=ko].newBuilder()
              .addMembers [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.Binding.Builder.html?hl=ko#com_google_iam_v1_Binding_Builder_addMembers_java_lang_String_]("group:example-analyst-group@google.com")
              .setRole("roles/bigquery.connectionUser")
              .build();
      Policy [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.Policy.html?hl=ko] policy = Policy [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.Policy.html?hl=ko].newBuilder().addBindings [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.Policy.Builder.html?hl=ko#com_google_iam_v1_Policy_Builder_addBindings_com_google_iam_v1_Binding_](binding).build();
      SetIamPolicyRequest [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.SetIamPolicyRequest.html?hl=ko] request =
          SetIamPolicyRequest [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.SetIamPolicyRequest.html?hl=ko].newBuilder()
              .setResource(resource.toString())
              .setPolicy [https://cloud.google.com/java/docs/reference/proto-google-iam-v1/latest/com.google.iam.v1.SetIamPolicyRequest.Builder.html?hl=ko#com_google_iam_v1_SetIamPolicyRequest_Builder_setPolicy_com_google_iam_v1_Policy_](policy)
              .build();
      client.setIamPolicy(request);
      System.out.println("Connection shared successfully");
    }
  }
}
연결 수정
연결에는 연결을 만든 사용자의 사용자 인증 정보가 사용됩니다. 연결에 연결된 사용자를 변경해야 할 경우 사용자의 사용자 인증 정보를 업데이트할 수 있습니다. 이 기능은 연결을 만든 사용자가 조직에 더 이상 없을 때 유용합니다.
연결의 다음 요소는 수정할 수 없습니다.
연결 유형
연결 ID
위치
다음 옵션 중 하나를 선택합니다.
--- 탭: 콘솔 ---
BigQuery 페이지로 이동합니다.

BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko] 

이러한 연결은 프로젝트의 외부 연결 그룹에 나열됩니다.
탐색기 창에서 프로젝트 이름 > 외부 연결 > 연결을 클릭합니다.
세부정보 패널에서 세부정보를 수정하려면 
mode_edit
 세부정보 수정을 클릭합니다. 다음 작업을 수행합니다.


연결 수정 대화상자에서 사용자 인증 정보를 포함한 연결 세부정보를 수정합니다.
연결 업데이트를 클릭합니다.

--- 탭: bq ---
bq update 명령어를 입력하고 연결 플래그 --connection을 지정합니다. 정규화된 connection_id가 필요합니다.

  bq update --connection --connection_type='CLOUD_SQL'
      --properties='{"instanceId" : "INSTANCE",
      "database" : "DATABASE", "type" : "MYSQL" }'
      --connection_credential='{"username":"USERNAME", "password":"PASSWORD"}'
      PROJECT.REGION.CONNECTION_ID
 

다음을 바꿉니다.


INSTANCE: Cloud SQL 인스턴스
DATABASE: 데이터베이스 이름
USERNAME: Cloud SQL 데이터베이스의 사용자 이름
PASSWORD: Cloud SQL 데이터베이스의 비밀번호
PROJECT: Google Cloud 프로젝트 ID입니다.
REGION: 연결 리전 [https://cloud.google.com/bigquery/docs/locations?hl=ko#supported_locations]
CONNECTION_ID: 연결 ID


예를 들어 다음 명령어는 ID federation-test 및 연결 ID test-mysql로 프로젝트에 있는 연결을 업데이트합니다.

bq update --connection --connection_type='CLOUD_SQL'
    --properties='{"instanceId" : "federation-test:us-central1:new-mysql",
    "database" : "imdb2", "type" : "MYSQL" }'
    --connection_credential='{"username":"my_username",
    "password":"my_password"}' federation-test.us.test-mysql

--- 탭: API ---
REST API 참조 섹션에서 projects.locations.connections.patch 메서드 [https://cloud.google.com/bigquery/docs/reference/bigqueryconnection/rest/v1/projects.locations.connections?hl=ko#methods]를 참조하고 connection의 인스턴스를 지정합니다.

--- 탭: Java ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Java 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Java API 참고 문서 [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/overview?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  import com.google.cloud.bigquery.connection.v1.Connection [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.Connection.html?hl=ko];
import com.google.cloud.bigquery.connection.v1.ConnectionName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko];
import com.google.cloud.bigquery.connection.v1.UpdateConnectionRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.UpdateConnectionRequest.html?hl=ko];
import com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko];
import com.google.protobuf.FieldMask [https://cloud.google.com/java/docs/reference/protobuf/latest/com.google.protobuf.FieldMask.html?hl=ko];
import com.google.protobuf.util.FieldMaskUtil [https://cloud.google.com/java/docs/reference/protobuf/latest/com.google.protobuf.util.FieldMaskUtil.html?hl=ko];
import java.io.IOException;

// Sample to update connection
public class UpdateConnection {

  public static void main(String[] args) throws IOException {
    // TODO(developer): Replace these variables before running the sample.
    String projectId = "MY_PROJECT_ID";
    String location = "MY_LOCATION";
    String connectionId = "MY_CONNECTION_ID";
    String description = "MY_DESCRIPTION";
    Connection [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.Connection.html?hl=ko] connection = Connection [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.Connection.html?hl=ko].newBuilder().setDescription [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.Connection.Builder.html?hl=ko#com_google_cloud_bigquery_connection_v1_Connection_Builder_setDescription_java_lang_String_](description).build();
    updateConnection(projectId, location, connectionId, connection);
  }

  static void updateConnection(
      String projectId, String location, String connectionId, Connection [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.Connection.html?hl=ko] connection)
      throws IOException {
    try (ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko] client = ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko].create()) {
      ConnectionName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko] name = ConnectionName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko].of(projectId, location, connectionId);
      FieldMask [https://cloud.google.com/java/docs/reference/protobuf/latest/com.google.protobuf.FieldMask.html?hl=ko] updateMask = FieldMaskUtil [https://cloud.google.com/java/docs/reference/protobuf/latest/com.google.protobuf.util.FieldMaskUtil.html?hl=ko].fromString("description");
      UpdateConnectionRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.UpdateConnectionRequest.html?hl=ko] request =
          UpdateConnectionRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.UpdateConnectionRequest.html?hl=ko].newBuilder()
              .setName(name.toString [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko#com_google_cloud_bigquery_connection_v1_ConnectionName_toString__]())
              .setConnection(connection)
              .setUpdateMask [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.UpdateConnectionRequest.Builder.html?hl=ko#com_google_cloud_bigquery_connection_v1_UpdateConnectionRequest_Builder_setUpdateMask_com_google_protobuf_FieldMask_](updateMask)
              .build();
      Connection [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.Connection.html?hl=ko] response = client.updateConnection(request);
      System.out.println("Connection updated successfully :" + response.getDescription [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.Connection.html?hl=ko#com_google_cloud_bigquery_connection_v1_Connection_getDescription__]());
    }
  }
}
연결 삭제
다음 옵션 중 하나를 선택합니다.
--- 탭: 콘솔 ---
BigQuery 페이지로 이동합니다.

BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko] 

이러한 연결은 프로젝트의 외부 연결 그룹에 나열됩니다.
탐색기 창에서 프로젝트 이름 > 외부 연결 > 연결을 클릭합니다.
세부정보 창에서 delete 삭제를 클릭하여 연결을 삭제합니다.
연결을 삭제할까요? 대화상자에서 삭제 확인을 위해 delete를 입력합니다.
삭제를 클릭합니다.

--- 탭: bq ---
bq rm 명령어를 입력하고 연결 플래그 --connection을 지정합니다. 정규화된 connection_id가 필요합니다.

bq rm --connection PROJECT_ID.REGION.CONNECTION_ID


다음을 바꿉니다.


PROJECT_ID: Google Cloud 프로젝트 ID
REGION: 연결 리전 [https://cloud.google.com/bigquery/docs/locations?hl=ko#supported_locations]
CONNECTION_ID: 연결 ID

--- 탭: API ---
REST API 참조 섹션의 projects.locations.connections.delete 메서드 [https://cloud.google.com/bigquery/docs/reference/bigqueryconnection/rest/v1/projects.locations.connections?hl=ko#methods]를 참조하세요.

--- 탭: Java ---
이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 Java 설정 안내를 따르세요.
        
      
      
  자세한 내용은 BigQuery Java API 참고 문서 [https://cloud.google.com/java/docs/reference/google-cloud-bigquery/latest/overview?hl=ko]를 확인하세요.
  
    
    
      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.
      
    
      






    
  
  
  
  




















  





  
    
  
  











  









  




  



  


  import com.google.cloud.bigquery.connection.v1.ConnectionName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko];
import com.google.cloud.bigquery.connection.v1.DeleteConnectionRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.DeleteConnectionRequest.html?hl=ko];
import com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko];
import java.io.IOException;

// Sample to delete a connection
public class DeleteConnection {

  public static void main(String[] args) throws IOException {
    // TODO(developer): Replace these variables before running the sample.
    String projectId = "MY_PROJECT_ID";
    String location = "MY_LOCATION";
    String connectionName = "MY_CONNECTION_NAME";
    deleteConnection(projectId, location, connectionName);
  }

  static void deleteConnection(String projectId, String location, String connectionName)
      throws IOException {
    try (ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko] client = ConnectionServiceClient [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigqueryconnection.v1.ConnectionServiceClient.html?hl=ko].create()) {
      ConnectionName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko] name = ConnectionName [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko].of(projectId, location, connectionName);
      DeleteConnectionRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.DeleteConnectionRequest.html?hl=ko] request =
          DeleteConnectionRequest [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.DeleteConnectionRequest.html?hl=ko].newBuilder().setName(name.toString [https://cloud.google.com/java/docs/reference/google-cloud-bigqueryconnection/latest/com.google.cloud.bigquery.connection.v1.ConnectionName.html?hl=ko#com_google_cloud_bigquery_connection_v1_ConnectionName_toString__]()).build();
      client.deleteConnection(request);
      System.out.println("Connection deleted successfully");
    }
  }
}
다음 단계
원격 함수 사용 방법 [https://cloud.google.com/bigquery/docs/remote-functions?hl=ko] 알아보기
Spark에 저장 프로시저를 사용하는 [https://cloud.google.com/bigquery/docs/spark-procedures?hl=ko] 방법 알아보기
도움이 되었나요?
의견 보내기