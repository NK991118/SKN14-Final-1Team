Source URL: https://cloud.google.com/bigquery/docs/time-series-forecasting-holidays-tutorial

BigQuery [https://cloud.google.com/bigquery?hl=ko]
Documentation [https://cloud.google.com/bigquery/docs?hl=ko]
가이드 [https://cloud.google.com/bigquery/docs/introduction?hl=ko]
도움이 되었나요?
의견 보내기
이 페이지의 내용
필수 권한 [https://cloud.google.com/bigquery/docs/time-series-forecasting-holidays-tutorial?hl=ko#required_permissions]
비용 [https://cloud.google.com/bigquery/docs/time-series-forecasting-holidays-tutorial?hl=ko#costs]
시작하기 전에 [https://cloud.google.com/bigquery/docs/time-series-forecasting-holidays-tutorial?hl=ko#before_you_begin]
데이터 세트 만들기 [https://cloud.google.com/bigquery/docs/time-series-forecasting-holidays-tutorial?hl=ko#create_a_dataset]
시계열 데이터 준비 [https://cloud.google.com/bigquery/docs/time-series-forecasting-holidays-tutorial?hl=ko#prepare_the_time-series_data]
ARIMA_PLUS 시계열 예측 모델에서 커스텀 공휴일 사용
bookmark_border
이 튜토리얼에서는 다음 작업을 처리하는 방법을 보여줍니다.
기본 제공 공휴일만 사용하는 ARIMA_PLUS 시계열 예측 모델 [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-create-time-series?hl=ko] 만들기
기본 공휴일 외에도 커스텀 공휴일을 사용하는 ARIMA_PLUS 시계열 예측 모델 만들기
이러한 모델의 예측 결과를 시각화하기
모델을 검사하여 모델링되는 휴일을 확인하기
커스텀 공휴일이 예측 결과에 미치는 영향을 평가하기
기본 제공 공휴일만 사용하는 모델의 성능과 기본 제공 공휴일 외에도 커스텀 공휴일을 사용하는 모델의 성능을 비교하기
이 튜토리얼에서는 bigquery-public-data.wikipedia.pageviews_* 공개 테이블을 사용합니다.
필수 권한
데이터 세트를 만들려면 bigquery.datasets.create IAM 권한이 필요합니다.
모델을 만들려면 다음 권한이 필요합니다.
bigquery.jobs.create
bigquery.models.create
bigquery.models.getData
bigquery.models.updateData
추론을 실행하려면 다음 권한이 필요합니다.
bigquery.models.getData
bigquery.jobs.create
BigQuery에서 IAM 역할 및 권한에 대한 자세한 내용은 IAM 소개 [https://cloud.google.com/bigquery/docs/access-control?hl=ko]를 참조하세요.
비용
이 문서에서는 비용이 청구될 수 있는 Google Cloud구성요소( )를 사용합니다.
BigQuery: You incur costs for the data you process in BigQuery.
프로젝트 사용량을 기준으로 예상 비용을 산출하려면 가격 계산기 [https://cloud.google.com/products/calculator?hl=ko]를 사용합니다.
Google Cloud 신규 사용자는 무료 체험판 [https://cloud.google.com/free?hl=ko]을 사용할 수 있습니다.
자세한 내용은 BigQuery 가격 [https://cloud.google.com/bigquery/pricing?hl=ko]을 참조하세요.
시작하기 전에
Sign in to your Google Cloud account. If you're new to Google Cloud, create an account [https://console.cloud.google.com/freetrial?hl=ko] to evaluate how our products perform in real-world scenarios. New customers also get $300 in free credits to run, test, and deploy workloads.
In the Google Cloud console, on the project selector page, select or create a Google Cloud project.
Note: If you don't plan to keep the resources that you create in this procedure, create a project instead of selecting an existing project. After you finish these steps, you can delete the project, removing all resources associated with the project.
Go to project selector [https://console.cloud.google.com/projectselector2/home/dashboard?hl=ko]
Verify that billing is enabled for your Google Cloud project [https://cloud.google.com/billing/docs/how-to/verify-billing-enabled?hl=ko#confirm_billing_is_enabled_on_a_project].
Enable the BigQuery API.
Enable the API [https://console.cloud.google.com/flows/enableapi?apiid=bigquery.googleapis.com&hl=ko]
데이터 세트 만들기
ML 모델을 저장할 BigQuery 데이터 세트를 만듭니다.
--- 탭: 콘솔 [https://cloud.google.com/bigquery/docs/time-series-forecasting-holidays-tutorial?hl=ko#%EC%BD%98%EC%86%94] ---
Google Cloud 콘솔에서 BigQuery 페이지로 이동합니다.

BigQuery 페이지로 이동 [https://console.cloud.google.com/bigquery?hl=ko] 
탐색기 창에서 프로젝트 이름을 클릭합니다.
more_vert 작업 보기 > 데이터 세트 만들기를 클릭합니다.


데이터 세트 만들기 페이지에서 다음을 수행합니다.


데이터 세트 ID에 bqml_tutorial를 입력합니다.
위치 유형에 대해 멀티 리전을 선택한 다음 US(미국 내 여러 리전)를 선택합니다.
나머지 기본 설정은 그대로 두고 데이터 세트 만들기를 클릭합니다.

--- 탭: bq [https://cloud.google.com/bigquery/docs/time-series-forecasting-holidays-tutorial?hl=ko#bq] ---
새 데이터 세트를 만들려면 --location 플래그와 함께 bq mk [https://cloud.google.com/bigquery/docs/reference/bq-cli-reference?hl=ko#mk-dataset] 명령어를 실행합니다. 사용할 수 있는 전체 파라미터 목록은 bq mk --dataset 명령어 [https://cloud.google.com/bigquery/docs/reference/bq-cli-reference?hl=ko#mk-dataset] 참조를 확인하세요.


데이터 위치가 US로 설정되고 설명이 BigQuery ML tutorial dataset인 bqml_tutorial 데이터 세트를 만듭니다.

bq --location=US mk -d \
 --description "BigQuery ML tutorial dataset." \
 bqml_tutorial

--dataset 플래그를 사용하는 대신 이 명령어는 -d 단축키를 사용합니다.
-d와 --dataset를 생략하면 이 명령어는 기본적으로 데이터 세트를 만듭니다.
데이터 세트가 생성되었는지 확인합니다.

bq ls

--- 탭: API [https://cloud.google.com/bigquery/docs/time-series-forecasting-holidays-tutorial?hl=ko#api] ---
데이터 세트 리소스 [https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets?hl=ko]가 정의된 datasets.insert [https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets/insert?hl=ko] 메서드를 호출합니다.

{
  "datasetReference": {
     "datasetId": "bqml_tutorial"
  }
}

--- 탭: BigQuery DataFrames [https://cloud.google.com/bigquery/docs/time-series-forecasting-holidays-tutorial?hl=ko#bigquery-dataframes] ---
이 샘플을 사용해 보기 전에 BigQuery DataFrames를 사용하여 BigQuery 빠른 시작 [https://cloud.google.com/bigquery/docs/dataframes-quickstart?hl=ko]의 BigQuery DataFrames 설정 안내를 따르세요.
    자세한 내용은 BigQuery DataFrames 참고 문서 [https://cloud.google.com/python/docs/reference/bigframes/latest?hl=ko]를 확인하세요.
  BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.
    자세한 내용은 로컬 개발 환경의 ADC 설정 [https://cloud.google.com/docs/authentication/set-up-adc-local-dev-environment?hl=ko]을 참조하세요.
   











  
  
  
  





  
  
  
    
  




  



  











  



  
  
  
  
  




















  





  
    
  
  











  









  




  



  


  import google.cloud.bigquery

bqclient = google.cloud.bigquery [https://cloud.google.com/python/docs/reference/bigquery/latest/?hl=ko].Client [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client.html?hl=ko]()
bqclient.create_dataset [https://cloud.google.com/python/docs/reference/bigquery/latest/google.cloud.bigquery.client.Client.html?hl=ko#google_cloud_bigquery_client_Client_create_dataset]("bqml_tutorial", exists_ok=True)
시계열 데이터 준비
Google I/O [https://en.wikipedia.org/wiki/Google_I/O] 페이지의 Wikipedia 페이지 조회 데이터를 일별로 그룹화하여 단일 테이블로 집계합니다.
BigQuery 페이지로 이동합니다.
BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko]
SQL 편집자 창에서 다음 SQL 문을 실행합니다.
CREATE OR REPLACE TABLE `bqml_tutorial.googleio_page_views`
AS
SELECT
  DATETIME_TRUNC(datehour, DAY) AS date,
  SUM(views) AS views
FROM
  `bigquery-public-data.wikipedia.pageviews_*`
WHERE
  datehour >= '2017-01-01'
  AND datehour < '2023-01-01'
  AND title = 'Google_I/O'
GROUP BY
  DATETIME_TRUNC(datehour, DAY)
기본 공휴일을 사용하는 시계열 예측 모델 만들기
2022년 이전의 페이지 조회 데이터를 기반으로 하고 기본 공휴일을 고려하여 Wikipedia 'Google I/O' 페이지의 일일 페이지 조회수를 예측하는 모델을 만듭니다.
BigQuery 페이지로 이동합니다.
BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko]
SQL 편집자 창에서 다음 SQL 문을 실행합니다.
CREATE OR REPLACE MODEL `bqml_tutorial.forecast_googleio`
  OPTIONS (
    model_type = 'ARIMA_PLUS',
    holiday_region = 'US',
    time_series_timestamp_col = 'date',
    time_series_data_col = 'views',
    data_frequency = 'DAILY',
    horizon = 365)
AS
SELECT
  *
FROM
  `bqml_tutorial.googleio_page_views`
WHERE
  date < '2022-01-01';
예측 결과 시각화
기본 제공 공휴일을 사용하여 모델을 만든 후 bqml_tutorial.googleio_page_views 테이블의 원본 데이터를 ML.EXPLAIN_FORECAST 함수 [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-explain-forecast?hl=ko]의 예측 값과 조인합니다. 그런 다음 Looker Studio를 사용 [https://cloud.google.com/bigquery/docs/visualize-looker-studio?hl=ko]하여 시각화합니다.
BigQuery 페이지로 이동합니다.
BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko]
SQL 편집자 창에서 다음 SQL 문을 실행합니다.
SELECT
  original.date,
  original.views AS original_views,
  explain_forecast.time_series_adjusted_data
    AS adjusted_views_without_custom_holiday,
FROM
  `bqml_tutorial.googleio_page_views` original
INNER JOIN
  (
    SELECT
      *
    FROM
      ML.EXPLAIN_FORECAST(
        MODEL `bqml_tutorial.forecast_googleio`,
        STRUCT(365 AS horizon))
  ) explain_forecast
  ON
    TIMESTAMP(original.date)
    = explain_forecast.time_series_timestamp
ORDER BY
  original.date;
쿼리 결과 창에서 데이터 탐색을 클릭한 후 Looker Studio로 탐색을 클릭합니다. Looker Studio가 새 탭에서 열립니다.
Looker Studio 탭에서 차트 추가를 클릭한 다음 시계열 차트를 클릭합니다.
보고서에 차트를 배치합니다.
차트 창의 설정 탭에서 측정항목 추가를 클릭하고 adjusted_views_without_custom_holiday를 선택합니다.
차트는 다음과 유사합니다.
예측 모델이 일반적인 추세를 꽤 잘 캡처하는 것을 확인할 수 있습니다. 하지만 이전 Google I/O 이벤트와 관련된 트래픽 증가를 캡처하지 못하여 정확한 예측을 생성할 수 없습니다.
다음 섹션에서는 이러한 제한사항을 해결하는 방법을 보여줍니다.
기본 공휴일 및 커스텀 공휴일을 사용하는 시계열 예측 모델 만들기
Google I/O 기록 [https://en.wikipedia.org/wiki/Google_I/O#History]에서 확인할 수 있듯이 Google I/O 이벤트는 2017년부터 2022년까지 다른 날짜에 개최되었습니다. 이러한 변화를 고려하기 위해 2022년 이전의 페이지 조회 데이터를 기반으로 2022년까지 Wikipedia 'Google_I/O' 페이지의 페이지 조회수를 예측하고 커스텀 휴일을 사용하여 매년 열리는 Google I/O 이벤트 나타내는 모델을 만듭니다. 이 모델에서는 이벤트 전후의 잠재적인 페이지 트래픽을 더 잘 포착하기 위해 이벤트 날짜 근처 3일을 포함하는 연휴 효과 기간도 조정합니다.
BigQuery 페이지로 이동합니다.
BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko]
SQL 편집자 창에서 다음 SQL 문을 실행합니다.
CREATE OR REPLACE MODEL `bqml_tutorial.forecast_googleio_with_custom_holiday`
  OPTIONS (
    model_type = 'ARIMA_PLUS',
    holiday_region = 'US',
    time_series_timestamp_col = 'date',
    time_series_data_col = 'views',
    data_frequency = 'DAILY',
    horizon = 365)
AS (
  training_data AS (
      SELECT
        *
      FROM
        `bqml_tutorial.googleio_page_views`
      WHERE
        date < '2022-01-01'
    ),
  custom_holiday AS (
      SELECT
        'US' AS region,
        'GoogleIO' AS holiday_name,
        primary_date,
        1 AS preholiday_days,
        2 AS postholiday_days
      FROM
        UNNEST(
          [
            DATE('2017-05-17'),
            DATE('2018-05-08'),
            DATE('2019-05-07'),
            -- cancelled in 2020 due to pandemic
            DATE('2021-05-18'),
            DATE('2022-05-11')])
          AS primary_date
    )
);
예측 결과 시각화
커스텀 공휴일을 사용하여 모델을 만든 후 bqml_tutorial.googleio_page_views 테이블의 원본 데이터를 ML.EXPLAIN_FORECAST 함수 [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-explain-forecast?hl=ko]의 예측 값과 조인합니다. 그런 다음 Looker Studio를 사용 [https://cloud.google.com/bigquery/docs/visualize-looker-studio?hl=ko]하여 시각화합니다.
BigQuery 페이지로 이동합니다.
BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko]
SQL 편집자 창에서 다음 SQL 문을 실행합니다.
SELECT
  original.date,
  original.views AS original_views,
  explain_forecast.time_series_adjusted_data
    AS adjusted_views_with_custom_holiday,
FROM
  `bqml_tutorial.googleio_page_views` original
INNER JOIN
  (
    SELECT
      *
    FROM
      ML.EXPLAIN_FORECAST(
        MODEL
          `bqml_tutorial.forecast_googleio_with_custom_holiday`,
        STRUCT(365 AS horizon))
  ) explain_forecast
  ON
    TIMESTAMP(original.date)
    = explain_forecast.time_series_timestamp
ORDER BY
  original.date;
쿼리 결과 창에서 데이터 탐색을 클릭한 후 Looker Studio로 탐색을 클릭합니다. Looker Studio가 새 탭에서 열립니다.
Looker Studio 탭에서 차트 추가를 클릭하고 시계열 차트를 클릭한 다음 보고서에 차트를 배치합니다.
차트 창의 설정 탭에서 측정항목 추가를 클릭하고 adjusted_views_with_custom_holiday를 선택합니다.
차트는 다음과 유사합니다.
이와 같이 커스텀 공휴일은 예측 모델의 성능을 향상시켰습니다. 이제 Google I/O로 인한 페이지 조회수 증가를 효과적으로 캡처합니다.
공휴일 정보 검사
ML.HOLIDAY_INFO 함수 [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-holiday-info?hl=ko]를 사용하여 모델링 중에 고려된 공휴일 목록을 검사합니다.
BigQuery 페이지로 이동합니다.
BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko]
SQL 편집자 창에서 다음 SQL 문을 실행합니다.
SELECT *
FROM
  ML.HOLIDAY_INFO(
    MODEL `bqml_tutorial.forecast_googleio_with_custom_holiday`);
결과에는 Google I/O와 공휴일 목록의 기본 공휴일이 모두 표시됩니다.
커스텀 공휴일 효과 평가
ML.EXPLAIN_FORECAST 함수 [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-explain-forecast?hl=ko]를 사용하여 예측 결과에 대한 커스텀 공휴일의 효과를 평가합니다.
BigQuery 페이지로 이동합니다.
BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko]
SQL 편집자 창에서 다음 SQL 문을 실행합니다.
SELECT
  time_series_timestamp,
  holiday_effect_GoogleIO,
  holiday_effect_US_Juneteenth,
  holiday_effect_Christmas,
  holiday_effect_NewYear
FROM
  ML.EXPLAIN_FORECAST(
    model
      `bqml_tutorial.forecast_googleio_with_custom_holiday`,
    STRUCT(365 AS horizon))
WHERE holiday_effect != 0;
결과는 Google I/O가 예측 결과에 많은 양의 공휴일 영향을 미치는 것으로 표시됩니다.
모델 성능 비교
ML.EVALUATE 함수 [https://cloud.google.com/bigquery/docs/reference/standard-sql/bigqueryml-syntax-evaluate?hl=ko]를 사용하여 커스텀 공휴일 없이 만든 첫 번째 모델과 커스텀 공휴일로 만든 두 번째 모델의 성능을 비교합니다. 미래의 커스텀 공휴일을 예측하는 데 두 번째 모델의 성능을 확인하려면 기간을 2022년 Google I/O 주간으로 설정합니다.
BigQuery 페이지로 이동합니다.
BigQuery로 이동 [https://console.cloud.google.com/bigquery?hl=ko]
SQL 편집자 창에서 다음 SQL 문을 실행합니다.
SELECT
  "original" AS model_type,
  *
FROM
  ml.evaluate(
    MODEL `bqml_tutorial.forecast_googleio`,
    (
      SELECT
        *
      FROM
        `bqml_tutorial.googleio_page_views`
      WHERE
        date >= '2022-05-08'
        AND date < '2022-05-12'
    ),
    STRUCT(
      365 AS horizon,
      TRUE AS perform_aggregation))
UNION ALL
SELECT
  "with_custom_holiday" AS model_type,
  *
FROM
  ml.evaluate(
    MODEL
      `bqml_tutorial.forecast_googleio_with_custom_holiday`,
    (
      SELECT
        *
      FROM
        `bqml_tutorial.googleio_page_views`
      WHERE
        date >= '2022-05-08'
        AND date < '2022-05-12'
    ),
    STRUCT(
      365 AS horizon,
      TRUE AS perform_aggregation));
결과에 따르면 두 번째 모델은 성능이 크게 개선되었습니다.
삭제
주의: 프로젝트 삭제가 미치는 영향은 다음과 같습니다.
프로젝트의 모든 항목이 삭제됩니다. 이 문서의 태스크에 기존 프로젝트를 사용한 경우 프로젝트를 삭제하면 프로젝트에서 수행한 다른 작업도 삭제됩니다.
커스텀 프로젝트 ID가 손실됩니다. 이 프로젝트를 만들 때 앞으로 사용할 커스텀 프로젝트 ID를 만들었을 수 있습니다. appspot.com URL과 같이 프로젝트 ID를 사용하는 URL을 보존하려면 전체 프로젝트를 삭제하는 대신 프로젝트 내에서 선택한 리소스만 삭제합니다.
여러 아키텍처, 튜토리얼, 빠른 시작을 살펴보려는 경우 프로젝트를 재사용하면 프로젝트 할당량 한도 초과를 방지할 수 있습니다.
In the Google Cloud console, go to the Manage resources page.
Go to Manage resources [https://console.cloud.google.com/iam-admin/projects?hl=ko]
In the project list, select the project that you want to delete, and then click Delete.
In the dialog, type the project ID, and then click Shut down to delete the project.
도움이 되었나요?
의견 보내기