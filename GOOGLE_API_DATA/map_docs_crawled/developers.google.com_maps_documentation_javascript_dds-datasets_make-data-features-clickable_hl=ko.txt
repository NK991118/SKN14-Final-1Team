Source URL: https://developers.google.com/maps/documentation/javascript/dds-datasets/make-data-features-clickable?hl=ko
Title: 마우스 이벤트 처리

의견 보내기

마우스 이벤트 처리

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/android-sdk/dds-datasets/make-data-features-clickable?hl=ko]

iOS [https://developers.google.com/maps/documentation/ios-sdk/dds-datasets/make-data-features-tappable?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/dds-datasets/make-data-features-clickable?hl=ko]

데이터 기능이 mousemove 및 click 이벤트에 응답하도록 하고 이를 사용하여 사용자 상호작용에 따라 기능의 모양을 변경합니다.

데이터 세트 레이어 이벤트 사용 설정

다음 단계에 따라 데이터 세트 레이어에서 이벤트를 사용 설정합니다.

등록할 각 이벤트의 데이터 세트 레이어에서 addListener() 함수를 호출하여 이벤트 알림에 사용할 데이터 세트 레이어를 등록합니다. 이 예시에서는 지도에도 리스너가 추가됩니다.

TypeScript
datasetLayer = map.getDatasetFeatureLayer(datasetId);
datasetLayer.style = applyStyle;

datasetLayer.addListener('click', handleClick);
datasetLayer.addListener('mousemove', handleMouseMove);

datasetLayer.style = applyStyle;
datasetLayer.style = applyStyle;
datasetLayer.addListener("click", handleClick);
datasetLayer.addListener("mousemove", handleMouseMove);
datasetLayer.style = applyStyle;
e.features.map((f) => f.datasetAttributes['globalid']);
e.features.map((f) => f.datasetAttributes['globalid']);
(f) => f.datasetAttributes["globalid"],
(f) => f.datasetAttributes["globalid"],

lastClickedFeatureIds.includes(datasetFeature.datasetAttributes["globalid"])
) {
return styleClicked;
lastInteractedFeatureIds.includes(
datasetFeature.datasetAttributes["globalid"],
) {
return styleMouseMove;
e.features.map((f) => f.datasetAttributes['globalid']);
e.features.map((f) => f.datasetAttributes['globalid']);

datasetLayer.style = applyStyle;

datasetLayer.addListener('click', handleClick);
datasetLayer.addListener('mousemove', handleMouseMove);

datasetLayer.style = applyStyle;
map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(attributionDiv);
attributionLabel.style.opacity = '0.7';
attributionLabel.style.fontFamily = 'Roboto,Arial,sans-serif';
attributionLabel.style.fontSize = '10px';
attributionLabel.style.padding = '2px';
attributionLabel.style.margin = '2px';
attributionLabel.textContent = 'Data source: NYC Open Data';
return attributionLabel;

(f) => f.datasetAttributes["globalid"],
(f) => f.datasetAttributes["globalid"],
datasetLayer.style = applyStyle;
datasetLayer.addListener("click", handleClick);
datasetLayer.addListener("mousemove", handleMouseMove);
datasetLayer.style = applyStyle;
map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(attributionDiv);
lastClickedFeatureIds.includes(datasetFeature.datasetAttributes["globalid"])
) {
return styleClicked;
lastInteractedFeatureIds.includes(
datasetFeature.datasetAttributes["globalid"],
) {
return styleMouseMove;
attributionLabel.style.opacity = "0.7";
attributionLabel.style.fontFamily = "Roboto,Arial,sans-serif";
attributionLabel.style.fontSize = "10px";
attributionLabel.style.padding = "2px";
attributionLabel.style.margin = "2px";
attributionLabel.textContent = "Data source: NYC Open Data";
return attributionLabel;