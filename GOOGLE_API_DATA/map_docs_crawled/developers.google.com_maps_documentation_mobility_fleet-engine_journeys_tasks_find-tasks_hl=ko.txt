Source URL: https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/find-tasks?hl=ko
Title: 할 일 찾기

할 일 찾기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 문서에서는 서버 또는 브라우저에서 태스크 정보를 찾는 방법을 설명합니다. Fleet Engine은 작업을 찾는 두 가지 방법을 지원합니다.

작업 조회: 다음 ID로 작업을 조회할 수 있습니다.

작업 ID: 작업 데이터의 전체 보기에 액세스할 수 있는 차량 운영자와 같은 사용자가 사용합니다.
추적 ID: 클라이언트 소프트웨어에서 패키지가 집에 도착할 예정인 경우와 같은 제한된 정보를 최종 사용자에게 제공하는 데 사용됩니다.

작업 ID와 작업 추적 ID의 차이점을 이해해야 합니다. 둘은 같지 않습니다. 예약된 작업 가이드의 기본 작업 필드 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/tasks-intro?hl=ko#task_elements]를 참고하세요.
작업 나열: 신뢰할 수 있는 사용자에게만 제공되는 작업에 대한 광범위한 액세스 권한입니다.

참고: 작업에 대한 드라이버 제어를 제공하는 신뢰할 수 있는 클라이언트 모델을 사용하는 경우 Driver SDK는 작업 조회 또는 나열을 지원하지 않습니다.
할 일 조회

이 섹션에서는 태스크 ID 또는 추적 ID로 태스크를 조회하는 방법을 설명합니다. 다음 요구사항이 있습니다.

추적 ID별 조회는 추적된 객체의 공개 상태 규칙 [https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/configure-tasks?hl=ko#visibility_rules_for_tracked_objects]에 명시된 공개 상태 규칙을 준수해야 합니다.
보안 위험을 제한하려면 가능한 가장 좁은 토큰을 사용하세요. 예를 들어 배송 소비자 토큰을 사용하는 경우 모든 호출은 배송업체 또는 배송 수신자와 같은 해당 최종 사용자와 관련된 정보만 반환합니다. Fleet Engine은 응답의 다른 모든 정보를 수정합니다. 토큰에 대한 자세한 내용은 JSON 웹 토큰 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/set-up-fleet/jwt?hl=ko]을 참고하세요.

작업 ID로 작업 조회

gRPC 또는 REST를 사용하여 서버 환경에서 작업 ID로 작업을 조회할 수 있습니다. 다음 예에서는 Java gRPC 라이브러리 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/client-libraries-trips?hl=ko#java] 또는 REST 요청을 사용하여 GetTask [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rest/v1/providers.tasks/get?hl=ko]를 가져오는 방법을 보여줍니다.

gRPC static final String PROJECT_ID = "my-delivery-co-gcp-project";
static final String TASK_ID = "task-8597549";

DeliveryServiceBlockingStub deliveryService =
DeliveryServiceGrpc.newBlockingStub(channel);

String taskName = "providers/" + PROJECT_ID + "/tasks/" + TASK_ID;
GetTaskRequest getTaskRequest = GetTaskRequest.newBuilder()  // No need for the header
.setName(taskName)
.build();

try {
Task task = deliveryService.getTask(getTaskRequest);
Status s = e.getStatus();
switch (s.getCode()) {
case NOT_FOUND:
break;

case PERMISSION_DENIED:
break;
static final String TRACKING_ID = "TID-7449w087464x5";

DeliveryServiceBlockingStub deliveryService =
DeliveryServiceGrpc.newBlockingStub(channel);

String parent = "providers/" + PROJECT_ID;
GetTaskTrackingInfoRequest getTaskTrackingInfoRequest = GetTaskTrackingInfoRequest.newBuilder()  // No need for the header
.setParent(parent)
.setTrackingId(TRACKING_ID)
.build();

try {
TaskTrackingInfo taskTrackingInfo = deliveryService.getTaskTrackingInfo(getTaskTrackingInfoRequest);
Status s = e.getStatus();
switch (s.getCode()) {
case NOT_FOUND:
break;

case PERMISSION_DENIED:
break;
Fleet Engine은 작업을 나열할 때 다음 필드를 수정합니다.

VehicleStop.planned_location
VehicleStop.state
VehicleStop.TaskInfo.taskId

Google API 개선 제안에 따라 다음 필드 형식을 사용하세요.

| 입력란 유형 | 형식 | 예 |
| --- | --- | --- |
| 타임스탬프 | RFC-3339 | task_outcome_time = 2022-03-01T11:30:00-08:00 |
| 기간 | 초 수 뒤에 s가 표시됨 | task_duration = 120s |
| 열거형 | 문자열 | state = CLOSED AND type = PICKUP |
| 위치 | point.latitude 및 point.longitude | planned_location.point.latitude > 36.1 AND planned_location.point.longitude < -122.0 |

나열된 작업 필터링

대부분의 작업 속성으로 나열된 작업을 필터링할 수 있습니다. 필터 쿼리 구문은 AIP-160 [https://google.aip.dev/160]을 참고하세요. 필터 쿼리를 지정하지 않으면 모든 작업이 나열됩니다.
참고: 작업 속성을 기준으로 필터링하면 검색 지연 시간이 크게 증가할 수 있으므로 주의해서 사용해야 합니다.
다음 표에는 필터링에 사용할 수 있는 유효한 작업 속성이 나와 있습니다.

| 목록 필터링을 위한 작업 속성 |
| --- |
| type attributes tracking_id delivery_vehicle_id state planned_location | task_duration task_duration_outcome task_outcome task_outcome_location task_outcome_time |

필터 쿼리 연산자의 전체 목록은 AIP-160 [https://google.aip.dev/160]을 참고하세요.

태스크 예시 나열

다음 예에서는 deliveryVehicleId 및 작업 속성의 작업을 나열하는 방법을 보여줍니다. Java gRPC 라이브러리 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/client-libraries-tasks?hl=ko]와 ListTasks에 대한 HTTP REST 호출을 모두 사용합니다.

성공한 응답은 여전히 비어 있을 수 있습니다. 빈 응답은 제공된 deliveryVehicleId와 연결된 작업이 없음을 나타냅니다.

gRPC static final String PROJECT_ID = "my-delivery-co-gcp-project";
static final String TRACKING_ID = "TID-7449w087464x5";

DeliveryServiceBlockingStub deliveryService =
DeliveryServiceGrpc.newBlockingStub(channel);

String parent = "providers/" + PROJECT_ID;
ListTasksRequest listTasksRequest = ListTasksRequest.newBuilder()  // No need for the header
.setParent(parent)
.setFilter("delivery_vehicle_id = 123 AND attributes.foo = true")
.build();

try {
ListTasksResponse listTasksResponse = deliveryService.listTasks(listTasksRequest);
Status s = e.getStatus();
switch (s.getCode()) {
case NOT_FOUND:
break;

case PERMISSION_DENIED:
break;