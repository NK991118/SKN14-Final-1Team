Source URL: https://developers.google.com/maps/documentation/places/android-sdk/photos?hl=ko
Title: 장소 사진

의견 보내기

장소 사진

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

유럽 경제 지역 (EEA) 개발자

청구서 수신 주소가 유럽 경제 지역에 있는 경우 2025년 7월 8일부터 서비스 사용 시 Google Maps Platform EEA 서비스 약관 [https://cloud.google.com/terms/maps-platform/eea?hl=ko]이 적용됩니다. 기능은 리전에 따라 다릅니다.
자세히 알아보기 [https://developers.google.com/maps/comms/eea/faq?hl=ko]

Android용 Places SDK를 사용하여 애플리케이션에 표시할 장소 사진을 요청할 수 있습니다. 사진 서비스에서 반환되는 사진은 비즈니스 소유자 및 사용자 제공 사진을 비롯한 다양한 출처에서 가져온 것입니다.

Android용 Places SDK는 최대 크기가 1,600x1,600픽셀인 비트맵 이미지를 반환합니다.

사진 검색 절차

장소의 이미지를 검색하려면 다음 단계를 따르세요.

장소 세부정보 [https://developers.google.com/maps/documentation/places/android-sdk/legacy/place-details?hl=ko]를 사용하여 Place 객체를 가져옵니다 (fetchPlace() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#fetchPlace(com.google.android.libraries.places.api.net.FetchPlaceRequest)] 또는 findCurrentPlace() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#findCurrentPlace(com.google.android.libraries.places.api.net.FindCurrentPlaceRequest)] 사용). 응답 Place 객체에 포함할 필드 목록에 Place.Field PHOTO_METADATAS 필드를 포함해야 합니다.

FetchPlaceResponse [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/FetchPlaceResponse?hl=ko] 또는 FindCurrentPlaceResponse [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/FindCurrentPlaceResponse?hl=ko]의 OnSuccessListener [https://developer.android.com/reference/com/google/android/play/core/tasks/OnSuccessListener?hl=ko]에서 Place.getPhotoMetadas() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/model/Place?hl=ko#getPhotoMetadatas()]를 사용하여 응답 Place 객체에서 PhotoMetadata [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/model/PhotoMetadata?hl=ko] 유형의 사진 메타데이터 객체를 가져옵니다.
FetchPhotoRequest [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/FetchPhotoRequest?hl=ko] 객체를 만들고 원하는 경우 최대 높이와 너비 (픽셀 단위)를 지정합니다. 사진의 최대 너비 또는 높이는 1,600픽셀입니다.
PlacesClient.fetchPhoto() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#fetchPhoto(com.google.android.libraries.places.api.net.FetchPhotoRequest)]를 사용하여 사진 비트맵을 요청합니다.
OnSuccessListener를 추가하고 FetchPhotoResponse [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/FetchPhotoResponse?hl=ko]에서 사진을 가져옵니다.

사진 가져오기

다음 예는 장소 사진을 가져오는 방법을 보여줍니다.

Kotlin

placesClient.fetchPlace(placeRequest)

if (metada == null || metada.isEmpty()) {
Log.w(TAG, "No photo metadata.")
return@addOnSuccessListener

.setMaxWidth(500) // Optional.
.setMaxHeight(300) // Optional.
.build()
placesClient.fetchPhoto(photoRequest)
imageView.setImageBitmap(bitmap)
TODO("Handle error with given status code.")

placesClient.fetchPlace(placeRequest).addOnSuccessListener((response) -> {
final Place place = response.getPlace();

if (metadata == null || metadata.isEmpty()) {
Log.w(TAG, "No photo metadata.");
return;

.setMaxWidth(500) // Optional.
.setMaxHeight(300) // Optional.
.build();
placesClient.fetchPhoto(photoRequest).addOnSuccessListener((fetchPhotoResponse) -> {
Bitmap bitmap = fetchPhotoResponse.getBitmap();
imageView.setImageBitmap(bitmap);
Log.e(TAG, "Place not found: " + exception.getMessage());
final int statusCode = apiException.getStatusCode();
Places Photo SKU는 fetchPhoto() 호출에 대해 요금이 청구됩니다.
자세한 내용은 사용량 및 결제 [https://developers.google.com/maps/documentation/places/android-sdk/legacy/usage-and-billing?hl=ko#places-photo-legacy-ent-sku] 페이지를 참고하세요.

의견 보내기