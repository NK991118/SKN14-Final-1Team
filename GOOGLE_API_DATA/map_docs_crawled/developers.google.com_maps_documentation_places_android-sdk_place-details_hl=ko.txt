Source URL: https://developers.google.com/maps/documentation/places/android-sdk/place-details?hl=ko
Title: 장소 세부정보

의견 보내기

장소 세부정보

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

유럽 경제 지역 (EEA) 개발자

청구서 수신 주소가 유럽 경제 지역에 있는 경우 2025년 7월 8일부터 서비스 사용 시 Google Maps Platform EEA 서비스 약관 [https://cloud.google.com/terms/maps-platform/eea?hl=ko]이 적용됩니다. 기능은 리전에 따라 다릅니다.
자세히 알아보기 [https://developers.google.com/maps/comms/eea/faq?hl=ko]

Android용 장소 SDK는 장소의 이름 및 주소, 위도/경도 좌표로 지정된 지리적 위치, 장소 유형 (예: 나이트클럽, 애완동물 가게, 박물관) 등 장소에 관한 풍부한 정보를 앱에 제공합니다. 특정 장소의 이 정보에 액세스하려면 장소를 고유하게 식별하는 안정적인 식별자인 장소 ID를 사용하면 됩니다.

장소 세부정보

Place [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/model/Place?hl=ko] 객체는 특정 장소에 대한 정보를 제공합니다. 다음과 같은 방법으로 Place [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/model/Place?hl=ko] 객체를 가져올 수 있습니다.

PlacesClient.fetchPlace() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#fetchPlace(com.google.android.libraries.places.api.net.FetchPlaceRequest)] 호출 – ID로 장소 가져오기 [https://developers.google.com/maps/documentation/places/android-sdk/legacy/place-details?hl=ko#get-place] 가이드를 참고하세요.
PlacesClient.findCurrentPlace() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#findCurrentPlace(com.google.android.libraries.places.api.net.FindCurrentPlaceRequest)] 호출 – 현재 장소 가져오기 [https://developers.google.com/maps/documentation/places/android-sdk/legacy/current-place?hl=ko] 가이드를 참고하세요.

PlacesClient.fetchPlace() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#fetchPlace(com.google.android.libraries.places.api.net.FetchPlaceRequest)]는 모든 장소 데이터 필드를 지원하지만 PlacesClient.findCurrentPlace() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#findCurrentPlace(com.google.android.libraries.places.api.net.FindCurrentPlaceRequest)]는 장소 데이터 필드의 하위 집합만 지원합니다. findCurrentPlace()에서 지원되지 않는 필드 목록은 Android용 Places SDK 필드 지원 [https://developers.google.com/maps/documentation/places/android-sdk/legacy/place-data-fields?hl=ko#places-sdk-for-android-fields-support]을 참고하세요.

장소를 요청할 때 반환할 장소 데이터를 지정해야 합니다. 이렇게 하려면 반환할 데이터를 지정하는 Place.Field [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/model/Place.Field?hl=ko] 값의 목록을 전달합니다. 이 목록은 각 요청의 비용 [https://developers.google.com/maps/documentation/places/android-sdk/legacy/usage-and-billing?hl=ko]에 영향을 미치므로 중요한 고려사항입니다.

장소 데이터 결과는 비워둘 수 없으므로 데이터가 있는 장소 결과만 반환됩니다. 예를 들어 요청된 장소에 사진이 없으면 결과에 photos 필드가 표시되지 않습니다.

다음 예에서는 3개의 Place.Field [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/model/Place.Field?hl=ko] 값 목록을 전달하여 요청에서 반환된 데이터를 지정합니다.

[TAB_GROUP_PLACEHOLDER_0]

장소 객체 데이터 필드에 액세스

Place 객체를 가져온 후 객체의 메서드를 사용하여 요청에 지정된 데이터 필드에 액세스합니다. Place 객체에 필드가 없으면 관련 메서드는 null을 반환합니다. 다음은 사용 가능한 몇 가지 메서드의 예입니다.

모든 메서드의 전체 목록은 Place [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/model/Place?hl=ko] API 참조를 참고하세요.

getAddress(): 사람이 읽을 수 있는 형식의 장소 주소입니다.
getAddressComponents(): 이 장소의 주소 구성요소 List입니다. 이러한 구성요소는 장소의 주소에 관한 구조화된 정보를 추출하기 위해 제공됩니다(예: 장소가 위치한 도시 찾기). 주소 형식 지정에는 이러한 구성요소를 사용하지 마세요. 대신 현지화된 형식의 주소를 제공하는 getAddress()를 호출하세요.
getId(): 장소의 텍스트 식별자입니다. 이 페이지의 나머지 부분에서 장소 ID에 대해 자세히 알아보세요.
getLatLng() – 장소의 지리적 위치로, 위도 및 경도 좌표로 지정됩니다.
getName(): 장소의 이름입니다.
getOpeningHours(): 장소의 OpeningHours입니다. OpeningHours.getWeekdayText()를 호출하여 각 요일의 영업시간과 폐점시간을 나타내는 문자열 목록을 반환합니다. OpeningHours.getPeriods()를 호출하여 getWeekdayText()에서 제공한 데이터와 동일한 더 자세한 정보가 포함된 period 객체 목록을 반환합니다.

참고:  장소가 항상 열려 있는 경우 기간은 일요일 자정으로 표시되고 closeEvent은 null입니다.

Place 객체에는 다음 7일 동안 장소의 운영 시간이 반환되는 getCurrentOpeningHours() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/model/Place?hl=ko#getCurrentOpeningHours()] 메서드와 다음 7일 동안 장소의 보조 운영 시간이 반환되는 getSecondaryOpeningHours() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/model/Place?hl=ko#getSecondaryOpeningHours()] 메서드도 포함되어 있습니다.

isOpen(): 장소가 현재 영업 중인지 여부를 나타내는 불리언입니다. 시간을 지정하지 않으면 기본값은 현재입니다. isOpen는 Place.Field.UTC_OFFSET와 Place.Field.OPENING_HOURS를 모두 사용할 수 있는 경우에만 반환됩니다. 정확한 결과를 얻으려면 원래 장소 요청에서 Place.Field.BUSINESS_STATUS 및 Place.Field.UTC_OFFSET 필드를 요청하세요.
요청하지 않으면 비즈니스가 운영 중이라고 가정됩니다.
isOpen을 장소 세부정보와 함께 사용하는 방법은 이 동영상 [https://youtu.be/vAK5o8h8C28]을 참고하세요.

참고: 이 메서드는 지원 중단되었습니다. 대신 PlacesClient.isOpen(IsOpenRequest request) [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#isOpen(com.google.android.libraries.places.api.net.IsOpenRequest)]를 사용하세요. 자세한 내용은 열린 상태 가져오기 [https://developers.google.com/maps/documentation/places/android-sdk/legacy/place-details?hl=ko#get-open]를 참고하세요.

예를 들면 다음과 같습니다.

Kotlin
val name = place.name
val address = place.address
val location = place.latLng

자바
final CharSequence name = place.getName();
final CharSequence address = place.getAddress();
final LatLng location = place.getLatLng();

ID로 장소 가져오기

장소 ID는 장소를 고유하게 나타내는 텍스트 식별자입니다. Android용 Places SDK에서는 Place.getId() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/model/Place?hl=ko#getId()]를 호출하여 장소의 ID를 검색할 수 있습니다.
Place Autocomplete [https://developers.google.com/maps/documentation/places/android-sdk/legacy/autocomplete?hl=ko] 서비스는 제공된 검색어 및 필터와 일치하는 각 장소의 장소 ID도 반환합니다. 장소 ID를 저장했다가 나중에 이를 사용하여 Place [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/model/Place?hl=ko] 객체를 다시 가져올 수 있습니다.

ID로 장소를 가져오려면 PlacesClient.fetchPlace() [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#fetchPlace(com.google.android.libraries.places.api.net.FetchPlaceRequest)]를 호출하고 FetchPlaceRequest [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/net/FetchPlaceRequest?hl=ko]를 전달합니다.

API는 Task [https://developers.google.com/android/reference/com/google/android/gms/tasks/Task?hl=ko]에 FetchPlaceResponse [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/net/FetchPlaceResponse?hl=ko]를 반환합니다.
FetchPlaceResponse [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/net/FetchPlaceResponse?hl=ko]에는 제공된 장소 ID와 일치하는 Place [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/model/Place?hl=ko] 객체가 포함됩니다.

다음 코드 예에서는 fetchPlace()를 호출하여 지정된 장소의 세부정보를 가져오는 방법을 보여줍니다.

Kotlin

placesClient.fetchPlace(request)
Log.i(PlaceDetailsActivity.TAG, "Place found: ${place.name}")
TODO("Handle error with given status code")

placesClient.fetchPlace(request).addOnSuccessListener((response) -> {
Place place = response.getPlace();
Log.i(TAG, "Place found: " + place.getName());
Log.e(TAG, "Place not found: " + exception.getMessage());
final int statusCode = apiException.getStatusCode();
Place.Field.BUSINESS_STATUS
Place.Field.CURRENT_OPENING_HOURS
Place.Field.OPENING_HOURS
Place.Field.UTC_OFFSET

이러한 필드가 Place 객체에 제공되지 않거나 장소 ID를 전달하는 경우 메서드는 PlacesClient.fetchPlace() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#fetchPlace(com.google.android.libraries.places.api.net.FetchPlaceRequest)]를 사용하여 가져옵니다. 필요한 필드로 장소 객체를 만드는 방법에 관한 자세한 내용은 장소 세부정보 [https://developers.google.com/maps/documentation/places/android-sdk/legacy/place-details?hl=ko#place-details]를 참고하세요.

참고: Place.Field.UTC_OFFSET 및 Place.Field.BUSINESS_STATUS의 fetchPlace() 호출에 대해 Places Basic Data SKU [https://developers.google.com/maps/documentation/places/android-sdk/legacy/usage-and-billing?hl=ko#basic-data-ess-sku] 요금이 청구됩니다. Places Contact Data SKU [https://developers.google.com/maps/documentation/places/android-sdk/legacy/usage-and-billing?hl=ko#contact-data-ent-sku]는 Place.Field.CURRENT_OPENING_HOURS 및 Place.Field.OPENING_HOURS의 fetchPlace() 호출에 대해 청구됩니다.

다음 예에서는 장소가 현재 영업 중인지 확인합니다. 이 예에서는 장소 ID만 isOpen()에 전달합니다.

Kotlin
val isOpenCalendar: Calendar = Calendar.getInstance()
val placeId = "ChIJD3uTd9hx5kcR1IQvGfr8dbk"

val request: IsOpenRequest = try {
IsOpenRequest.newInstance(placeId, isOpenCalendar.timeInMillis)
return
Calendar isOpenCalendar = Calendar.getInstance();
String placeId = "ChIJD3uTd9hx5kcR1IQvGfr8dbk";
IsOpenRequest isOpenRequest;

try {
isOpenRequest = IsOpenRequest.newInstance(placeId, isOpenCalendar.getTimeInMillis());
return;
Task<IsOpenResponse> placeTask = placesClient.isOpen(isOpenRequest);

placeTask.addOnSuccessListener(
(response) ->
isOpen = response.isOpen());
Place 객체는 유효한 장소 ID를 포함해야 합니다.

Kotlin
val isOpenCalendar: Calendar = Calendar.getInstance()
Place.Field.BUSINESS_STATUS,
Place.Field.CURRENT_OPENING_HOURS,
Place.Field.ID,
Place.Field.OPENING_HOURS,
Place.Field.UTC_OFFSET

val placeRequest: FetchPlaceRequest =
FetchPlaceRequest.newInstance(placeId, placeFields)
val placeTask: Task<FetchPlaceResponse> = placesClient.fetchPlace(placeRequest)
placeTask.addOnSuccessListener { placeResponse ->
place = placeResponse.place

val isOpenRequest: IsOpenRequest = try {
IsOpenRequest.newInstance(place, isOpenCalendar.timeInMillis)
return@addOnSuccessListener
Calendar isOpenCalendar = Calendar.getInstance();
String placeId = "ChIJD3uTd9hx5kcR1IQvGfr8dbk";
List<Place.Field> placeFields = new ArrayList<>(Arrays.asList(
Place.Field.BUSINESS_STATUS,
Place.Field.CURRENT_OPENING_HOURS,
Place.Field.ID,
Place.Field.OPENING_HOURS,
Place.Field.UTC_OFFSET
));

FetchPlaceRequest request = FetchPlaceRequest.newInstance(placeId, placeFields);
Task<FetchPlaceResponse> placeTask = placesClient.fetchPlace(request);

placeTask.addOnSuccessListener(
(placeResponse) -> {
Place place = placeResponse.getPlace();
IsOpenRequest isOpenRequest;

try {
isOpenRequest = IsOpenRequest.newInstance(place, isOpenCalendar.getTimeInMillis());
return;
Task<IsOpenResponse> isOpenTask = placesClient.isOpen(isOpenRequest);

isOpenTask.addOnSuccessListener(
(isOpenResponse) -> isOpen = isOpenResponse.isOpen());