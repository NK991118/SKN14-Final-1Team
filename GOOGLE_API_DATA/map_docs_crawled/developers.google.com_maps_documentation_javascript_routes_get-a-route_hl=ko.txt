Source URL: https://developers.google.com/maps/documentation/javascript/routes/get-a-route?hl=ko
Title: 경로 찾기

의견 보내기

경로 찾기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

경로는 시작 위치(출발지)와 종료 위치(목적지) 사이의 탐색 가능한 경로입니다. 도보, 자전거, 다양한 유형의 차량 등 여러 이동 수단의 경로를 선택할 수 있습니다. 거리, 경로 탐색 예상 시간, 예상 통행료, 경로 탐색 단계별 안내와 같은 경로 세부정보를 요청할 수도 있습니다.

computeRoutes() [https://developers.google.com/maps/documentation/javascript/reference/route?hl=ko#Route.computeRoutes] 메서드를 호출하여 두 위치 간의 경로를 요청합니다. 다음 예에서는 요청을 정의한 다음 computeRoutes()를 호출하여 경로를 가져오는 방법을 보여줍니다.

반환할 필드 선택

경로를 요청할 때는 필드 마스크를 사용하여 응답에서 반환해야 하는 정보를 지정해야 합니다. 필드 마스크에서 경로 클래스 속성 [https://developers.google.com/maps/documentation/javascript/reference/route?hl=ko#Route-Properties]의 이름을 지정할 수 있습니다.

필드 마스크를 사용하면 불필요한 데이터를 요청하지 않아도 되므로 응답 지연 시간을 줄이고 시스템에 필요하지 않은 정보를 반환하지 않을 수 있습니다.

다음 스니펫에 표시된 대로 ComputeRoutesRequest.fields [https://developers.google.com/maps/documentation/javascript/reference/route?hl=ko#ComputeRoutesRequest.fields] 속성을 설정하여 필요한 필드 목록을 지정합니다.

ComputeRoutesRequest에서 다음 방법 중 하나로 위치를 지정할 수 있습니다.

장소 [https://developers.google.com/maps/documentation/javascript/routes/get-a-route?hl=ko#place] (권장)
위도/경도 좌표 [https://developers.google.com/maps/documentation/javascript/routes/get-a-route?hl=ko#lat-lng]
주소 문자열 [https://developers.google.com/maps/documentation/javascript/routes/get-a-route?hl=ko#address-string] ('Chicago, IL' 또는 'Darwin, NT, Australia')
플러스 코드 [https://developers.google.com/maps/documentation/javascript/routes/get-a-route?hl=ko#plus-code]

요청에서 모든 경유지의 위치를 동일한 방식으로 지정하거나 혼합할 수 있습니다.
예를 들어 출발지 경유지에 위도/경도 좌표를 사용하고 목적지 경유지에 장소 객체를 사용할 수 있습니다.

효율성과 정확성을 위해 위도/경도 좌표나 주소 문자열 대신 장소 객체를 사용하세요. 장소 ID는 명시적으로 고유하며 액세스 포인트 및 교통 변수와 같은 라우팅에 지오코딩 이점을 제공합니다. 이러한 방법은 위치를 지정하는 다른 방법으로 인해 발생할 수 있는 다음 상황을 방지하는 데 도움이 됩니다.

위도/경도 좌표를 사용하면 해당 좌표에 가장 가까운 도로로 위치가 스냅될 수 있습니다. 이 도로가 숙소로 연결되는 진입로가 아닐 수도 있고 목적지로 빠르고 안전하게 연결되는 도로가 아닐 수도 있습니다.
경로를 계산하려면 먼저 Routes API로 주소 문자열을 지오코딩하여 위도/경도 좌표로 변환해야 합니다. 이 변환은 성능에 영향을 미칠 수 있습니다.

장소 객체로 위치 지정 (권장)

장소를 사용하여 위치를 지정하려면 새 Place 인스턴스를 만듭니다. 다음 스니펫은 origin 및 destination의 새 Place 인스턴스를 만든 다음 ComputeRoutesRequest에서 사용하는 방법을 보여줍니다.

Plus Code는 글로벌 코드 또는 복합 코드로 형식이 지정되어야 합니다.

글로벌 코드는 4자리 지역 코드와 6자 이상의 로컬 코드로 구성됩니다. 예를 들어 주소가 '1600 Amphitheatre Parkway, Mountain View, CA'인 경우 전역 코드는 '849V'이고 지역 코드는 'CWC8+R9'입니다. 그런 다음 전체 10자리 플러스 코드를 사용하여 위치 값을 '849VCWC8+R9'로 지정합니다.
복합 코드는 명시적인 위치와 결합된 6자 이상의 로컬 코드로 구성됩니다. 예를 들어 주소 '450 Serra Mall, Stanford, CA 94305, USA'의 현지 코드는 'CRHJ+C3'입니다. 복합 주소의 경우 지역 코드를 주소의 도시, 주, 우편번호, 국가 부분과 결합하여 'CRHJ+C3 Stanford, CA 94305, USA' 형식으로 만듭니다.

다음 스니펫은 더하기 코드를 사용하여 경로 출발지와 목적지의 경유지를 지정하여 경로를 계산하는 방법을 보여줍니다.