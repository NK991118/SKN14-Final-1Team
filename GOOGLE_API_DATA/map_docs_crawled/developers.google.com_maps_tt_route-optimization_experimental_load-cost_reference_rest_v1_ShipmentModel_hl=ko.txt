Source URL: https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko
Title: ShipmentModel

ShipmentModel

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 페이지의 내용배송 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#shipment]VisitRequest [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#visitrequest]LatLng [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#latlng]경유지 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#waypoint]위치 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#location]TimeWindow [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#timewindow]차량 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#vehicle]TravelMode [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#travelmode]RouteModifiers [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#routemodifiers]UnloadingPolicy [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#unloadingpolicy]LoadLimit [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#loadlimit]간격 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#interval]LoadCost [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#loadcost]DurationLimit [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#durationlimit]DistanceLimit [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#distancelimit]BreakRule [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#breakrule]BreakRequest [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#breakrequest]FrequencyConstraint [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#frequencyconstraint]DurationDistanceMatrix [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#durationdistancematrix]행 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#row]TransitionAttributes [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#transitionattributes]ShipmentTypeIncompatibility [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#shipmenttypeincompatibility]IncompatibilityMode [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#incompatibilitymode]ShipmentTypeRequirement [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#shipmenttyperequirement]RequirementMode [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#requirementmode]PrecedenceRule [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#precedencerule]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#SCHEMA_REPRESENTATION]
배송 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Shipment]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Shipment.SCHEMA_REPRESENTATION]

VisitRequest [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#VisitRequest]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#VisitRequest.SCHEMA_REPRESENTATION]

LatLng [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#LatLng]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#LatLng.SCHEMA_REPRESENTATION]

Waypoint [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Waypoint]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Waypoint.SCHEMA_REPRESENTATION]

위치 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Location]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Location.SCHEMA_REPRESENTATION]

TimeWindow [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#TimeWindow]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#TimeWindow.SCHEMA_REPRESENTATION]

차량 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Vehicle]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Vehicle.SCHEMA_REPRESENTATION]

TravelMode [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#TravelMode]
RouteModifiers [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#RouteModifiers]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#RouteModifiers.SCHEMA_REPRESENTATION]

UnloadingPolicy [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#UnloadingPolicy]
LoadLimit [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#LoadLimit]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#LoadLimit.SCHEMA_REPRESENTATION]

간격 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Interval]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Interval.SCHEMA_REPRESENTATION]

LoadCost [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#LoadCost]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#LoadCost.SCHEMA_REPRESENTATION]

DurationLimit [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#DurationLimit]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#DurationLimit.SCHEMA_REPRESENTATION]

DistanceLimit [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#DistanceLimit]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#DistanceLimit.SCHEMA_REPRESENTATION]

BreakRule [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#BreakRule]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#BreakRule.SCHEMA_REPRESENTATION]

BreakRequest [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#BreakRequest]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#BreakRequest.SCHEMA_REPRESENTATION]

FrequencyConstraint [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#FrequencyConstraint]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#FrequencyConstraint.SCHEMA_REPRESENTATION]

DurationDistanceMatrix [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#DurationDistanceMatrix]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#DurationDistanceMatrix.SCHEMA_REPRESENTATION]

행 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Row]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Row.SCHEMA_REPRESENTATION]

TransitionAttributes [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#TransitionAttributes]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#TransitionAttributes.SCHEMA_REPRESENTATION]

ShipmentTypeIncompatibility [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#ShipmentTypeIncompatibility]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#ShipmentTypeIncompatibility.SCHEMA_REPRESENTATION]

IncompatibilityMode [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#IncompatibilityMode]
ShipmentTypeRequirement [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#ShipmentTypeRequirement]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#ShipmentTypeRequirement.SCHEMA_REPRESENTATION]

RequirementMode [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#RequirementMode]
PrecedenceRule [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#PrecedenceRule]

JSON 표현 [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#PrecedenceRule.SCHEMA_REPRESENTATION]

배송 모델에는 차량 세트로 실행해야 하는 배송 세트가 포함되며, 전체 비용은 다음의 합계입니다.

차량 경로 지정 비용 (총 시간당 비용, 이동 시간당 비용, 모든 차량에 대한 고정 비용의 합계)입니다.
불이익을 받을 수 있습니다.
전 세계 배송 기간의 비용

| JSON 표현 |
| --- |
| {   "shipments": [     {       object (Shipment)     }   ],   "vehicles": [     {       object (Vehicle)     }   ],   "globalStartTime": string,   "globalEndTime": string,   "globalDurationCostPerHour": number,   "durationDistanceMatrices": [     {       object (DurationDistanceMatrix)     }   ],   "durationDistanceMatrixSrcTags": [     string   ],   "durationDistanceMatrixDstTags": [     string   ],   "transitionAttributes": [     {       object (TransitionAttributes)     }   ],   "shipmentTypeIncompatibilities": [     {       object (ShipmentTypeIncompatibility)     }   ],   "shipmentTypeRequirements": [     {       object (ShipmentTypeRequirement)     }   ],   "precedenceRules": [     {       object (PrecedenceRule)     }   ],   "maxActiveVehicles": integer } |

| 필드 |
| --- |
| shipments[] | object (Shipment) 모델에서 실행해야 하는 배송 세트입니다. |
| vehicles[] | object (Vehicle) 방문을 수행하는 데 사용할 수 있는 차량 집합입니다. |
| globalStartTime | string (Timestamp format) 모델의 전 세계 시작 시간 및 종료 시간: 이 범위를 벗어나는 시간은 유효하지 않습니다. 모델의 기간은 1년 미만이어야 합니다. 즉, globalEndTime와 globalStartTime의 간격은 31536000초 이내여야 합니다. cost_per_*hour 필드를 사용하는 경우 실적을 높이기 위해 이 기간을 더 짧은 간격으로 설정하는 것이 좋습니다. 예를 들어 하루를 모델링하는 경우 전체 시간 제한을 해당 날짜로 설정해야 합니다. 설정하지 않으면 1970년 1월 1일 00:00:00 UTC(즉, 초: 0, 나노: 0)가 기본값으로 사용됩니다. RFC3339 UTC 'Zulu' 형식의 타임스탬프입니다(나노초 단위, 소수점 이하 9자리). 예를 들면 "2014-10-02T15:01:23Z" 및 "2014-10-02T15:01:23.045123456Z"입니다. |
| globalEndTime | string (Timestamp format) 설정하지 않으면 1971년 1월 1일 00:00:00 UTC (초: 31536000, nanos: 0)가 기본값으로 사용됩니다. RFC3339 UTC 'Zulu' 형식의 타임스탬프입니다(나노초 단위, 소수점 이하 9자리). 예를 들면 "2014-10-02T15:01:23Z" 및 "2014-10-02T15:01:23.045123456Z"입니다. |
| globalDurationCostPerHour | number 전체 계획의 '전체 기간'은 모든 차량의 가장 빠른 유효 시작 시간과 가장 늦은 유효 종료 시간의 차이입니다. 예를 들어 사용자는 이 수량에 시간당 비용을 할당하여 가장 일찍 작업을 완료할 수 있도록 최적화할 수 있습니다. 이 비용은 Shipment.penalty_cost과(와) 같은 단위여야 합니다. |
| durationDistanceMatrices[] | object (DurationDistanceMatrix) 모델에 사용되는 기간 및 거리 행렬을 지정합니다. 이 필드가 비어 있으면 useGeodesicDistances 필드의 값에 따라 Google 지도 또는 지구 굴절 거리가 대신 사용됩니다. 비어 있지 않으면 useGeodesicDistances은 true가 될 수 없으며 durationDistanceMatrixSrcTags도 durationDistanceMatrixDstTags도 비어 있을 수 없습니다. 사용 예시: locA와 locB라는 두 위치가 있습니다. 경로를 locA에서 시작하고 locA에서 종료하는 차량 1대 locB에서 수령 방문 요청 1건 model {   vehicles { startTags: "locA"  endTags: "locA" }   shipments { pickups { tags: "locB" } }   durationDistanceMatrixSrcTags: "locA"   durationDistanceMatrixSrcTags: "locB"   durationDistanceMatrixDstTags: "locA"   durationDistanceMatrixDstTags: "locB"   durationDistanceMatrices {     rows {  # from: locA       durations { seconds: 0 }   meters: 0    # to: locA       durations { seconds: 100 } meters: 1000 # to: locB     }     rows {  # from: locB       durations { seconds: 102 } meters: 990 # to: locA       durations { seconds: 0 }   meters: 0   # to: locB     }   } } locA, locB, locC라는 세 가지 위치가 있습니다. 차량 1대가 locA에서 경로를 시작하여 locB에서 종료하며, 매트릭스 'fast'를 사용합니다. 'slow' 행렬을 사용하여 locB에서 경로를 시작하여 locB에서 끝나는 차량 1대입니다. 차량 1대가 locB에서 경로를 시작하여 locB에서 종료하며, 매트릭스 'fast'를 사용합니다. locC에서 방문 수령 요청 1건 model {   vehicles { startTags: "locA" endTags: "locB" startTags: "fast" }   vehicles { startTags: "locB" endTags: "locB" startTags: "slow" }   vehicles { startTags: "locB" endTags: "locB" startTags: "fast" }   shipments { pickups { tags: "locC" } }   durationDistanceMatrixSrcTags: "locA"   durationDistanceMatrixSrcTags: "locB"   durationDistanceMatrixSrcTags: "locC"   durationDistanceMatrixDstTags: "locB"   durationDistanceMatrixDstTags: "locC"   durationDistanceMatrices {     vehicleStartTag: "fast"     rows {  # from: locA       durations { seconds: 1000 } meters: 2000 # to: locB       durations { seconds: 600 }  meters: 1000 # to: locC     }     rows {  # from: locB       durations { seconds: 0 }   meters: 0    # to: locB       durations { seconds: 700 } meters: 1200 # to: locC     }     rows {  # from: locC       durations { seconds: 702 } meters: 1190 # to: locB       durations { seconds: 0 }   meters: 0    # to: locC     }   }   durationDistanceMatrices {     vehicleStartTag: "slow"     rows {  # from: locA       durations { seconds: 1800 } meters: 2001 # to: locB       durations { seconds: 900 }  meters: 1002 # to: locC     }     rows {  # from: locB       durations { seconds: 0 }    meters: 0    # to: locB       durations { seconds: 1000 } meters: 1202 # to: locC     }     rows {  # from: locC       durations { seconds: 1001 } meters: 1195 # to: locB       durations { seconds: 0 }    meters: 0    # to: locC     }   } } |
| durationDistanceMatrixSrcTags[] | string 소요 시간 및 거리 행렬의 소스를 정의하는 태그. durationDistanceMatrices(i).rows(j)는 행렬 i의 durationDistanceMatrixSrcTags(j) 태그가 있는 방문부터 다른 방문까지의 시간 및 거리를 정의합니다. 태그는 VisitRequest.tags 또는 Vehicle.start_tags에 해당합니다. 지정된 VisitRequest 또는 Vehicle는 이 필드의 태그와 정확히 하나만 일치해야 합니다. Vehicle의 소스, 대상, 매트릭스 태그가 동일할 수 있습니다. 마찬가지로 VisitRequest의 소스 및 대상 태그가 동일할 수 있습니다. 모든 태그는 달라야 하며 빈 문자열일 수 없습니다. 이 필드가 비어 있지 않으면 durationDistanceMatrices도 비워 둘 수 없습니다. |
| durationDistanceMatrixDstTags[] | string 시간 및 거리 행렬의 대상을 정의하는 태그입니다. durationDistanceMatrices(i).rows(j).durations(k)(각각 durationDistanceMatrices(i).rows(j).meters(k))는 행렬 i의 durationDistanceMatrixSrcTags(j) 태그가 있는 방문에서 durationDistanceMatrixDstTags(k) 태그가 있는 방문까지의 이동 시간 (대응 거리)을 정의합니다. 태그는 VisitRequest.tags 또는 Vehicle.start_tags에 해당합니다. 지정된 VisitRequest 또는 Vehicle는 이 필드의 태그와 정확히 하나만 일치해야 합니다. Vehicle의 소스, 대상, 매트릭스 태그가 동일할 수 있습니다. 마찬가지로 VisitRequest의 소스 및 대상 태그가 동일할 수 있습니다. 모든 태그는 서로 달라야 하며 빈 문자열일 수 없습니다. 이 필드가 비어 있지 않으면 durationDistanceMatrices도 비워 둘 수 없습니다. |
| transitionAttributes[] | object (TransitionAttributes) 모델에 추가된 전환 속성 |
| shipmentTypeIncompatibilities[] | object (ShipmentTypeIncompatibility) 호환되지 않는 shipment_types 집합(ShipmentTypeIncompatibility 참고). |
| shipmentTypeRequirements[] | object (ShipmentTypeRequirement) shipmentType 요구사항 집합(ShipmentTypeRequirement 참고). |
| precedenceRules[] | object (PrecedenceRule) 모델에서 시행해야 하는 우선순위 규칙의 집합입니다. |
| maxActiveVehicles | integer 활성 차량의 최대 수를 제한합니다. 경로에서 배송을 한 번 이상 실행하는 경우 차량이 활성 상태입니다. 운전자 수가 차량 수보다 적고 차량 구성이 이질적인 경우 경로 수를 제한하는 데 사용할 수 있습니다. 그러면 최적화에서 사용할 최적의 차량 하위 집합을 선택합니다. 반드시 양수여야 합니다. |

배송

단일 상품의 배송(픽업에서 배송 중 하나까지)입니다. 배송이 이행된 것으로 간주되려면 고유 차량이 수령 위치 중 한 곳을 방문하여 여유 용량을 줄인 다음, 나중에 배송 위치 중 한 곳을 방문해야 합니다(따라서 여유 용량도 적절하게 다시 늘려야 함).

| JSON 표현 |
| --- |
| {   "displayName": string,   "pickups": [     {       object (VisitRequest)     }   ],   "deliveries": [     {       object (VisitRequest)     }   ],   "loadDemands": {     string: {       object (Load)     },     ...   },   "allowedVehicleIndices": [     integer   ],   "costsPerVehicle": [     number   ],   "costsPerVehicleIndices": [     integer   ],   "pickupToDeliveryAbsoluteDetourLimit": string,   "pickupToDeliveryTimeLimit": string,   "shipmentType": string,   "label": string,   "ignore": boolean,   "penaltyCost": number,   "pickupToDeliveryRelativeDetourLimit": number } |

| 필드 |
| --- |
| displayName | string 배송의 사용자 정의 표시 이름입니다. 최대 63자(영문 기준)까지 허용되며 UTF-8 문자를 사용할 수 있습니다. |
| pickups[] | object (VisitRequest) 배송과 관련된 수령 옵션 집합입니다. 지정하지 않으면 차량이 배송에 해당하는 위치만 방문하면 됩니다. |
| deliveries[] | object (VisitRequest) 배송과 관련된 배송 대안 모음입니다. 지정하지 않으면 차량이 승차 위치에 해당하는 위치만 방문하면 됩니다. |
| loadDemands | map (key: string, value: object (Load)) 배송의 적재 요구사항(예: 중량, 부피, 팔레트 수 등) 맵의 키는 해당 로드의 유형을 설명하는 식별자여야 하며 단위도 포함하는 것이 이상적입니다. 예: 'weight_kg', 'volume_gallons', 'pallet_count' 등입니다. 지정된 키가 맵에 표시되지 않으면 해당 로드는 null로 간주됩니다. |
| allowedVehicleIndices[] | integer 이 배송을 수행할 수 있는 차량 집합입니다. 비어 있으면 모든 차량에서 실행할 수 있습니다. 차량은 ShipmentModel의 vehicles 목록에 있는 색인으로 지정됩니다. |
| costsPerVehicle[] | number 이 배송 상품이 각 차량으로 배송될 때 발생하는 비용을 지정합니다. 지정된 경우 다음 중 하나를 포함해야 합니다. costsPerVehicleIndices와 같은 수의 요소만 사용할 수 있습니다. costsPerVehicle[i]는 모델의 차량 costsPerVehicleIndices[i]에 해당합니다. 모델에 있는 차량 수와 동일한 수의 요소가 있습니다. i번째 요소는 모델의 차량 #i에 해당합니다. 이 비용은 penaltyCost과(와) 같은 단위여야 하며 음수가 아니어야 합니다. 이러한 비용이 없는 경우 이 필드를 비워 둡니다. |
| costsPerVehicleIndices[] | integer costsPerVehicle가 적용되는 차량의 색인입니다. 비어 있지 않은 경우 costsPerVehicle와 요소 수가 동일해야 합니다. 차량 색인은 두 번 이상 지정할 수 없습니다. 차량이 costsPerVehicleIndices에서 제외된 경우 비용은 0입니다. |
| pickupToDeliveryAbsoluteDetourLimit | string (Duration format) 승차에서 배송까지의 최단 경로와 비교하여 최대 절대 우회 시간을 지정합니다. 지정할 경우 음수가 아니어야 하며 배송에 최소한 수령과 배달이 포함되어야 합니다. 예를 들어 t는 선택한 대체 옵션에서 선택한 대체 배송 서비스로 바로 이동하는 데 걸리는 최단 시간을 설정합니다. 그런 다음 pickupToDeliveryAbsoluteDetourLimit를 설정하면 다음이 적용됩니다. startTime(delivery) - startTime(pickup) <= t + pickupToDeliveryAbsoluteDetourLimit 동일한 배송에 상대 및 절대 한도가 모두 지정된 경우, 가능한 각 수령/배송 쌍에 더 엄격한 한도가 적용됩니다. 2017년 10월부터 우회 경로는 이동 시간이 차량에 종속되지 않는 경우에만 지원됩니다. 소수점 아래가 최대 9자리까지이고 's'로 끝나는 초 단위 기간입니다. 예를 들면 "3.5s"입니다. |
| pickupToDeliveryTimeLimit | string (Duration format) 배송 상품 수령 시작부터 배송 시작까지의 최대 기간을 지정합니다. 지정할 경우 음수가 아니어야 하며 배송에 최소한 수령과 배달이 포함되어야 합니다. 이는 수령 및 배달에 선택된 대체 옵션이나 차량 속도에 따라 달라지지 않습니다. 이는 최대 우회 제약 조건과 함께 지정할 수 있으며 솔루션은 두 사양을 모두 준수합니다. 소수점 아래가 최대 9자리까지이고 's'로 끝나는 초 단위 기간입니다. 예를 들면 "3.5s"입니다. |
| shipmentType | string 이 배송의 '유형'을 지정하는 비어 있지 않은 문자열입니다. 이 기능은 shipment_types 간의 비호환성 또는 요구사항을 정의하는 데 사용할 수 있습니다(ShipmentModel의 shipmentTypeIncompatibilities 및 shipmentTypeRequirements 참고). 단일 방문에 지정된 visitTypes와의 차이점: 동일한 배송에 속하는 모든 수령/배송은 동일한 shipmentType를 공유합니다. |
| label | string 이 배송의 라벨을 지정합니다. 이 라벨은 상응하는 ShipmentRoute.Visit의 shipmentLabel에 있는 응답에 보고됩니다. |
| ignore | boolean true인 경우 이 배송을 건너뛰지만 penaltyCost는 적용하지 않습니다. 배송을 무시하면 모델에 shipmentTypeRequirements가 있는 경우 유효성 검사 오류가 발생합니다. injectedFirstSolutionRoutes 또는 injectedSolutionConstraint에서 이루어지는 배송은 무시할 수 있습니다. 문제 해결사는 관련 승차/배송 방문 기록을 이행 경로에서 삭제합니다. 무시된 배송을 참조하는 precedenceRules도 무시됩니다. |
| penaltyCost | number 배송이 완료되지 않으면 이 페널티가 경로의 전체 비용에 추가됩니다. 수령 및 배송 대안 중 하나가 방문되면 배송이 완료된 것으로 간주됩니다. 비용은 모델의 다른 모든 비용 관련 필드에 사용된 것과 동일한 단위로 표시할 수 있으며 양수여야 합니다. 중요: 이 패널티가 지정되지 않으면 무한으로 간주되므로 배송이 완료되어야 합니다. |
| pickupToDeliveryRelativeDetourLimit | number 수령에서 배송까지의 최단 경로에 비해 최대 상대 우회 시간을 지정합니다. 지정할 경우 음수가 아니어야 하며 배송에 최소한 수령과 배달이 포함되어야 합니다. 예를 들어 t는 선택한 수령 대안에서 선택한 배송 대안으로 바로 이동하는 데 걸리는 가장 짧은 시간입니다. 그런 다음 pickupToDeliveryRelativeDetourLimit를 설정하면 다음이 적용됩니다. startTime(delivery) - startTime(pickup) <= std::ceil(t * (1.0 + pickupToDeliveryRelativeDetourLimit)) 동일한 배송에 상대 한도와 절대 한도가 모두 지정된 경우 가능한 각 수령/배송 쌍에 더 제한적인 한도가 사용됩니다. 2017년 10월부터 우회 경로는 이동 시간이 차량에 종속되지 않는 경우에만 지원됩니다. |

VisitRequest

차량으로 수행할 수 있는 방문 요청: 지리적 위치(2개, 아래 참고), 시간대별로 표시되는 영업시간 및 서비스 기간(차량이 도착하여 상품을 수령하거나 배송하는 데 소요되는 시간)이 있습니다.

| JSON 표현 |
| --- |
| {   "arrivalLocation": {     object (LatLng)   },   "arrivalWaypoint": {     object (Waypoint)   },   "departureLocation": {     object (LatLng)   },   "departureWaypoint": {     object (Waypoint)   },   "tags": [     string   ],   "timeWindows": [     {       object (TimeWindow)     }   ],   "duration": string,   "cost": number,   "loadDemands": {     string: {       object (Load)     },     ...   },   "visitTypes": [     string   ],   "label": string } |

| 필드 |
| --- |
| arrivalLocation | object (LatLng) 이 VisitRequest를 실행할 때 차량이 도착하는 지리적 위치입니다. 배송 모델에 배송 거리 행렬이 있으면 arrivalLocation를 지정하면 안 됩니다. |
| arrivalWaypoint | object (Waypoint) 이 VisitRequest을 실행할 때 차량이 도착하는 경유지입니다. 배송 모델에 배송 거리 행렬이 있으면 arrivalWaypoint를 지정하면 안 됩니다. |
| departureLocation | object (LatLng) 이 VisitRequest 완료 후 차량이 출발하는 지리적 위치입니다. arrivalLocation와 동일한 경우 생략할 수 있습니다. 배송 모델에 기간 거리 행렬이 있는 경우 departureLocation을 지정해서는 안 됩니다. |
| departureWaypoint | object (Waypoint) 이 VisitRequest 완료 후 차량이 출발하는 경유지입니다. arrivalWaypoint과 동일한 경우 생략할 수 있습니다. 배송 모델에 배송 거리 행렬이 있으면 departureWaypoint를 지정하면 안 됩니다. |
| tags[] | string 방문 요청에 연결된 태그를 지정합니다. 비어 있거나 중복된 문자열은 허용되지 않습니다. |
| timeWindows[] | object (TimeWindow) 방문 도착 시간을 제한하는 시간 간격입니다. 차량은 도착 시간 범위를 벗어나 출발할 수 있습니다. 즉, 도착 시간과 소요 시간이 시간 범위 내에 있지 않아도 됩니다. 이로 인해 차량이 TimeWindow.start_time 전에 도착하면 대기 시간이 발생할 수 있습니다. TimeWindow가 없으면 차량이 언제든지 이 방문을 실행할 수 있습니다. 기간은 서로 분리되어야 합니다. 즉, 기간은 다른 기간과 겹치거나 인접해서는 안 되며 오름차순이어야 합니다. costPerHourAfterSoftEndTime 및 softEndTime는 시간 창이 하나인 경우에만 설정할 수 있습니다. |
| duration | string (Duration format) 방문 시간입니다. 즉, 도착과 출발 사이에 차량이 소비한 시간입니다 (가능한 대기 시간에 추가될 수 있음, timeWindows 참고). 소수점 아래가 최대 9자리까지이고 's'로 끝나는 초 단위 기간입니다. 예를 들면 "3.5s"입니다. |
| cost | number 차량 경로에서 이 방문 요청을 처리하는 데 드는 비용입니다. 이를 통해 배송의 대체 수령 또는 배송마다 다른 비용을 지불할 수 있습니다. 이 비용은 Shipment.penalty_cost과(와) 같은 단위여야 하며 음수가 아니어야 합니다. |
| loadDemands | map (key: string, value: object (Load)) 이 방문 요청의 로드 수요입니다. 이는 전체 Shipment가 아닌 이 VisitRequest에만 적용된다는 점을 제외하면 Shipment.load_demands 필드와 같습니다. 여기에 나열된 수요가 Shipment.load_demands에 나열된 수요에 추가됩니다. |
| visitTypes[] | string 방문 유형을 지정합니다. 차량이 방문을 완료하는 데 필요한 추가 시간을 할당하는 데 사용할 수 있습니다(Vehicle.extra_visit_duration_for_visit_type 참고). 유형은 한 번만 표시될 수 있습니다. |
| label | string 이 VisitRequest의 라벨을 지정합니다. 이 라벨은 응답에서 상응하는 ShipmentRoute.Visit에 visitLabel로 보고됩니다. |

LatLng

위도/경도 쌍을 나타내는 객체로 위도와 경도를 나타내는 복식 쌍으로 표현됩니다. 달리 명시되지 않는 한 이 객체는 WGS84 표준 [https://en.wikipedia.org/wiki/World_Geodetic_System#1984_version]을 준수해야 합니다. 값은 정규화된 범위 내에 있어야 합니다.

| JSON 표현 |
| --- |
| {   "latitude": number,   "longitude": number } |

| 필드 |
| --- |
| latitude | number 위도입니다. 범위는 [-90.0, +90.0]입니다. |
| longitude | number 경도입니다. 범위는 [-180.0, +180.0]입니다. |

경유지

웨이포인트를 캡슐화합니다. 웨이포인트는 VisitRequests의 도착 및 출발 위치와 차량의 시작 및 종료 위치를 표시합니다.

| JSON 표현 |
| --- |
| {   "sideOfRoad": boolean,    // Union field location_type can be only one of the following:   "location": {     object (Location)   },   "placeId": string   // End of list of possible types for union field location_type. } |

| 필드 |
| --- |
| sideOfRoad | boolean 선택사항입니다. 이 경유지의 위치가 차량이 도로의 특정 측면에 정차하는 것을 선호한다는 것을 나타냅니다. 이 값을 설정하면 경로가 해당 위치를 통과하여 차량이 위치가 도로의 중심에서 편중된 도로 쪽에 정차할 수 있습니다. 'WALKING' 이동 모드에서는 이 옵션이 작동하지 않습니다. |
| 통합 필드 location_type. 위치를 나타내는 다양한 방법 location_type은 다음 중 하나여야 합니다. |
| location | object (Location) 방향(선택사항)을 포함하여 지리적 좌표를 사용하여 지정된 지점입니다. |
| placeId | string 경로 지점과 연결된 관심 장소 장소 ID입니다. |

위치

위치(지리적 지점, 선택사항인 방향)를 캡슐화합니다.

| JSON 표현 |
| --- |
| {   "latLng": {     object (LatLng)   },   "heading": integer } |

| 필드 |
| --- |
| latLng | object (LatLng) 웨이포인트의 지리적 좌표입니다. |
| heading | integer 교통 흐름의 방향과 연관된 나침반 방위입니다. 이 값은 승하차에 사용할 도로의 측면을 지정하는 데 사용됩니다. 방향 값은 0~360이며, 여기서 0은 북쪽 방향을, 90은 동쪽 방향을 지정합니다. |

TimeWindow

시간 기간은 방문 시 도착 시간 또는 차량의 시작 및 종료 시간과 같은 이벤트 시간을 제한합니다.하드 시간 창 경계인 startTime 및 endTime는 이벤트의 가장 빠른 시간과 가장 늦은 시간을 적용합니다(예: startTime <= event_time <=
endTime). 조정 시간 창 하한값 softStartTime은 이벤트가 softStartTime 전에 발생한 시간에 비례하여 비용을 발생시킴으로써 이벤트가 softStartTime 이후에 발생하도록 하는 선호도를 나타냅니다. 소프트 타임 상한값인 softEndTime은 이벤트가 softEndTime 후 발생하는 시간에 비례하여 비용이 발생하므로 softEndTime 또는 그 이전에 이벤트가 발생하기 위한 선호도를 표현합니다. startTime, endTime, softStartTime, softEndTime는 전역 시간 제한 (ShipmentModel.global_start_time [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#FIELDS.global_start_time] 및 ShipmentModel.global_end_time [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#FIELDS.global_end_time] 참고) 내에 있어야 하며 다음을 준수해야 합니다.
0 <= `startTime` <= `endTime` and
0 <= `startTime` <= `softStartTime` and
0 <= `softEndTime` <= `endTime`.

| JSON 표현 |
| --- |
| {   "startTime": string,   "endTime": string,   "softStartTime": string,   "softEndTime": string,   "costPerHourBeforeSoftStartTime": number,   "costPerHourAfterSoftEndTime": number } |

| 필드 |
| --- |
| startTime | string (Timestamp format) 하드 타임 윈도우 시작 시간입니다. 지정하지 않으면 ShipmentModel.global_start_time로 설정됩니다. RFC3339 UTC 'Zulu' 형식의 타임스탬프입니다(나노초 단위, 소수점 이하 9자리). 예를 들면 "2014-10-02T15:01:23Z" 및 "2014-10-02T15:01:23.045123456Z"입니다. |
| endTime | string (Timestamp format) 하드 타임 기간 종료 시간입니다. 지정하지 않으면 ShipmentModel.global_end_time로 설정됩니다. RFC3339 UTC 'Zulu' 형식의 타임스탬프입니다(나노초 단위, 소수점 이하 9자리). 예를 들면 "2014-10-02T15:01:23Z" 및 "2014-10-02T15:01:23.045123456Z"입니다. |
| softStartTime | string (Timestamp format) 시간 범위의 조용히 시작 시간입니다. RFC3339 UTC 'Zulu' 형식의 타임스탬프입니다(나노초 단위, 소수점 이하 9자리). 예를 들면 "2014-10-02T15:01:23Z" 및 "2014-10-02T15:01:23.045123456Z"입니다. |
| softEndTime | string (Timestamp format) 시간 범위의 조기 종료 시간입니다. RFC3339 UTC 'Zulu' 형식의 타임스탬프입니다(나노초 단위, 소수점 이하 9자리). 예를 들면 "2014-10-02T15:01:23Z" 및 "2014-10-02T15:01:23.045123456Z"입니다. |
| costPerHourBeforeSoftStartTime | number 이벤트가 softStartTime 전에 발생하는 경우 모델의 다른 비용에 추가되는 시간당 비용으로 다음과 같이 계산됩니다.    max(0, softStartTime - t.seconds)                           * costPerHourBeforeSoftStartTime / 3600, t being the time of the event. 이 비용은 양수여야 하며, 필드는 softStartTime이 설정된 경우에만 설정할 수 있습니다. |
| costPerHourAfterSoftEndTime | number 이벤트가 softEndTime 이후에 발생하는 경우 모델의 다른 비용에 추가되는 시간당 비용으로 다음과 같이 계산됩니다.    max(0, t.seconds - softEndTime.seconds)                     * costPerHourAfterSoftEndTime / 3600, t being the time of the event. 이 비용은 양수여야 하며 softEndTime가 설정된 경우에만 필드를 설정할 수 있습니다. |

차량

배송 문제에서 차량을 모델링합니다. 배송 문제를 해결하면 이 차량의 경로가 startLocation에서 시작하여 endLocation에서 종료됩니다. 경로는 방문의 시퀀스입니다(ShipmentRoute 참고).

| JSON 표현 |
| --- |
| {   "displayName": string,   "travelMode": enum (TravelMode),   "routeModifiers": {     object (RouteModifiers)   },   "startLocation": {     object (LatLng)   },   "startWaypoint": {     object (Waypoint)   },   "endLocation": {     object (LatLng)   },   "endWaypoint": {     object (Waypoint)   },   "startTags": [     string   ],   "endTags": [     string   ],   "startTimeWindows": [     {       object (TimeWindow)     }   ],   "endTimeWindows": [     {       object (TimeWindow)     }   ],   "unloadingPolicy": enum (UnloadingPolicy),   "loadLimits": {     string: {       object (LoadLimit)     },     ...   },   "costPerHour": number,   "costPerTraveledHour": number,   "costPerKilometer": number,   "fixedCost": number,   "usedIfRouteIsEmpty": boolean,   "routeDurationLimit": {     object (DurationLimit)   },   "travelDurationLimit": {     object (DurationLimit)   },   "routeDistanceLimit": {     object (DistanceLimit)   },   "extraVisitDurationForVisitType": {     string: string,     ...   },   "breakRule": {     object (BreakRule)   },   "label": string,   "ignore": boolean,   "travelDurationMultiple": number } |

| 필드 |
| --- |
| displayName | string 차량의 사용자 정의 표시 이름입니다. 최대 63자(영문 기준)까지 허용되며 UTF-8 문자를 사용할 수 있습니다. |
| travelMode | enum (TravelMode) 차량에서 사용할 수 있는 도로와 속도에 영향을 미치는 이동 모드입니다. travelDurationMultiple을 참고하세요. |
| routeModifiers | object (RouteModifiers) 지정된 차량의 경로가 계산되는 방식에 영향을 미치는 충족 조건 집합입니다. |
| startLocation | object (LatLng) 배송 상품을 수령하기 전에 차량이 출발하는 지리적 위치입니다. 지정하지 않으면 차량이 첫 번째 승차에서 시작합니다. 배송 모델에 소요 시간 및 거리 행렬이 있으면 startLocation를 지정하면 안 됩니다. |
| startWaypoint | object (Waypoint) 차량이 배송 상품을 수거하기 전에 출발하는 지리적 위치를 나타내는 웨이포인트입니다. startWaypoint와 startLocation가 모두 지정되지 않으면 차량이 첫 번째 승차에서 출발합니다. 배송 모델에 기간 및 거리 매트릭스가 있는 경우 startWaypoint을 지정해서는 안 됩니다. |
| endLocation | object (LatLng) 차량이 마지막 VisitRequest를 완료한 후 종료되는 지리적 위치입니다. 지정하지 않으면 차량의 ShipmentRoute는 마지막 VisitRequest를 완료하는 즉시 종료됩니다. 배송 모델에 소요 시간 및 거리 행렬이 있으면 endLocation를 지정하면 안 됩니다. |
| endWaypoint | object (Waypoint) 차량이 마지막 VisitRequest를 완료한 후 종료되는 지리적 위치를 나타내는 웨이포인트입니다. endWaypoint 또는 endLocation를 지정하지 않으면 차량의 ShipmentRoute는 마지막 VisitRequest를 완료하면 즉시 종료됩니다. 배송 모델에 소요 시간 및 거리 행렬이 있으면 endWaypoint를 지정하면 안 됩니다. |
| startTags[] | string 차량 경로의 시작 부분에 연결된 태그를 지정합니다. 빈 문자열 또는 중복 문자열은 허용되지 않습니다. |
| endTags[] | string 차량 경로의 끝에 연결된 태그를 지정합니다. 빈 문자열 또는 중복 문자열은 허용되지 않습니다. |
| startTimeWindows[] | object (TimeWindow) 차량이 출발 위치를 떠날 수 있는 기간입니다. 글로벌 시간 제한 내에 있어야 합니다 (ShipmentModel.global_* 필드 참고). 지정하지 않으면 글로벌 시간 제한 외에 제한이 없습니다. 동일한 반복 필드에 속하는 시간 창은 서로 중복되지 않아야 합니다. 즉, 시간 창이 다른 시간 창과 겹치거나 인접해서는 안 되며 시간 순으로 정렬되어야 합니다. costPerHourAfterSoftEndTime 및 softEndTime는 기간이 하나인 경우에만 설정할 수 있습니다. |
| endTimeWindows[] | object (TimeWindow) 차량이 종료 위치에 도착할 수 있는 기간입니다. 글로벌 시간 제한 내에 있어야 합니다 (ShipmentModel.global_* 필드 참고). 지정하지 않으면 글로벌 시간 제한 외에 제한이 없습니다. 동일한 반복 필드에 속하는 시간 창은 서로 중복되지 않아야 합니다. 즉, 시간 창이 다른 시간 창과 겹치거나 인접해서는 안 되며 시간 순으로 정렬되어야 합니다. costPerHourAfterSoftEndTime 및 softEndTime는 기간이 하나인 경우에만 설정할 수 있습니다. |
| unloadingPolicy | enum (UnloadingPolicy) 차량에 적용된 하역 정책 |
| loadLimits | map (key: string, value: object (LoadLimit)) 차량 용량(예: 중량, 부피, 팔레트 수) 맵의 키는 Shipment.load_demands 필드의 키와 일치하는 부하 유형의 식별자입니다. 이 맵에 특정 키가 없으면 해당 용량은 무제한으로 간주됩니다. |
| costPerHour | number 차량 비용: 모든 비용이 합산되며 Shipment.penalty_cost와 동일한 단위여야 합니다. 차량 경로의 시간당 비용입니다. 이 비용은 경로에서 소요된 총 시간에 적용되며 이동 시간, 대기 시간, 방문 시간이 포함됩니다. costPerTraveledHour 대신 costPerHour를 사용하면 지연 시간이 늘어날 수 있습니다. |
| costPerTraveledHour | number 차량 경로의 이동 시간당 비용입니다. 이 비용은 특정 노선에서 이용하는 이동 시간 (예: ShipmentRoute.transitions에 보고된 시간)에만 적용되며 대기 시간과 방문 시간은 제외됩니다. |
| costPerKilometer | number 차량 경로의 킬로미터당 비용입니다. 이 비용은 ShipmentRoute.transitions에 보고된 거리에 적용되며 단일 VisitRequest의 arrivalLocation에서 departureLocation까지 암시적으로 이동한 거리에는 적용되지 않습니다. |
| fixedCost | number 이 차량을 배송 처리에 사용하는 경우 고정 비용이 적용됩니다. |
| usedIfRouteIsEmpty | boolean 이 필드는 경로에 배송 상품이 없는 차량에만 적용됩니다. 이 경우 차량을 중고로 간주해야 하는지 여부를 나타냅니다. true인 경우, 차량은 배송을 제공하지 않더라도 시작 지점에서 종료 위치로 이동합니다. 또한 출발 시점부터 최종 이동이 고려됩니다. 그렇지 않으면 출발 지점에서 도착 위치까지 이동하지 않으며 이 차량에 예정된 breakRule 또는 지연 (TransitionAttributes부터)이 없습니다. 이 경우 차량의 ShipmentRoute에는 차량 색인과 라벨을 제외한 어떠한 정보도 포함되지 않습니다. |
| routeDurationLimit | object (DurationLimit) 차량 경로의 총 시간에 적용되는 제한입니다. 지정된 OptimizeToursResponse에서 차량의 경로 시간은 vehicleEndTime와 vehicleStartTime의 차이입니다. |
| travelDurationLimit | object (DurationLimit) 차량 경로의 이동 시간에 적용되는 제한입니다. 주어진 OptimizeToursResponse에서 경로 이동 시간은 모든 transitions.travel_duration의 합계입니다. |
| routeDistanceLimit | object (DistanceLimit) 차량 경로의 총 거리에 적용됩니다. 주어진 OptimizeToursResponse에서 경로 거리는 모든 transitions.travel_distance_meters의 합계입니다. |
| extraVisitDurationForVisitType | map (key: string, value: string (Duration format)) visitTypes 문자열에서 기간으로의 매핑을 지정합니다. 기간은 지정된 visitTypes로 방문할 때 VisitRequest.duration 외에 걸리는 시간입니다. 이 추가 방문 기간은 costPerHour가 지정된 경우 비용을 추가합니다. 키 (예: visitTypes)는 빈 문자열일 수 없습니다. 방문 요청에 여러 유형이 있는 경우 지도의 각 유형에 시간이 추가됩니다. |
| breakRule | object (BreakRule) 이 차량에 적용될 광고 시간 일정을 설명합니다. 비어 있으면 차량에 휴식이 예약되지 않습니다. |
| label | string 차량의 라벨을 지정합니다. 이 라벨은 응답에서 상응하는 ShipmentRoute의 vehicleLabel로 보고됩니다. |
| ignore | boolean true인 경우 usedIfRouteIsEmpty는 false여야 하며, 차량은 사용되지 않는 상태로 유지됩니다. injectedFirstSolutionRoutes에서 무시된 차량에 의해 배송이 이루어지는 경우 첫 번째 솔루션에서는 건너뛰지만 응답에서는 자유롭게 진행할 수 있습니다. injectedSolutionConstraint에서 무시된 차량으로 배송이 실행되고 관련 수령/배송이 차량에 머물러야 하는 제약 조건이 있는 경우(즉, RELAX_ALL_AFTER_THRESHOLD 수준으로 완화되지 않음) 응답에서 건너뜁니다. 배송에 비어 있지 않은 allowedVehicleIndices 필드가 있고 허용된 모든 차량이 무시되면 응답에서 건너뜁니다. |
| travelDurationMultiple | number 차량의 이동 시간을 늘리거나 줄이는 데 사용할 수 있는 곱셈 계수를 지정합니다. 예를 들어 이 값을 2.0으로 설정하면 차량 속도가 느려지고 이동 시간이 일반 차량의 두 배가 됩니다. 이 배율은 방문 시간에 영향을 주지 않습니다. costPerHour 또는 costPerTraveledHour가 지정된 경우 비용에 영향을 미칩니다. 범위는 [0.001, 1000.0]이어야 합니다. 설정하지 않으면 차량이 표준이며 배수는 1.0으로 간주됩니다. 경고: 이동 시간은 이 배수가 적용된 후 수치 연산을 실행하기 전에 가장 가까운 초로 반올림되므로 작은 배수를 사용하면 정밀도가 떨어질 수 있습니다. 아래 extraVisitDurationForVisitType도 참고하세요. |

TravelMode

차량에서 사용할 수 있는 이동 수단입니다.이는 Google Maps Platform Routes Preferred API 이동 수단의 하위 집합이어야 합니다. https://developers.google.com/maps/documentation/routes_preferred/reference/rest/Shared.Types/RouteTravelMode [https://developers.google.com/maps/documentation/routes_preferred/reference/rest/Shared.Types/RouteTravelMode?hl=ko]를 참고하세요.

| 열거형 |
| --- |
| TRAVEL_MODE_UNSPECIFIED | DRIVING과 동일한 지정되지 않은 이동 수단입니다. |
| DRIVING | 운전경로에 해당하는 이동수단 (car, ...)입니다. |
| WALKING | 도보 경로에 해당하는 이동 모드입니다. |

RouteModifiers

차량 경로를 계산할 때 충족해야 하는 선택적 조건 집합을 캡슐화합니다. 이는 Google Maps Platform Routes Preferred API의 RouteModifiers와 유사합니다. https://developers.google.com/maps/documentation/routes/reference/rest/v2/RouteModifiers [https://developers.google.com/maps/documentation/routes/reference/rest/v2/RouteModifiers?hl=ko]를 참고하세요.

| JSON 표현 |
| --- |
| {   "avoidTolls": boolean,   "avoidHighways": boolean,   "avoidFerries": boolean,   "avoidIndoor": boolean } |

| 필드 |
| --- |
| avoidTolls | boolean 합당한 경우 유료 도로를 피할지 지정합니다. 유료 도로가 포함되지 않은 경로가 우선 적용됩니다. 전동 이동 모드에만 적용됩니다. |
| avoidHighways | boolean 합당한 경우 고속도로를 제외할지 여부를 지정합니다. 고속도로가 포함되지 않은 경로가 우선 적용됩니다. 전동 이동 모드에만 적용됩니다. |
| avoidFerries | boolean 합리적인 경우 페리를 피할지 지정합니다. 페리 이동이 포함되지 않은 경로가 우선 적용됩니다. 전동 이동 모드에만 적용됩니다. |
| avoidIndoor | boolean 선택사항입니다. 합당한 경우 실내에서의 탐색을 피할지 여부를 지정합니다. 실내 내비게이션이 포함되지 않은 경로가 선호됩니다. WALKING 이동 모드에만 적용됩니다. |

UnloadingPolicy

차량을 하역하는 방법에 관한 정책입니다. 수령과 배송이 모두 있는 배송에만 적용됩니다.다른 배송은 unloadingPolicy와 관계없이 경로의 어느 곳에서나 자유롭게 발생할 수 있습니다.

| 열거형 |
| --- |
| UNLOADING_POLICY_UNSPECIFIED | 로드 취소 정책이 지정되지 않았습니다. 해당 픽업 후에 전송이 이루어져야 합니다. |
| LAST_IN_FIRST_OUT | 수령 순서와 반대로 배송해야 합니다. |
| FIRST_IN_FIRST_OUT | 배송은 수령과 동일한 순서로 이루어져야 함 |

LoadLimit

차량에 적용되는 적재 한도를 정의합니다(예: '이 트럭은 최대 3,500kg만 운반할 수 있습니다'). loadLimits [https://developers.google.com/maps/tt/route-optimization/experimental/load-cost/reference/rest/v1/ShipmentModel?hl=ko#Vehicle.FIELDS.load_limits]를 참조하세요.

| JSON 표현 |
| --- |
| {   "softMaxLoad": string,   "costPerUnitAboveSoftMax": number,   "startLoadInterval": {     object (Interval)   },   "endLoadInterval": {     object (Interval)   },   "maxLoad": string,   "costPerKilometer": {     object (LoadCost)   },   "costPerTraveledHour": {     object (LoadCost)   } } |

| 필드 |
| --- |
| softMaxLoad | string (int64 format) 소프트 부하 한도입니다. costPerUnitAboveSoftMax를 참조하세요. |
| costPerUnitAboveSoftMax | number 이 차량의 경로에서 로드가 softMaxLoad를 초과하는 경우 다음과 같은 비용 패널티가 적용됩니다(차량당 한 번만 적용됨): (로드 - softMaxLoad) * costPerUnitAboveSoftMax. 모든 비용이 합산되며 Shipment.penalty_cost와 동일한 단위여야 합니다. |
| startLoadInterval | object (Interval) 경로 시작 시 차량의 허용되는 적재 간격입니다. |
| endLoadInterval | object (Interval) 경로 끝 지점에서 차량에 허용되는 적재 간격입니다. |
| maxLoad | string (int64 format) 허용되는 최대 부하입니다. |
| costPerKilometer | object (LoadCost) 이 차량으로 1km를 이동하는 데 드는 1단위 짐의 비용입니다. 이는 연료 소비의 프록시로 사용할 수 있습니다. 부하가 중량 (뉴턴 단위)인 경우 부하*킬로미터는 에너지 차원입니다. |
| costPerTraveledHour | object (LoadCost) 이 차량의 1시간 동안 화물 단위를 포함한 이동 비용입니다. |

간격

허용되는 부하량 간격입니다.

| JSON 표현 |
| --- |
| {   "min": string,   "max": string } |

| 필드 |
| --- |
| min | string (int64 format) 허용되는 최소 부하입니다. 0 이상이어야 합니다. 둘 다 지정된 경우 min는 max 이하여야 합니다. |
| max | string (int64 format) 허용되는 최대 부하입니다. 0 이상이어야 합니다. 지정하지 않으면 이 메시지에 의해 최대 부하가 제한되지 않습니다. 둘 다 지정된 경우 min는 max 이하여야 합니다. |

LoadCost

Transition 중에 1단위의 부하를 이동하는 데 드는 비용입니다. 주어진 부하의 비용은 다음 두 부분의 합입니다.

min(load, loadThreshold) * costPerUnitBelowThreshold
max(0, load - loadThreshold) * costPerUnitAboveThreshold
이 비용으로 솔루션은 수요가 많은 항목을 먼저 제공하거나 이와 동일하게 수요가 많은 항목을 마지막으로 선택합니다. 예를 들어 차량에
load_limit {
key: "weight"
value {
costPerKilometer {
loadThreshold: 15
costPerUnitBelowThreshold: 2.0
costPerUnitAboveThreshold: 10.0
DurationLimit

차량 경로의 최대 시간을 정의하는 한도입니다. 하드 또는 소프트일 수 있습니다.최대한 낮은 한도 필드가 정의되면 최대한 낮은 한도 임곗값과 연결된 비용도 함께 정의해야 합니다.

| JSON 표현 |
| --- |
| {   "maxDuration": string,   "softMaxDuration": string,   "quadraticSoftMaxDuration": string,   "costPerHourAfterSoftMax": number,   "costPerSquareHourAfterQuadraticSoftMax": number } |

| 필드 |
| --- |
| maxDuration | string (Duration format) 최대 기간을 maxDuration으로 제한하는 하드 제한입니다. 소수점 아래가 최대 9자리까지이고 's'로 끝나는 초 단위 기간입니다. 예를 들면 "3.5s"입니다. |
| softMaxDuration | string (Duration format) 최대 기간 제한을 시행하지 않는 소프트 한도로, 이를 위반할 경우 경로에 비용이 발생합니다. 이 비용은 모델에서 동일한 단위로 정의된 다른 비용에 추가됩니다. 정의된 경우 softMaxDuration는 음수가 아니어야 합니다. maxDuration도 정의된 경우 softMaxDuration는 maxDuration보다 작아야 합니다. 소수점 아래가 최대 9자리까지이고 's'로 끝나는 초 단위 기간입니다. 예를 들면 "3.5s"입니다. |
| quadraticSoftMaxDuration | string (Duration format) 최대 기간 제한을 시행하지 않는 소프트 한도로, 이를 위반할 경우 경로에 2차 비용이 발생합니다. 이 비용은 동일한 단위로 모델에 정의된 다른 비용에 합산됩니다. 정의된 경우 quadraticSoftMaxDuration는 음수가 아니어야 합니다. maxDuration도 정의된 경우 quadraticSoftMaxDuration가 maxDuration보다 작아야 하며 차이가 하루를 넘지 않아야 합니다. maxDuration - quadraticSoftMaxDuration <= 86400 seconds 소수점 아래가 최대 9자리까지이고 's'로 끝나는 초 단위 기간입니다. 예를 들면 "3.5s"입니다. |
| costPerHourAfterSoftMax | number softMaxDuration 기준점을 위반할 경우 시간당 비용입니다. 기간이 임곗값 미만이면 추가 비용은 0이고, 그렇지 않은 경우에는 다음과 같이 기간에 따라 비용이 달라집니다.   costPerHourAfterSoftMax * (duration - softMaxDuration) 비용은 음수가 아니어야 합니다. |
| costPerSquareHourAfterQuadraticSoftMax | number quadraticSoftMaxDuration 기준점을 위반할 경우 발생한 제곱 시간당 비용입니다. 기간이 기준점 미만인 경우 추가 비용은 0이고, 그렇지 않은 경우 비용은 다음과 같이 기간에 따라 달라집니다.   costPerSquareHourAfterQuadraticSoftMax *   (duration - quadraticSoftMaxDuration)^2 비용은 음수가 아니어야 합니다. |

DistanceLimit

이동할 수 있는 최대 거리를 정의하는 제한입니다. 단단하거나 부드러울 수 있습니다.조정 가능 한도가 정의된 경우 softMaxMeters 및 costPerKilometerAboveSoftMax가 모두 정의되어야 하며 음수가 아니어야 합니다.

| JSON 표현 |
| --- |
| {   "maxMeters": string,   "softMaxMeters": string,   "costPerKilometerBelowSoftMax": number,   "costPerKilometerAboveSoftMax": number } |

| 필드 |
| --- |
| maxMeters | string (int64 format) 거리를 maxMeters 이하로 제한하는 엄격한 제한입니다. 한도는 음수가 아니어야 합니다. |
| softMaxMeters | string (int64 format) 최대 거리 제한을 적용하지 않는 소프트 제한이지만 위반하면 모델에 정의된 다른 비용에 동일한 단위로 더해지는 비용이 발생합니다. 정의된 경우 softMaxMeters는 maxMeters보다 작고 음수가 아니어야 합니다. |
| costPerKilometerBelowSoftMax | number 발생한 킬로미터당 비용으로, 최대 softMaxMeters까지 증가하며 수식은 다음과 같습니다.   min(distanceMeters, softMaxMeters) / 1000.0 *   costPerKilometerBelowSoftMax. 이 비용은 routeDistanceLimit에서 지원되지 않습니다. |
| costPerKilometerAboveSoftMax | number 거리가 한도(softMaxMeters)를 초과하는 경우 발생하는 킬로미터당 비용입니다. 거리가 한도 미만이면 추가 비용은 0이고, 그렇지 않으면 비용을 계산하는 데 사용되는 수식은 다음과 같습니다.   (distanceMeters - softMaxMeters) / 1000.0 *   costPerKilometerAboveSoftMax. 비용은 음수가 아니어야 합니다. |

BreakRule

차량의 휴식 시간을 생성하는 규칙(예: 점심 시간) 휴식 시간은 차량이 현재 위치에서 유휴 상태로 유지되고 방문을 수행할 수 없는 연속된 시간입니다. 중단이 발생할 수 있습니다.

두 방문 사이의 이동 시간 (방문 직전이나 방문 직후의 시간이 포함되며 방문 도중의 시간은 포함되지 않음) 이 경우 방문 시점 사이의 운송 시간을 연장합니다.
또는 차량 시동 전(휴식 중에는 차량이 시동되지 않을 수 있음)에 전송됩니다. 이 경우 차량 시동 시간에 영향을 미치지 않습니다.
또는 차량 종료 후(차량 종료 시간 포함)

| JSON 표현 |
| --- |
| {   "breakRequests": [     {       object (BreakRequest)     }   ],   "frequencyConstraints": [     {       object (FrequencyConstraint)     }   ] } |

| 필드 |
| --- |
| breakRequests[] | object (BreakRequest) 시점의 순서입니다. BreakRequest 메시지를 확인합니다. |
| frequencyConstraints[] | object (FrequencyConstraint) 여러 개의 FrequencyConstraint가 적용될 수 있습니다. 이 BreakRule의 BreakRequest로 모두 만족해야 합니다. FrequencyConstraint를 참고하세요. |

BreakRequest

각 차량에 적용되는 휴식 시간의 순서(즉, 수 및 순서)를 사전에 알고 있어야 합니다. 반복되는 BreakRequest는 시퀀스를 발생해야 하는 순서대로 정의합니다. 기간 (earliestStartTime / latestStartTime)이 중복될 수 있지만 주문과 호환되어야 합니다 (선택됨).

| JSON 표현 |
| --- |
| {   "earliestStartTime": string,   "latestStartTime": string,   "minDuration": string } |

| 필드 |
| --- |
| earliestStartTime | string (Timestamp format) 필수 항목입니다. 휴식 시간 시작의 하한(양 끝값 포함)입니다. RFC3339 UTC 'Zulu' 형식의 타임스탬프입니다(나노초 단위, 소수점 이하 9자리). 예를 들면 "2014-10-02T15:01:23Z" 및 "2014-10-02T15:01:23.045123456Z"입니다. |
| latestStartTime | string (Timestamp format) 필수 항목입니다. 광고 시점 시작 부분의 상한값 (포함)입니다. RFC3339 UTC 'Zulu' 형식의 타임스탬프입니다(나노초 단위, 소수점 이하 9자리). 예를 들면 "2014-10-02T15:01:23Z" 및 "2014-10-02T15:01:23.045123456Z"입니다. |
| minDuration | string (Duration format) 필수 항목입니다. 시점의 최소 길이입니다. 양수여야 합니다. 소수점 아래가 최대 9자리까지이고 's'로 끝나는 초 단위 기간입니다. 예를 들면 "3.5s"입니다. |

FrequencyConstraint

'12시간마다 최소 1시간의 휴식 시간이 있어야 합니다'와 같이 최소 광고 시점 빈도를 적용하여 위에 지정된 광고 시점의 빈도와 시간을 추가로 제한할 수 있습니다. 이를 '12시간의 슬라이딩 시간 윈도우 내에 1시간 이상의 휴식 시간이 한 번 이상 있어야 합니다'로 해석할 수 있다고 가정하면 이 예시는 다음 FrequencyConstraint로 변환됩니다.
minBreakDuration { seconds: 3600 }         # 1 hour.
maxInterBreakDuration { seconds: 39600 }  # 11 hours (12 - 1 = 11).
DurationDistanceMatrix

방문 및 차량 시작 위치에서 방문 및 차량 종료 위치까지의 소요 시간 및 거리 매트릭스를 지정합니다.

| JSON 표현 |
| --- |
| {   "rows": [     {       object (Row)     }   ],   "vehicleStartTag": string } |

| 필드 |
| --- |
| rows[] | object (Row) 시간 및 거리 행렬의 행을 지정합니다. ShipmentModel.duration_distance_matrix_src_tags와 동일한 수의 요소를 포함해야 합니다. |
| vehicleStartTag | string 이 시간 및 거리 매트릭스가 적용되는 차량을 정의하는 태그입니다. 비어 있으면 모든 차량에 적용되며 단일 매트릭스만 있을 수 있습니다. 각 차량 시작은 정확히 하나의 행렬과 일치해야 합니다. 즉, startTags 필드 중 정확히 하나가 행렬의 vehicleStartTag와 일치해야 하며, 이 행렬에만 일치해야 합니다. 모든 행렬의 vehicleStartTag는 서로 달라야 합니다. |

행

시간 및 거리 행렬의 행을 지정합니다.

| JSON 표현 |
| --- |
| {   "durations": [     string   ],   "meters": [     number   ] } |

| 필드 |
| --- |
| durations[] | string (Duration format) 지정된 행의 기간 값입니다. 요소가 ShipmentModel.duration_distance_matrix_dst_tags만큼 있어야 합니다. 소수점 아래가 최대 9자리까지이고 's'로 끝나는 초 단위 기간입니다. 예를 들면 "3.5s"입니다. |
| meters[] | number 지정된 행의 거리 값입니다. 모델 내 거리를 참조하는 비용이나 제약 조건이 없는 경우 비워 둘 수 있습니다. 그러지 않으면 요소가 durations만큼 있어야 합니다. |

TransitionAttributes

경로에서 두 번 연속 방문 간의 전환 속성을 지정합니다. 동일한 전환에 여러 개의 TransitionAttributes가 적용될 수 있습니다. 이 경우 모든 추가 비용이 합산되고 가장 엄격한 제약 조건 또는 한도가 적용됩니다(자연스러운 'AND' 시맨틱에 따라).

| JSON 표현 |
| --- |
| {   "srcTag": string,   "excludedSrcTag": string,   "dstTag": string,   "excludedDstTag": string,   "cost": number,   "costPerKilometer": number,   "distanceLimit": {     object (DistanceLimit)   },   "delay": string } |

| 필드 |
| --- |
| srcTag | string 이러한 속성이 적용되는 (src->dst) 전환 집합을 정의하는 태그입니다. 소스 방문 또는 차량 시작이 일치하는 경우는 VisitRequest.tags 또는 Vehicle.start_tags에 srcTag가 포함되거나 excludedSrcTag가 포함되지 않는 경우(두 필드 중 비어 있지 않은 필드에 따라 다름)입니다. |
| excludedSrcTag | string srcTag를 참조하세요. srcTag와 excludedSrcTag 중 정확히 1개는 비어 있지 않아야 합니다. |
| dstTag | string 도착지 방문 또는 차량 끝은 VisitRequest.tags 또는 Vehicle.end_tags에 dstTag가 포함되어 있거나 excludedDstTag이 포함되지 않은 경우 일치합니다 (두 필드 중 비어 있지 않은 필드에 따라 다름). |
| excludedDstTag | string dstTag를 참조하세요. dstTag와 excludedDstTag 중 정확히 1개는 비어 있지 않아야 합니다. |
| cost | number 이 전환을 실행하는 데 드는 비용을 지정합니다. 이 비용은 모델의 다른 모든 비용과 같은 단위이며 음수가 아니어야 합니다. 기존의 다른 모든 비용에 추가로 적용됩니다. |
| costPerKilometer | number 이 전환 중에 이동한 거리에 적용되는 킬로미터당 비용을 지정합니다. 차량에 지정된 Vehicle.cost_per_kilometer에 추가됩니다. |
| distanceLimit | object (DistanceLimit) 이 전환을 실행하는 동안 이동하는 거리에 대한 제한을 지정합니다. 2021년 6월부터는 최대 한도만 지원됩니다. |
| delay | string (Duration format) 이 전환을 실행할 때 발생하는 지연을 지정합니다. 이러한 지연은 항상 소스 방문을 마친 후 및 도착 페이지 방문을 시작하기 전에 발생합니다. 소수점 아래가 최대 9자리까지이고 's'로 끝나는 초 단위 기간입니다. 예를 들면 "3.5s"입니다. |

ShipmentTypeIncompatibility

shipmentType에 따라 배송 간의 비호환성을 지정합니다. 동일한 경로에서 호환되지 않는 배송이 표시되는 것은 비호환성 모드로 인해 제한됩니다.

| JSON 표현 |
| --- |
| {   "types": [     string   ],   "incompatibilityMode": enum (IncompatibilityMode) } |

| 필드 |
| --- |
| types[] | string 호환되지 않는 유형 목록 나열된 배송 중 shipment_types이 다른 두 배송은 '호환되지 않습니다'. |
| incompatibilityMode | enum (IncompatibilityMode) 비호환성에 적용된 모드입니다. |

IncompatibilityMode

동일한 경로에서 호환되지 않는 배송의 모양이 제한되는 방식을 정의하는 모드

| 열거형 |
| --- |
| INCOMPATIBILITY_MODE_UNSPECIFIED | 지정되지 않은 비호환성 모드입니다. 절대로 이 값을 사용하지 마세요. |
| NOT_PERFORMED_BY_SAME_VEHICLE | 이 모드에서는 호환되지 않는 유형의 배송 두 개가 동일한 차량을 공유할 수 없습니다. |
| NOT_IN_SAME_VEHICLE_SIMULTANEOUSLY | NOT_IN_SAME_VEHICLE_SIMULTANEOUSLY 비호환성 모드와 호환되지 않는 유형을 가진 배송 2개의 경우: 둘 다 수령만(배송 없음) 또는 배송만(수령 없음)인 경우 동일한 차량을 공유할 수 없습니다. 한 배송에 배송이 있고 다른 배송에 수령이 있는 경우, 두 배송품이 동일한 차량을 공유할 수 있습니다. 단, 전자가 픽업되기 전에 전자가 배송되어야 합니다. |

ShipmentTypeRequirement

shipmentType에 따라 배송 간 요구사항을 지정합니다. 요구사항의 세부정보는 요구사항 모드에 따라 정의됩니다.

| JSON 표현 |
| --- |
| {   "requiredShipmentTypeAlternatives": [     string   ],   "dependentShipmentTypes": [     string   ],   "requirementMode": enum (RequirementMode) } |

| 필드 |
| --- |
| requiredShipmentTypeAlternatives[] | string dependentShipmentTypes에서 요구하는 대체 배송 유형의 목록입니다. |
| dependentShipmentTypes[] | string dependentShipmentTypes 필드에 유형이 있는 모든 배송의 경우 동일한 경로에서 requiredShipmentTypeAlternatives 유형의 배송이 하나 이상 방문해야 합니다. 참고: shipmentType가 자체적으로 종속되는 요구사항 체인은 허용되지 않습니다. |
| requirementMode | enum (RequirementMode) 요구사항에 적용된 모드입니다. |

RequirementMode

경로에서 종속 배송의 모양을 정의하는 모드입니다.

| 열거형 |
| --- |
| REQUIREMENT_MODE_UNSPECIFIED | 지정되지 않은 요구사항 모드입니다. 절대로 이 값을 사용하지 마세요. |
| PERFORMED_BY_SAME_VEHICLE | 이 모드에서는 모든 '종속' 배송이 하나 이상의 '필수' 배송과 동일한 차량을 공유해야 합니다. |
| IN_SAME_VEHICLE_AT_PICKUP_TIME | IN_SAME_VEHICLE_AT_PICKUP_TIME 모드를 사용하면 모든 '종속' 배송의 경우 차량에 '필수' 배송이 하나 이상 있어야 합니다. 따라서 '별도' 배송 수거에는 다음 중 하나가 있어야 합니다. 배송 전용 '필수' 배송으로, 다음 경로를 통해 배송된 경우 그 전에 경로에서 '필수' 배송이 수령되었으며 '필수' 배송에 배송이 있는 경우 이 배송은 '종속' 배송의 수령 후에 실행되어야 합니다. |
| IN_SAME_VEHICLE_AT_DELIVERY_TIME | 이전과 동일하지만 '의존적인' 배송의 경우 배송 시 차량에 '필수' 배송이 있어야 합니다. |

PrecedenceRule

두 이벤트 간의 우선순위 규칙(각 이벤트는 배송 상품의 수령 또는 배송입니다): '첫 번째' 이벤트가 시작된 후 offsetDuration 이상이 지나야 '두 번째' 이벤트가 시작될 수 있습니다.여러 우선순위가 동일한(또는 관련된) 이벤트를 참조할 수 있습니다(예: 'A 배송 후 B 수령' 및 'B 수령 후 C 수령'또한 우선순위는 두 배송이 모두 실행되는 경우에만 적용되며 그렇지 않은 경우에는 무시됩니다.

| JSON 표현 |
| --- |
| {   "firstIsDelivery": boolean,   "secondIsDelivery": boolean,   "offsetDuration": string,   "firstIndex": integer,   "secondIndex": integer } |

| 필드 |
| --- |
| firstIsDelivery | boolean '첫 번째' 이벤트가 전송인지 여부를 나타냅니다. |
| secondIsDelivery | boolean '두 번째' 이벤트가 전송인지 여부를 나타냅니다. |
| offsetDuration | string (Duration format) '첫 번째' 이벤트와 '두 번째' 이벤트 사이의 오프셋입니다. 음수일 수 있습니다. 소수점 아래가 최대 9자리까지이고 's'로 끝나는 초 단위 기간입니다. 예를 들면 "3.5s"입니다. |
| firstIndex | integer '첫 번째' 이벤트의 배송 색인입니다. 이 필드는 지정해야 합니다. |
| secondIndex | integer '두 번째' 이벤트의 배송 색인입니다. 이 필드는 지정해야 합니다. |