Source URL: https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient?hl=ko
Title: GooglePlacesSwift Framework Reference

Send feedback

GooglePlacesSwift Framework Reference

Stay organized with collections

Save and categorize content based on your preferences.

PlacesClient

final class PlacesClient
extension PlacesClient : PlacesClientProtocol [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Protocols/PlacesClientProtocol.html], Sendable

Main interface to the Places SDK, used for searching and getting details about places.

This type should be accessed through PlacesClient.shared [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient.html#/s:17GooglePlacesSwift0B6ClientC6sharedACvpZ].

PlacesClient methods should only be called from the main thread. Calling these methods from
another thread will result in an exception or undefined behavior.

addInternalUsageAttributionID(_:) [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC29addInternalUsageAttributionIDyySSFZ]

Adds a usage attribution ID to the initializer, which helps Google understand which
libraries and samples are helpful to developers, such as usage of a marker clustering
library.
To opt out of sending the usage attribution ID, it is safe to delete this function call or
replace the value with an empty string.

Declaration

Swift
@MainActor
static func addInternalUsageAttributionID(_ internalUsageAttributionID: String)

fetchAutocompleteSuggestions(with:) [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC28fetchAutocompleteSuggestions4withs6ResultOySayAA0F10SuggestionOGAA0B5ErrorOGAA0F7RequestV_tYaF]

Declaration

Swift
final func fetchAutocompleteSuggestions(with request: AutocompleteRequest [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Structs/AutocompleteRequest.html]) async -> Result<[AutocompleteSuggestion [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/AutocompleteSuggestion.html]], PlacesError [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/PlacesError.html]>

fetchPhoto(with:) [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC10fetchPhoto4withs6ResultOySo7UIImageCAA0B5ErrorOGAA05FetchF7RequestV_tYaF]

Get a place using a request object.

Declaration

Swift
final func fetchPhoto(with request: FetchPhotoRequest [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Structs/FetchPhotoRequest.html]) async -> Result<UIImage, PlacesError [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/PlacesError.html]>

Parameters
| with | The FetchPhotoRequest to use for the query. |
| --- | --- |

Return Value
A Result with the UIImage response for the request, or a PlacesError [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/PlacesError.html].

fetchPlace(with:) [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC10fetchPlace4withs6ResultOyAA0F0VAA0B5ErrorOGAA05FetchF7RequestV_tYaF]

Get a place using a request object.

Declaration

Swift
final func fetchPlace(with request: FetchPlaceRequest [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Structs/FetchPlaceRequest.html]) async -> Result<Place [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Structs/Place.html], PlacesError [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/PlacesError.html]>

Parameters
| with | FetchPlaceRequest The fetch place request to use for the query. |
| --- | --- |

Return Value
A Result with the Place [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Structs/Place.html] response for the request, or a PlacesError [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/PlacesError.html].

isPlaceOpen(with:) [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC11isPlaceOpen4withs6ResultOyAA02IsfG8ResponseVAA0B5ErrorOGAA0jfG7RequestV_tYaF]

Gets the open status for a place.

Gets details for a place including all properties necessary to determine if it is open at
the optionally specified Date.

Declaration

Swift
final func isPlaceOpen(with request: IsPlaceOpenRequest [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Structs/IsPlaceOpenRequest.html]) async -> Result<IsPlaceOpenResponse [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Structs/IsPlaceOpenResponse.html], PlacesError [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/PlacesError.html]>

Return Value
A PlaceIsOpenResponse with the Bool? status for the requested place, or a
PlacesError [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/PlacesError.html].

openSourceLicenseInfo [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC21openSourceLicenseInfoSSvpZ]

Returns the open source software license information for the Google Places SDK for iOS. This
information must be made available within your application.

Declaration

Swift
static var openSourceLicenseInfo: String { get }

provideAPIKey(_:) [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC13provideAPIKeyySbSSFZ]

Provides your API key to the Google Places SDK for iOS.

This key is generated for your application via the Google Cloud Platform Console, and is
paired with your application’s bundle ID to identify it. This should be called by your
application before using PlacesClient (e.g., in application:didFinishLaunchingWithOptions:).

Declaration

Swift
@MainActor
static func provideAPIKey(_ key: String) -> Bool

Return Value
true if the APIKey was successfully provided.

sdkLongVersion [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC14sdkLongVersionSSvpZ]

Returns the long version for this release of the Google Places SDK for iOS. For example,
“1.0.0 (102.1)”.

Declaration

Swift
static var sdkLongVersion: String { get }

sdkVersion [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC10sdkVersionSSvpZ]

Returns the version for this release of the Google Places SDK for iOS. For example, “1.0.0”.

Declaration

Swift
static var sdkVersion: String { get }

searchByText(with:) [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC12searchByText4withs6ResultOySayAA5PlaceVGAA0B5ErrorOGAA06SearchfG7RequestV_tYaF]

Search for places by text and restrictions.

Declaration

Swift
final func searchByText(with request: SearchByTextRequest [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Structs/SearchByTextRequest.html]) async -> Result<[Place [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Structs/Place.html]], PlacesError [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/PlacesError.html]>

Parameters
| with | SearchByTextRequest The text request to use for the query. |
| --- | --- |

Return Value
A Result with the [Place] response for the request, or a PlacesError [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/PlacesError.html].

searchNearby(with:) [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC12searchNearby4withs6ResultOySayAA5PlaceVGAA0B5ErrorOGAA06SearchF7RequestV_tYaF]

Search for places near a location and restriction.

Declaration

Swift
final func searchNearby(with request: SearchNearbyRequest [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Structs/SearchNearbyRequest.html]) async -> Result<[Place [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Structs/Place.html]], PlacesError [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/PlacesError.html]>

Parameters
| with | SearchNearbyRequest The search nearby request to use for the query. |
| --- | --- |

Return Value
A Result with the [Place] response for the request, or a PlacesError [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Enums/PlacesError.html].

setAppCheckTokenProvider(_:) [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC24setAppCheckTokenProvideryyAA0fghI0_pFZ]

Provides the App Check token provider to the Google Places SDK for iOS.

This token provider is used to fetch the App Check token. This should be called by your
application before using PlacesClient (for example, in
application:didFinishLaunchingWithOptions:).

Declaration

Swift
@MainActor
static func setAppCheckTokenProvider(_ tokenProvider: any AppCheckTokenProvider [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Protocols/AppCheckTokenProvider.html])

Parameters
| tokenProvider | The App Check token provider. |
| --- | --- |

shared [https://developers.google.com/maps/documentation/places/ios-sdk/reference/swift/Classes/PlacesClient#/s:17GooglePlacesSwift0B6ClientC6sharedACvpZ]

Provides the shared instance of PlacesClient for the Google Places SDK for iOS, creating it if
necessary.

If your application often uses methods of PlacesClient it may want to retain this object
directly, as otherwise your connection to Google may be restarted on a regular basis.

Note
Google Places SDK for iOS must be initialized via PlacesClient.provideAPIKey(…)
prior to use.

Declaration

Swift
@MainActor
unowned static var shared: PlacesClient { get }

Send feedback