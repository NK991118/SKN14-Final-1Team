Source URL: https://developers.google.com/maps/documentation/android-sdk/examples/advanced-marker?hl=ko
Title: 지도에 고급 마커 추가하기

의견 보내기

지도에 고급 마커 추가하기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 예시에서는 고급 마커를 사용하여 지도에서 위치를 식별하고 고급 마커의 일부 기능을 보여줍니다.

자세한 내용은 문서 [https://developers.google.com/maps/documentation/android-sdk/advanced-markers/overview?hl=ko]를 참고하세요.

시작하기

샘플 코드를 사용하기 전에 개발 환경을 구성해야 합니다.
자세한 내용은 Android용 Maps SDK 코드 샘플 [https://developers.google.com/maps/documentation/android-sdk/examples?hl=ko]을 참고하세요.

코드 보기

Kotlin

class AdvancedMarkersDemoActivity : AppCompatActivity(), OnMapReadyCallback {

override fun onCreate(savedInstanceState: Bundle?) {
super.onCreate(savedInstanceState)
setContentView(R.layout.advanced_markers_demo)
val mapFragment = supportFragmentManager.findFragmentById(R.id.map) as SupportMapFragment?
mapFragment?.getMapAsync(this)
Log.d(TAG, "are advanced marker enabled?" + capabilities.isAdvancedMarkersAvailable)

textView.text = "Hello!"
val advancedMarkerView: Marker? = map.addMarker(
AdvancedMarkerOptions().position(SINGAPORE).iconView(textView).zIndex(1f)

val pinConfig: PinConfig = pinConfigBuilder.build()

AdvancedMarkerOptions().icon(BitmapDescriptorFactory.fromPinConfig(pinConfig))
.position(KUALA_LUMPUR)

val pinConfig2: PinConfig = pinConfigBuilder2.build()

val advancedMarkerOptions2: AdvancedMarkerOptions = AdvancedMarkerOptions()
.icon(BitmapDescriptorFactory.fromPinConfig(pinConfig2))
.position(JAKARTA)

val marker2: Marker? = map.addMarker(advancedMarkerOptions2)

val pinConfig3: PinConfig = pinConfigBuilder3.build()

val advancedMarkerOptions3: AdvancedMarkerOptions = AdvancedMarkerOptions()
.icon(BitmapDescriptorFactory.fromPinConfig(pinConfig3))
.position(BANGKOK)

val marker3: Marker? = map.addMarker(advancedMarkerOptions3)

pinConfigBuilder4.setGlyph(PinConfig.Glyph(Color.TRANSPARENT))
val pinConfig4: PinConfig = pinConfigBuilder4.build()

val advancedMarkerOptions4: AdvancedMarkerOptions = AdvancedMarkerOptions()
.icon(BitmapDescriptorFactory.fromPinConfig(pinConfig4))
.position(MANILA)

val marker4: Marker? = map.addMarker(advancedMarkerOptions4)

AdvancedMarkerOptions.CollisionBehavior.REQUIRED_AND_HIDES_OPTIONAL
val advancedMarkerOptions5: AdvancedMarkerOptions = AdvancedMarkerOptions()
.position(HO_CHI_MINH_CITY)
.collisionBehavior(collisionBehavior)

val marker5: Marker? = map.addMarker(advancedMarkerOptions5)

public class AdvancedMarkersDemoActivity extends AppCompatActivity implements OnMapReadyCallback {

private static final LatLng SINGAPORE = new LatLng(1.3521, 103.8198);
private static final LatLng KUALA_LUMPUR = new LatLng(3.1390, 101.6869);
private static final LatLng JAKARTA = new LatLng(-6.2088, 106.8456);
private static final LatLng BANGKOK = new LatLng(13.7563, 100.5018);
private static final LatLng MANILA = new LatLng(14.5995, 120.9842);
private static final LatLng HO_CHI_MINH_CITY = new LatLng(10.7769, 106.7009);

private static final float ZOOM_LEVEL = 3.5f;

private static final String TAG = AdvancedMarkersDemoActivity.class.getName();

@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.advanced_markers_demo);

SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);
if (mapFragment != null) {
mapFragment.getMapAsync(this);

MapCapabilities capabilities = map.getMapCapabilities();
Log.d(TAG, "Are advanced markers enabled? " + capabilities.isAdvancedMarkersAvailable());

TextView textView = new TextView(this);
textView.setText("Hello!");
Marker advancedMarkerView = map.addMarker(new AdvancedMarkerOptions()
.position(SINGAPORE)
.iconView(textView)
.zIndex(1f));

PinConfig.Builder pinConfigBuilder = PinConfig.builder();
pinConfigBuilder.setBackgroundColor(Color.MAGENTA);
PinConfig pinConfig = pinConfigBuilder.build();

AdvancedMarkerOptions advancedMarkerOptions = new AdvancedMarkerOptions()
.icon(BitmapDescriptorFactory.fromPinConfig(pinConfig))
.position(KUALA_LUMPUR);

Marker marker = map.addMarker(advancedMarkerOptions);

PinConfig.Builder pinConfigBuilder2 = PinConfig.builder();
pinConfigBuilder2.setBorderColor(Color.BLUE);
PinConfig pinConfig2 = pinConfigBuilder2.build();

AdvancedMarkerOptions advancedMarkerOptions2 = new AdvancedMarkerOptions()
.icon(BitmapDescriptorFactory.fromPinConfig(pinConfig2))
.position(JAKARTA);

Marker marker2 = map.addMarker(advancedMarkerOptions2);

PinConfig.Builder pinConfigBuilder3 = PinConfig.builder();
PinConfig.Glyph glyphText = new PinConfig.Glyph("A");

PinConfig pinConfig3 = pinConfigBuilder3.build();

AdvancedMarkerOptions advancedMarkerOptions3 = new AdvancedMarkerOptions()
.icon(BitmapDescriptorFactory.fromPinConfig(pinConfig3))
.position(BANGKOK);

Marker marker3 = map.addMarker(advancedMarkerOptions3);

PinConfig.Builder pinConfigBuilder4 = PinConfig.builder();
pinConfigBuilder4.setBackgroundColor(Color.MAGENTA);
pinConfigBuilder4.setGlyph(new PinConfig.Glyph(Color.TRANSPARENT));
PinConfig pinConfig4 = pinConfigBuilder4.build();

AdvancedMarkerOptions advancedMarkerOptions4 = new AdvancedMarkerOptions()
.icon(BitmapDescriptorFactory.fromPinConfig(pinConfig4))
.position(MANILA);

Marker marker4 = map.addMarker(advancedMarkerOptions4);

AdvancedMarkerOptions advancedMarkerOptions5 = new AdvancedMarkerOptions()
.position(HO_CHI_MINH_CITY)
.collisionBehavior(collisionBehavior);

Marker marker5 = map.addMarker(advancedMarkerOptions5);
Android 스튜디오에서 File > New > Import Project를 선택합니다.
저장소를 저장한 위치로 이동하여 Kotlin 또는 Java를 위한 프로젝트 디렉터리를 선택합니다.

Kotlin: PATH-REPO/android-samples/ApiDemos/kotlin
Java: PATH-REPO/android-samples/ApiDemos/java

열기를 선택합니다. Android 스튜디오에서 Gradle 빌드 도구를 사용하여 프로젝트를 빌드합니다.
프로젝트의 local.properties 파일과 동일한 디렉터리에서 빈 secrets.properties 파일을 만듭니다. 자세한 내용은 프로젝트에 직접 생성한 API 키 추가하기 [https://developers.google.com/maps/documentation/android-sdk/config?hl=ko#step_3_add_your_api_key_to_the_project]를 참고하세요.
다음 문자열을 secrets.properties에 추가합니다(YOUR_API_KEY는 API 키의 값으로 변경).
MAPS_API_KEY=YOUR_API_KEY
앱을 실행합니다.

의견 보내기