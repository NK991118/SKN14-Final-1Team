Source URL: https://developers.google.com/maps/documentation/datasets/create?hl=ko
Title: 데이터 세트 만들기

의견 보내기

데이터 세트 만들기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

데이터 세트를 만드는 과정은 두 단계로 이루어집니다.

데이터 세트를 만드는 요청을 합니다.
데이터를 데이터 세트에 업로드하도록 요청합니다.

초기 데이터 업로드 후 데이터 세트에 새 데이터를 업로드하여 새 버전의 데이터 세트를 만들 수 있습니다.

데이터 세트 생성

datasets [https://developers.google.com/maps/documentation/datasets/reference/rest/v1/projects.datasets/create?hl=ko] 엔드포인트에 POST 요청을 전송하여 데이터 세트를 만듭니다.

https://mapsplatformdatasets.googleapis.com/v1/projects/PROJECT_NUMBER_OR_ID/datasets

데이터 세트를 정의하는 요청에 JSON 본문 [https://developers.google.com/maps/documentation/datasets/reference/rest/v1/projects.datasets?hl=ko#Dataset]을 전달합니다. 상담사는 다음 작업을 수행해야 합니다.

데이터 세트의 displayName를 지정합니다. displayName 값은 모든 데이터 세트에서 고유해야 합니다.
usage를 USAGE_DATA_DRIVEN_STYLING로 설정합니다.
참고: usage에 지원되는 유일한 값은 USAGE_DATA_DRIVEN_STYLING입니다.

예를 들면 다음과 같습니다.

curl -X POST -d '{
"displayName": "My Test Dataset",
"usage": "USAGE_DATA_DRIVEN_STYLING"
Cloud Storage에서 데이터 업로드

데이터 세트의 ID도 포함하는 datasets [https://developers.google.com/maps/documentation/datasets/reference/rest/v1/projects.datasets/create?hl=ko] 엔드포인트에 POST 요청을 전송하여 Cloud Storage에서 데이터 세트로 업로드합니다.

https://mapsplatformdatasets.googleapis.com/v1/projects/PROJECT_NUMBER_OR_ID/datasets/DATASET_ID:import

JSON 요청 본문에서 다음을 수행합니다.

inputUri를 사용하여 Cloud Storage의 데이터가 포함된 리소스의 파일 경로를 지정합니다. 이 경로는 gs://GCS_BUCKET/FILE 형식입니다.

요청하는 사용자에게는 스토리지 객체 뷰어 [https://cloud.google.com/storage/docs/access-control/iam-roles?hl=ko] 역할 또는 storage.objects.get 권한이 포함된 다른 역할이 필요합니다. Cloud Storage 액세스 관리에 관한 자세한 내용은 액세스 제어 개요 [https://cloud.google.com/storage/docs/access-control?hl=ko]를 참고하세요.
fileFormat을 사용하여 데이터의 파일 형식을 FILE_FORMAT_GEOJSON   (GeoJson 파일), FILE_FORMAT_KML   (KML 파일) 또는 FILE_FORMAT_CSV (CSV 파일) 중 하나로 지정합니다.

예를 들면 다음과 같습니다.

curl -X POST  -d '{
"gcs_source":{
"inputUri": "gs://my_bucket/my_csv_file",
"fileFormat": "FILE_FORMAT_CSV"
Goog-Upload-Protocol 헤더가 multipart로 설정됩니다.
업로드할 데이터의 유형을 지정하는 파일의 경로를 지정하는 metadata 속성입니다. FILE_FORMAT_GEOJSON    (GeoJSON 파일), FILE_FORMAT_KML   (KML 파일) 또는 FILE_FORMAT_CSV (CSV 파일) 중 하나입니다.

이 파일의 콘텐츠는 다음 형식을 따릅니다.

업로드할 데이터가 포함된 GeoJSON, KML 또는 CSV 파일의 경로를 지정하는 rawdata 속성입니다.

다음 요청은 curl -F 옵션을 사용하여 두 파일의 경로를 지정합니다.

curl -X POST \
-H 'X-Goog-User-Project: PROJECT_NUMBER_OR_ID' \
-H "Authorization: Bearer $TOKEN" \
-H "X-Goog-Upload-Protocol: multipart" \
-F "metadata=@csv_metadata_file" \
-F "rawdata=@csv_data_file" \
"https://mapsplatformdatasets.googleapis.com/upload/v1/projects/PROJECT_NUMBER_OR_ID/datasets/f57074a0-a8b6-403e-9df1-e9fc46:import"

응답은 다음 형식입니다.

"name": "projects/PROJECT_NUMBER_OR_ID/datasets/DATASET_ID@VERSION_NUMBER"
-H "X-Goog-User-Project: PROJECT_NUMBER_OR_ID" \
-H "Authorization: Bearer $TOKEN" \
"https://mapsplatformdatasets.googleapis.com/v1/projects/PROJECT_NUMBER_OR_ID/datasets/f57074a0-a8b6-403e-9df1-e9fc46"

업로드가 성공하려면 데이터 세트의 state이 STATE_COMPLETED이어야 합니다.

"name": "projects/119757857/datasets/f57074a0-a8b6-403e-9df1-e9fc46",
"displayName": "My Test Dataset",
"description": " ",
"versionId": "837c5a9e-c885-4a5f-a462-7e35673e5218",
"usage": [
"USAGE_DATA_DRIVEN_STYLING"
],
"localFileSource": {
"filename": "Parks_Properties_20240529.csv",
"fileFormat": "FILE_FORMAT_CSV"
-H "X-Goog-User-Project: PROJECT_NUMBER_OR_ID" \
-H "Authorization: Bearer $TOKEN" \
"https://mapsplatformdatasets.googleapis.com/v1/projects/PROJECT_NUMBER_OR_ID/datasets/f57074a0-a8b6-403e-9df1-e9fc46:fetchDatasetErrors"

응답에 errors 배열이 포함됩니다. 이 배열에는 호출당 최대 50개의 Status [https://developers.google.com/maps/documentation/datasets/reference/rest/v1/projects.datasets/fetchDatasetErrors?hl=ko#status] 유형 오류가 포함되며 총 500개의 오류를 지원합니다.

"nextPageToken": "cigKJkIkMTU3MzM0NjQtYzlmMy00YzYxLWIxM2YtYmVkYjFjYjRkYzRj",
"errors": [
"code": 3,
"message": "INVALID_ARGUMENT: No address was derived from fields 2. (from line 631)"
-H "content-type: application/json" \
-H "X-Goog-User-Project: PROJECT_NUMBER_OR_ID" \
-H "Authorization: Bearer $TOKEN" \
"https://mapsplatformdatasets.googleapis.com/v1/projects/PROJECT_NUMBER_OR_ID/datasets/f57074a0-a8b6-403e-9df1-e9fc46:fetchDatasetErrors?pageToken=cigKJkIkMTU3MzM0NjQtYzlmMy00YzYxLWIxM2YtYmVkYjFjYjRkYzRj"

기본적으로 응답에는 페이지당 최대 50개의 오류가 포함됩니다. pageSize 쿼리 매개변수를 사용하여 페이지 크기를 제어합니다.

데이터 세트에 새 데이터 업로드

데이터 세트를 만들고 초기 데이터를 성공적으로 업로드하면 데이터 세트의 상태가 STATE_COMPLETED로 설정됩니다. 즉, 데이터 세트를 앱에서 사용할 수 있습니다. 데이터 세트의 state를 확인하려면 데이터 세트 가져오기 [https://developers.google.com/maps/documentation/datasets/get?hl=ko]를 참고하세요.

데이터 세트에 새 데이터를 업로드하여 새 버전의 데이터 세트를 만들 수도 있습니다. 새 데이터를 업로드하려면 Cloud Storage에서 데이터 업로드 [https://developers.google.com/maps/documentation/datasets/create?hl=ko#upload-cloud] 또는 파일에서 데이터 업로드 [https://developers.google.com/maps/documentation/datasets/create?hl=ko#upload-file]와 동일한 프로세스를 사용하고 업로드할 새 데이터를 지정합니다.

새 데이터가 성공적으로 업로드되면 다음 단계를 따르세요.

새 버전의 데이터 세트 상태가 STATE_COMPLETED로 설정됩니다.
새 버전이 '활성' 버전이 되며 앱에서 사용되는 버전입니다.

업로드에 오류가 있는 경우:

새 데이터 세트 버전의 상태는 다음 상태 중 하나로 설정됩니다.

STATE_IMPORT_FAILED
STATE_PROCESSING_FAILED
STATE_PUBLISHING_FAILED
STATE_DELETION_FAILED

이전 데이터 세트의 성공한 버전은 '활성' 버전으로 유지되며 앱에서 사용되는 버전입니다.

의견 보내기