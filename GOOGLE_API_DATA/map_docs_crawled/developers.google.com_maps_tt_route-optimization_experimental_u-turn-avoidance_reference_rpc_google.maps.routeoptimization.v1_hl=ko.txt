Source URL: https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko
Title: Package google.maps.routeoptimization.v1

Package google.maps.routeoptimization.v1

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 페이지의 내용색인 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#index]RouteOptimization [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#routeoptimization]AggregatedMetrics [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#aggregatedmetrics]BatchOptimizeToursMetadata [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#batchoptimizetoursmetadata]BatchOptimizeToursRequest [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#batchoptimizetoursrequest]AsyncModelConfig [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#asyncmodelconfig]BatchOptimizeToursResponse [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#batchoptimizetoursresponse]BreakRule [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#breakrule]BreakRequest [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#breakrequest]FrequencyConstraint [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#frequencyconstraint]DataFormat [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#dataformat]DistanceLimit [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#distancelimit]GcsDestination [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#gcsdestination]GcsSource [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#gcssource]InjectedSolutionConstraint [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#injectedsolutionconstraint]ConstraintRelaxation [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#constraintrelaxation]휴식 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#relaxation]수준 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#level]InputConfig [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#inputconfig]위치 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#location]OptimizeToursRequest [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#optimizetoursrequest]SearchMode [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#searchmode]SolvingMode [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#solvingmode]OptimizeToursResponse [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#optimizetoursresponse]측정항목 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#metrics]OptimizeToursValidationError [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#optimizetoursvalidationerror]FieldReference [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#fieldreference]OutputConfig [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#outputconfig]배송 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#shipment]로드 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#load]VisitRequest [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#visitrequest]ShipmentModel [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#shipmentmodel]DurationDistanceMatrix [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#durationdistancematrix]행 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#row]PrecedenceRule [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#precedencerule]ShipmentRoute [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#shipmentroute]휴식 시간 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#break]EncodedPolyline [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#encodedpolyline]전환 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#transition]VehicleLoad [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#vehicleload]방문 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#visit]ShipmentTypeIncompatibility [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#shipmenttypeincompatibility]IncompatibilityMode [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#incompatibilitymode]ShipmentTypeRequirement [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#shipmenttyperequirement]RequirementMode [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#requirementmode]SkippedShipment [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#skippedshipment]이유 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#reason]코드 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#code]TimeWindow [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#timewindow]TransitionAttributes [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#transitionattributes]차량 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#vehicle]DurationLimit [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#durationlimit]LoadLimit [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#loadlimit]간격 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#interval]TravelMode [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#travelmode]UnloadingPolicy [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#unloadingpolicy]경유지 [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#waypoint]

색인

RouteOptimization [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.RouteOptimization](인터페이스)
AggregatedMetrics [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.AggregatedMetrics](메시지)
BatchOptimizeToursMetadata [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.BatchOptimizeToursMetadata](메시지)
BatchOptimizeToursRequest [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.BatchOptimizeToursRequest](메시지)
BatchOptimizeToursRequest.AsyncModelConfig [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.BatchOptimizeToursRequest.AsyncModelConfig](메시지)
BatchOptimizeToursResponse [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.BatchOptimizeToursResponse](메시지)
BreakRule [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.BreakRule](메시지)
BreakRule.BreakRequest [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.BreakRule.BreakRequest](메시지)
BreakRule.FrequencyConstraint [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.BreakRule.FrequencyConstraint](메시지)
DataFormat [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.DataFormat](열거형)
DistanceLimit [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.DistanceLimit](메시지)
GcsDestination [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.GcsDestination](메시지)
GcsSource [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.GcsSource](메시지)
InjectedSolutionConstraint [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.InjectedSolutionConstraint](메시지)
InjectedSolutionConstraint.ConstraintRelaxation [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.InjectedSolutionConstraint.ConstraintRelaxation](메시지)
InjectedSolutionConstraint.ConstraintRelaxation.Relaxation [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.InjectedSolutionConstraint.ConstraintRelaxation.Relaxation](메시지)
InjectedSolutionConstraint.ConstraintRelaxation.Relaxation.Level [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.InjectedSolutionConstraint.ConstraintRelaxation.Relaxation.Level](열거형)
InputConfig [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.InputConfig](메시지)
Location [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Location](메시지)
OptimizeToursRequest [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.OptimizeToursRequest](메시지)
OptimizeToursRequest.SearchMode [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.OptimizeToursRequest.SearchMode](열거형)
OptimizeToursRequest.SolvingMode [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.OptimizeToursRequest.SolvingMode](열거형)
OptimizeToursResponse [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.OptimizeToursResponse](메시지)
OptimizeToursResponse.Metrics [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.OptimizeToursResponse.Metrics](메시지)
OptimizeToursValidationError [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.OptimizeToursValidationError](메시지)
OptimizeToursValidationError.FieldReference [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.OptimizeToursValidationError.FieldReference](메시지)
OutputConfig [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.OutputConfig](메시지)
Shipment [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Shipment](메시지)
Shipment.Load [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Shipment.Load](메시지)
Shipment.VisitRequest [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Shipment.VisitRequest](메시지)
ShipmentModel [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentModel](메시지)
ShipmentModel.DurationDistanceMatrix [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentModel.DurationDistanceMatrix](메시지)
ShipmentModel.DurationDistanceMatrix.Row [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentModel.DurationDistanceMatrix.Row](메시지)
ShipmentModel.PrecedenceRule [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentModel.PrecedenceRule](메시지)
ShipmentRoute [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute](메시지)
ShipmentRoute.Break [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute.Break](메시지)
ShipmentRoute.EncodedPolyline [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute.EncodedPolyline](메시지)
ShipmentRoute.Transition [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute.Transition](메시지)
ShipmentRoute.VehicleLoad [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute.VehicleLoad](메시지)
ShipmentRoute.Visit [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute.Visit](메시지)
ShipmentTypeIncompatibility [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentTypeIncompatibility](메시지)
ShipmentTypeIncompatibility.IncompatibilityMode [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentTypeIncompatibility.IncompatibilityMode](열거형)
ShipmentTypeRequirement [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentTypeRequirement](메시지)
ShipmentTypeRequirement.RequirementMode [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentTypeRequirement.RequirementMode](열거형)
SkippedShipment [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.SkippedShipment](메시지)
SkippedShipment.Reason [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.SkippedShipment.Reason](메시지)
SkippedShipment.Reason.Code [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.SkippedShipment.Reason.Code](열거형)
TimeWindow [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.TimeWindow](메시지)
TransitionAttributes [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.TransitionAttributes](메시지)
Vehicle [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Vehicle](메시지)
Vehicle.DurationLimit [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Vehicle.DurationLimit](메시지)
Vehicle.LoadLimit [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Vehicle.LoadLimit](메시지)
Vehicle.LoadLimit.Interval [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Vehicle.LoadLimit.Interval](메시지)
Vehicle.TravelMode [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Vehicle.TravelMode](열거형)
Vehicle.UnloadingPolicy [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Vehicle.UnloadingPolicy](열거형)
Waypoint [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Waypoint](메시지)

RouteOptimization

차량 이동 경로를 최적화하는 서비스입니다.특정 유형의 필드 유효성:

google.protobuf.Timestamp

시간은 Unix 시간으로 표시됩니다. 1970-01-01T00:00:00+00:00 이후 경과된 초입니다.
seconds는 [0, 253402300799] 범위(즉, [1970-01-01T00:00:00+00:00, 9999-12-31T23:59:59+00:00])여야 합니다.
nanos는 설정 해제하거나 0으로 설정해야 합니다.

google.protobuf.Duration

seconds는 [0, 253402300799] 범위(즉, [1970-01-01T00:00:00+00:00, 9999-12-31T23:59:59+00:00])여야 합니다.
nanos는 설정 해제하거나 0으로 설정해야 합니다.

google.type.LatLng

latitude는 [-90.0, 90.0] 범위여야 합니다.
경도는 [-180.0, 180.0] 범위여야 합니다.
위도와 경도 중 하나 이상이 0이 아니어야 합니다.

| BatchOptimizeTours |
| --- |
| rpc BatchOptimizeTours(BatchOptimizeToursRequest) returns (Operation) 하나 이상의 OptimizeToursRequest 메시지에 대해 차량 투어를 일괄적으로 최적화합니다. 이 메서드는 장기 실행 작업 (LRO)입니다. 최적화 입력 (OptimizeToursRequest 메시지) 및 출력 (OptimizeToursResponse 메시지)은 사용자 지정 형식으로 Cloud Storage에서 읽고 씁니다. OptimizeTours 메서드와 마찬가지로 각 OptimizeToursRequest는 ShipmentModel를 포함하고 전체 비용을 최소화하면서 차량이 실행할 경로 집합인 ShipmentRoute가 포함된 OptimizeToursResponse를 반환합니다. 사용자는 operations.get를 폴링하여 LRO 상태를 확인할 수 있습니다. LRO의 done 필드가 false이면 하나 이상의 요청이 아직 처리 중입니다. 다른 요청은 성공적으로 완료되었으며 결과는 GCS에서 확인할 수 있습니다. LRO의 done 필드가 true이면 모든 요청이 처리된 것입니다. 처리가 완료된 요청의 결과는 GCS에서 확인할 수 있습니다. 실패한 요청의 결과는 GCS에서 사용할 수 없습니다. LRO의 error 필드가 설정된 경우 실패한 요청 중 하나의 오류가 포함됩니다. 승인 범위 다음 OAuth 범위가 필요합니다. https://www.googleapis.com/auth/cloud-platform IAM 권한 parent 리소스에 대해서는 다음 IAM 권한이 필요합니다. routeoptimization.operations.create 자세한 내용은 IAM 문서를 참조하세요. |

| OptimizeTours |
| --- |
| rpc OptimizeTours(OptimizeToursRequest) returns (OptimizeToursResponse) ShipmentModel가 포함된 OptimizeToursRequest를 전송하고 전체 비용을 최소화하면서 차량이 실행할 경로 집합인 ShipmentRoute가 포함된 OptimizeToursResponse를 반환합니다. ShipmentModel 모델은 주로 실행해야 하는 Shipment와 Shipment를 전송하는 데 사용할 수 있는 Vehicle로 구성됩니다. ShipmentRoute는 Shipment를 Vehicle에 할당합니다. 더 구체적으로는 각 차량에 일련의 Visit를 할당합니다. 여기서 Visit는 Shipment의 수령 또는 배송인 VisitRequest에 해당합니다. 목표는 비용이 ShipmentModel에 정의된 많은 구성요소를 포함하는 경우 총비용을 최소화하는 ShipmentRoute를 Vehicle에 할당하는 것입니다. 승인 범위 다음 OAuth 범위가 필요합니다. https://www.googleapis.com/auth/cloud-platform IAM 권한 parent 리소스에 대해서는 다음 IAM 권한이 필요합니다. routeoptimization.locations.use 자세한 내용은 IAM 문서를 참조하세요. |

AggregatedMetrics

ShipmentRoute [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute] (모든 Transition [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute.Transition] 요소에 대한 OptimizeToursResponse [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.OptimizeToursResponse] 또는 모든 Visit [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute.Visit] (모든 ShipmentRoute [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute] 요소에 대한 OptimizeToursResponse [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.OptimizeToursResponse])) 요소에 대한 집계된 측정항목입니다.

| 필드 |
| --- |
| performed_shipment_count | int32 처리된 배송 건수입니다. 수령 및 배송 쌍은 한 번만 집계됩니다. |
| travel_duration | Duration 경로 또는 솔루션의 총 이동 시간입니다. |
| wait_duration | Duration 경로 또는 솔루션의 총 대기 시간입니다. |
| delay_duration | Duration 경로 또는 솔루션의 총 지연 시간입니다. |
| break_duration | Duration 경로 또는 솔루션의 총 휴식 시간입니다. |
| visit_duration | Duration 경로 또는 솔루션의 총 방문 시간입니다. |
| total_duration | Duration 총 시간은 위의 모든 시간의 합과 같아야 합니다. 경로의 경우 다음과도 일치합니다. [ShipmentRoute.vehicle_end_time][google.maps.routeoptimization.v1.ShipmentRoute.vehicle_end_time] - [ShipmentRoute.vehicle_start_time][google.maps.routeoptimization.v1.ShipmentRoute.vehicle_start_time] |
| travel_distance_meters | double 경로 또는 솔루션의 총 이동 거리입니다. |
| max_loads | map<string, VehicleLoad> 이 경로 (해결 방법)의 각 수량에 대해 전체 경로 (해결 방법)에서 달성된 최대 부하로, 모든 Transition.vehicle_loads (해결 방법)의 최대값으로 계산됩니다. ShipmentRoute.metrics.max_loads |

BatchOptimizeToursMetadata
이 유형에는 필드가 없습니다.

BatchOptimizeToursRequest 호출의 작업 메타데이터입니다.

BatchOptimizeToursRequest

비동기 작업으로 이동 경로를 일괄 최적화하도록 요청합니다. 각 입력 파일에는 OptimizeToursRequest가 하나 포함되어야 하며 각 출력 파일에는 OptimizeToursResponse가 하나 포함됩니다. 요청에는 파일을 읽고 쓰고 파싱하는 정보가 포함됩니다. 모든 입력 파일과 출력 파일이 동일한 프로젝트에 있어야 합니다.

| 필드 |
| --- |
| parent | string 필수 항목입니다. 전화를 걸 프로젝트와 위치를 타겟팅합니다. 형식: * projects/{project-id} * projects/{project-id}/locations/{location-id} 위치를 지정하지 않으면 리전이 자동으로 선택됩니다. |
| model_configs[] | AsyncModelConfig 필수 항목입니다. 각 구매 모델의 입력/출력 정보(예: 파일 경로, 데이터 형식) |

AsyncModelConfig

하나의 최적화 모델을 비동기식으로 해결하기 위한 정보입니다.

| 필드 |
| --- |
| display_name | string 선택사항입니다. 사용자가 정의한 모델 이름으로, 사용자가 모델을 추적하기 위해 별칭으로 사용할 수 있습니다. |
| input_config | InputConfig 필수 항목입니다. 입력 모델에 대한 정보입니다. |
| output_config | OutputConfig 필수 항목입니다. 원하는 출력 위치 정보입니다. |

BatchOptimizeToursResponse
이 유형에는 필드가 없습니다.

BatchOptimizeToursRequest에 대한 응답입니다. 이는 작업이 완료된 후 장기 실행 작업에서 반환됩니다.

BreakRule

차량의 휴식 시간을 생성하는 규칙 (예: 점심 시간) 휴식 시간은 차량이 현재 위치에서 유휴 상태로 유지되고 방문을 수행할 수 없는 연속된 시간입니다. 다음과 같은 경우 중단이 발생할 수 있습니다.

두 방문 간의 이동 중에 (방문 직전 또는 직후의 시간이 포함되며 방문 중에는 포함되지 않음) 방문 간의 해당 이동 시간을 연장합니다.
또는 차량 시동 전 (휴식 중에는 차량이 시동되지 않을 수 있음)에 전송되며, 이 경우 차량 시동 시간에 영향을 미치지 않습니다.
또는 차량 종료 후 (차량 종료 시간 포함)

| 필드 |
| --- |
| break_requests[] | BreakRequest 시점의 시퀀스입니다. BreakRequest 메시지를 확인합니다. |
| frequency_constraints[] | FrequencyConstraint 여러 개의 FrequencyConstraint가 적용될 수 있습니다. 이 BreakRule의 BreakRequest에 의해 모두 충족되어야 합니다. FrequencyConstraint를 참고하세요. |

BreakRequest

각 차량에 적용되는 휴식 시간의 순서 (즉, 수 및 순서)를 사전에 알고 있어야 합니다. 반복되는 BreakRequest는 발생해야 하는 순서대로 해당 시퀀스를 정의합니다. 시간 범위 (earliest_start_time / latest_start_time)가 겹칠 수 있지만 순서와 호환되어야 합니다 (확인됨).

| 필드 |
| --- |
| earliest_start_time | Timestamp 필수 항목입니다. 휴식 시간 시작의 하한 (양 끝값 포함)입니다. |
| latest_start_time | Timestamp 필수 항목입니다. 휴식 시간 시작의 상한 (양 끝값 포함)입니다. |
| min_duration | Duration 필수 항목입니다. 시점의 최소 길이입니다. 양수여야 합니다. |

FrequencyConstraint

'12시간마다 1시간 이상의 휴식이 있어야 함'과 같은 최소 휴식 빈도를 적용하여 위에 지정된 휴식의 빈도와 기간을 추가로 제한할 수 있습니다. 이를 '12시간의 슬라이딩 시간 윈도우 내에 1시간 이상의 휴식 시간이 한 번 이상 있어야 합니다'로 해석할 수 있다고 가정하면 이 예시는 다음 FrequencyConstraint로 변환됩니다.
min_break_duration { seconds: 3600 }         # 1 hour.
max_inter_break_duration { seconds: 39600 }  # 11 hours (12 - 1 = 11).

입력 및 출력 파일의 데이터 형식입니다.

| 열거형 |
| --- |
| DATA_FORMAT_UNSPECIFIED | 잘못된 값입니다. 형식이 UNSPECIFIED이 아니어야 합니다. |
| JSON | JavaScript 객체 표기법 |
| PROTO_TEXT | Protocol Buffers 텍스트 형식 https://protobuf.dev/reference/protobuf/textformat-spec/ 참고 |

DistanceLimit

이동할 수 있는 최대 거리를 정의하는 제한입니다. 하드 또는 소프트일 수 있습니다.조정 가능 한도가 정의된 경우 soft_max_meters 및 cost_per_kilometer_above_soft_max가 모두 정의되어야 하며 음수가 아니어야 합니다.

| 필드 |
| --- |
| max_meters | int64 거리를 최대 max_meters로 제한하는 하드 제한입니다. 한도는 음수가 아니어야 합니다. |
| soft_max_meters | int64 최대 거리 제한을 적용하지 않는 소프트 제한이지만 위반하면 모델에 정의된 다른 비용에 동일한 단위로 더해지는 비용이 발생합니다. 정의된 경우 soft_max_meters는 max_meters보다 작고 음수가 아니어야 합니다. |
| cost_per_kilometer_above_soft_max | double 거리가 soft_max_meters 한도를 초과하면 발생하는 킬로미터당 비용입니다. 거리가 한도 미만인 경우 추가 비용은 0이고, 그렇지 않은 경우 비용을 계산하는 데 사용되는 수식은 다음과 같습니다.   (distance_meters - soft_max_meters) / 1000.0 *   cost_per_kilometer_above_soft_max. 비용은 음수가 아니어야 합니다. |

GcsDestination

출력 파일이 기록될 Google Cloud Storage 위치입니다.

| 필드 |
| --- |
| uri | string 필수 항목입니다. Google Cloud Storage URI |

GcsSource

입력 파일을 읽을 Google Cloud Storage 위치입니다.

| 필드 |
| --- |
| uri | string 필수 항목입니다. gs://bucket/path/to/object 형식의 Google Cloud Storage 객체 URI입니다. |

InjectedSolutionConstraint

제한해야 하는 방문과 제한 방법에 관한 정보를 포함하여 요청에 삽입된 솔루션입니다.

| 필드 |
| --- |
| routes[] | ShipmentRoute 삽입할 솔루션의 경로입니다. 일부 경로는 원래 솔루션에서 생략될 수 있습니다. 경로 및 건너뛴 배송은 injected_first_solution_routes에 나열된 기본 유효성 가정을 충족해야 합니다. |
| skipped_shipments[] | SkippedShipment 삽입할 솔루션의 배송을 건너뜁니다. 일부는 원래 솔루션에서 생략될 수 있습니다. routes 필드를 참고하세요. |
| constraint_relaxations[] | ConstraintRelaxation 차량 그룹이 0개 이상인 경우 제약 조건을 완화할 시점과 정도를 지정합니다. 이 필드가 비어 있으면 비어 있지 않은 모든 차량 경로가 완전히 제약됩니다. |

ConstraintRelaxation

차량 그룹의 경우 방문 제약 조건이 완화되는 임곗값과 완화 수준을 지정합니다. skipped_shipment 필드에 나열된 배송은 건너뛰도록 제약됩니다. 즉, 실행할 수 없습니다.

| 필드 |
| --- |
| relaxations[] | Relaxation vehicle_indices에 차량이 있는 경로의 방문에 적용되는 모든 방문 제약 조건 완화입니다. |
| vehicle_indices[] | int32 방문 제약조건 relaxations이 적용되는 차량 색인을 지정합니다. 비어 있으면 기본값으로 간주되며 relaxations가 다른 constraint_relaxations에 지정되지 않은 모든 차량에 적용됩니다. 기본값은 최대 1개가 있을 수 있습니다. 즉, 최대 1개의 제약 조건 완화 필드가 비어 있을 수 있습니다. vehicle_indices 차량 색인은 여러 constraint_relaxations 내에서도 한 번만 표시될 수 있습니다. interpret_injected_solutions_using_labels가 true인 경우 차량 색인이 ShipmentRoute.vehicle_index와 동일하게 매핑됩니다 (fields 주석 참고). |

휴식

relaxations가 비어 있으면 routes의 모든 방문의 시작 시간과 순서가 완전히 제약되며 이러한 경로에 새 방문을 삽입하거나 추가할 수 없습니다. 또한 차량이 비어 있지 않은 한 (즉, 방문이 없고 모델에서 used_if_route_is_empty가 false로 설정된 경우) routes의 차량 시작 시간과 종료 시간은 완전히 제약됩니다.relaxations(i).level는 다음을 충족하는 방문 #j에 적용되는 제약 조건 완화 수준을 지정합니다.

route.visits(j).start_time >= relaxations(i).threshold_time 및
j + 1 >= relaxations(i).threshold_visit_count
마찬가지로 다음을 충족하는 경우 차량 시작이 relaxations(i).level로 완화됩니다.

vehicle_start_time >= relaxations(i).threshold_time 및
relaxations(i).threshold_visit_count == 0이며 차량 끝이 다음을 충족하는 경우 relaxations(i).level로 완화됩니다.
vehicle_end_time >= relaxations(i).threshold_time 및
route.visits_size() + 1 >= relaxations(i).threshold_visit_count
방문이 threshold_visit_count 또는 threshold_time를 충족하는 경우 완화 수준을 적용하려면 동일한 level를 사용하여 relaxations를 두 개 추가합니다. 하나는 threshold_visit_count만 설정하고 다른 하나는 threshold_time만 설정합니다. 방문이 여러 relaxations의 조건을 충족하는 경우 가장 완화된 수준이 적용됩니다. 따라서 차량 시작부터 경로 방문을 거쳐 차량 종료까지 이완 수준이 점점 더 완화됩니다. 즉, 경로가 진행될수록 이완 수준이 감소하지 않습니다.relaxations의 임곗값 조건을 충족하지 않는 경로 방문의 시점과 순서는 완전히 제약되며 이러한 시퀀스에 방문을 삽입할 수 없습니다. 또한 차량 시작 또는 종료가 완화 조건을 충족하지 않는 경우 차량이 비어 있지 않는 한 시간이 고정됩니다.

| 필드 |
| --- |
| level | Level threshold_time 이상 및 threshold_visit_count 이상 조건이 충족될 때 적용되는 제약 조건 완화 수준입니다. |
| threshold_time | Timestamp 완화 level가 적용될 수 있는 시간입니다. |
| threshold_visit_count | int32 완화 level가 적용될 수 있는 방문 횟수입니다. threshold_visit_count가 0이거나 설정되지 않은 경우 level가 차량 시작 시 바로 적용될 수 있습니다. route.visits_size() + 1인 경우 level는 차량 끝에만 적용될 수 있습니다. route.visits_size() + 1보다 크면 해당 경로에 level가 전혀 적용되지 않습니다. |

수준

방문에 적용되는 다양한 제약 조건 완화 수준과 방문이 기준 조건을 충족할 때 적용되는 수준을 나타냅니다.아래 열거는 완화 정도가 증가하는 순으로 나열되어 있습니다.

| 열거형 |
| --- |
| LEVEL_UNSPECIFIED | 암시적 기본 완화 수준: 제약 조건이 완화되지 않습니다. 즉, 모든 방문이 완전히 제약됩니다. 이 값은 level에서 명시적으로 사용하면 안 됩니다. |
| RELAX_VISIT_TIMES_AFTER_THRESHOLD | 방문 시작 시간과 차량 시작/종료 시간은 완화되지만 각 방문은 동일한 차량에 연결된 상태로 유지되며 방문 순서를 준수해야 합니다. 방문 간에 또는 방문 앞에 방문을 삽입할 수 없습니다. |
| RELAX_VISIT_TIMES_AND_SEQUENCE_AFTER_THRESHOLD | RELAX_VISIT_TIMES_AFTER_THRESHOLD와 동일하지만 방문 시퀀스도 완화됩니다. 방문은 이 차량에서만 실행할 수 있지만 실행되지 않을 수도 있습니다. |
| RELAX_ALL_AFTER_THRESHOLD | RELAX_VISIT_TIMES_AND_SEQUENCE_AFTER_THRESHOLD와 동일하지만 차량도 완화됩니다. 방문은 기준 시간 이후에 완전히 무료이며 실행되지 않을 수 있습니다. |

InputConfig

[BatchOptimizeTours][google.maps.routeoptimization.v1.RouteOptimizationService.BatchOptimizeTours]의 입력을 지정합니다.

| 필드 |
| --- |
| data_format | DataFormat 필수 항목입니다. 입력 데이터 형식입니다. |
| 통합 필드 source. 필수 항목입니다. source은 다음 중 하나여야 합니다. |
| gcs_source | GcsSource Google Cloud Storage 위치입니다. 단일 객체 (파일)여야 합니다. |

위치

위치 (지리적 지점 및 선택사항인 방향)를 캡슐화합니다.

| 필드 |
| --- |
| lat_lng | LatLng 웨이포인트의 지리적 좌표입니다. |
| heading | int32 트래픽 흐름 방향과 연결된 나침반 방향입니다. 이 값은 승하차에 사용할 도로의 측면을 지정하는 데 사용됩니다. 방향 값은 0~360이며, 여기서 0은 북쪽 방향을, 90은 동쪽 방향을 지정합니다. |

OptimizeToursRequest

해결할 배송 모델과 최적화 매개변수를 정의하는 이동 경로 최적화 솔버에 제공할 요청입니다.

| 필드 |
| --- |
| parent | string 필수 항목입니다. 전화를 걸 프로젝트 또는 위치를 타겟팅합니다. 형식: * projects/{project-id} * projects/{project-id}/locations/{location-id} 위치를 지정하지 않으면 리전이 자동으로 선택됩니다. |
| timeout | Duration 이 제한 시간이 설정되면 서버는 제한 시간이 경과하거나 동기식 요청의 서버 기한에 도달하기 전에(둘 중 더 빠른 쪽) 응답을 반환합니다. 비동기 요청의 경우 서버는 제한 시간이 경과하기 전에 (가능한 경우) 솔루션을 생성합니다. |
| model | ShipmentModel 배송 모델을 해결합니다. |
| solving_mode | SolvingMode 기본적으로 솔빙 모드는 DEFAULT_SOLVE (0)입니다. |
| search_mode | SearchMode 요청을 해결하는 데 사용된 검색 모드입니다. |
| injected_first_solution_routes[] | ShipmentRoute 최적화 알고리즘이 이전 솔루션과 유사한 첫 번째 솔루션을 찾도록 안내합니다. 첫 번째 솔루션이 빌드될 때 모델이 제약됩니다. 경로에서 실행되지 않은 배송은 첫 번째 솔루션에서 암시적으로 건너뛰지만 후속 솔루션에서는 실행될 수 있습니다. 솔루션은 다음과 같은 몇 가지 기본 유효성 가정을 충족해야 합니다. 모든 경로에서 vehicle_index는 범위 내에 있어야 하며 중복되지 않아야 합니다. 모든 방문의 경우 shipment_index 및 visit_request_index가 범위에 있어야 합니다. 배송은 한 경로에서만 참조될 수 있습니다. 수령-배송 상품의 수령은 배송 전에 이루어져야 합니다. 배송의 픽업 대체 옵션 또는 배송 대체 옵션은 2회까지만 수행할 수 있습니다. 모든 경로의 경우 시간이 증가합니다 (즉, vehicle_start_time <= visits[0].start_time <= visits[1].start_time ... <= vehicle_end_time) 허용되는 차량에서만 배송이 진행될 수 있습니다. Shipment.allowed_vehicle_indices가 비어 있거나 vehicle_index가 Shipment.allowed_vehicle_indices에 포함된 경우 차량이 허용됩니다. avoid_u_turns를 true로 설정하는 경우 관련 방문에 대해 injected_solution_location_token를 설정해야 합니다. 삽입된 솔루션이 실행 가능하지 않은 경우 반드시 유효성 검사 오류가 반환되지는 않으며 실행 불가능성을 나타내는 오류가 대신 반환될 수 있습니다. |
| injected_solution_constraint | InjectedSolutionConstraint 최적화 알고리즘을 제약하여 이전 솔루션과 유사한 최종 솔루션을 찾습니다. 예를 들어 이미 완료되었거나 완료해야 하지만 수정해서는 안 되는 경로의 일부를 고정하는 데 사용할 수 있습니다. 삽입된 솔루션이 실행 가능하지 않은 경우 반드시 유효성 검사 오류가 반환되지는 않으며 실행 불가능성을 나타내는 오류가 대신 반환될 수 있습니다. |
| refresh_details_routes[] | ShipmentRoute 비어 있지 않으면 기본 방문 순서나 이동 시간을 수정하지 않고 지정된 경로가 새로고침됩니다. 다른 세부정보만 업데이트됩니다. 이렇게 해도 모델이 해결되지는 않습니다. 2020년 11월 현재, 비어 있지 않은 경로의 다중선만 채우며 populate_polylines이 true여야 합니다. 전달된 경로의 route_polyline 필드가 경로 transitions와 일치하지 않을 수 있습니다. 이 필드는 injected_first_solution_routes 또는 injected_solution_constraint와 함께 사용해서는 안 됩니다. Shipment.ignore 및 Vehicle.ignore는 동작에 영향을 미치지 않습니다. 관련 배송 또는 차량이 무시되는지 여부와 관계없이 비어 있지 않은 모든 경로의 모든 방문 간에 다중선이 계속 채워집니다. |
| interpret_injected_solutions_using_labels | bool true인 경우: vehicle_index 대신 ShipmentRoute.vehicle_label를 사용하여 삽입된 솔루션의 경로를 요청의 차량과 일치시킵니다. 원래 ShipmentRoute.vehicle_index와 새 ShipmentRoute.vehicle_index의 매핑을 재사용하여 ConstraintRelaxation.vehicle_indices가 비어 있지 않은 경우 업데이트하지만 매핑은 명확해야 합니다 (즉, 여러 ShipmentRoute가 동일한 원래 vehicle_index를 공유해서는 안 됨). shipment_index 대신 ShipmentRoute.Visit.shipment_label를 사용하여 삽입된 솔루션의 방문을 요청의 배송과 일치시킵니다. SkippedShipment.index 대신 SkippedShipment.label를 사용하여 삽입된 솔루션의 건너뛴 배송을 요청 배송과 일치시킵니다. 이 해석은 injected_first_solution_routes, injected_solution_constraint, refresh_details_routes 필드에 적용됩니다. 솔루션이 생성된 이후 요청의 배송 또는 차량 색인이 변경된 경우(예: 배송 또는 차량이 요청에서 삭제되거나 추가된 경우) 사용할 수 있습니다. 이 값이 true인 경우 다음 카테고리의 라벨은 카테고리에서 최대 한 번만 표시되어야 합니다. 요청의 Vehicle.label 요청의 Shipment.label 삽입된 솔루션의 ShipmentRoute.vehicle_label 삽입된 솔루션의 SkippedShipment.label 및 ShipmentRoute.Visit.shipment_label (shipment_label가 두 번 표시되어야 하는 수령/배송 방문 쌍 제외) 삽입된 솔루션의 vehicle_label가 요청 차량과 일치하지 않으면 해당 경로가 방문과 함께 솔루션에서 삭제됩니다. 삽입된 솔루션의 shipment_label가 요청 전송에 해당하지 않으면 해당 방문이 솔루션에서 삭제됩니다. 삽입된 솔루션의 SkippedShipment.label가 요청된 배송에 해당하지 않으면 SkippedShipment가 솔루션에서 삭제됩니다. 삽입된 솔루션에서 경로 방문 또는 전체 경로를 삭제하면 암시된 제약 조건에 영향을 미쳐 솔루션 변경, 유효성 검사 오류 또는 실행 불가능으로 이어질 수 있습니다. 참고: 호출자는 각 Vehicle.label (resp. Shipment.label)는 두 가지 관련 요청(삽입된 솔루션에 사용된 OptimizeToursResponse를 생성한 이전 요청과 삽입된 솔루션이 포함된 현재 요청)에서 사용되는 차량(resp. 배송) 항목을 고유하게 식별합니다. 위에 설명된 고유성 검사만으로는 이 요구사항을 보장하기에 충분하지 않습니다. |
| consider_road_traffic | bool ShipmentRoute 필드 Transition.travel_duration, Visit.start_time, vehicle_end_time를 계산할 때, ShipmentRoute.has_traffic_infeasibilities 필드를 설정할 때, OptimizeToursResponse.total_cost 필드를 계산할 때 트래픽 추정치를 고려합니다. |
| populate_polylines | bool true인 경우 응답 ShipmentRoute에 다중선이 채워집니다. |
| populate_transition_polylines | bool true인 경우 응답 ShipmentRoute.transitions에 다중선이 채워집니다. |
| allow_large_deadline_despite_interruption_risk | bool 이 속성이 설정된 경우 요청에 최대 60분의 기한 (https://grpc.io/blog/deadlines 참고)이 있을 수 있습니다. 그렇지 않으면 최대 기한은 30분입니다. 장기 요청은 중단될 위험이 상당히 높지만 여전히 작습니다. |
| use_geodesic_distances | bool 이 값이 true이면 이동 거리가 Google 지도 거리 대신 지오데시시크 거리를 사용하여 계산되고 이동 시간은 geodesic_meters_per_second로 정의된 속도로 지오데시시크 거리를 사용하여 계산됩니다. |
| label | string 이 요청을 식별하는 데 사용할 수 있는 라벨로, OptimizeToursResponse.request_label에 다시 보고됩니다. |
| geodesic_meters_per_second | double use_geodesic_distances가 true인 경우 이 필드를 설정해야 하며, 이 필드는 이동 시간 계산에 적용되는 속도를 정의합니다. 값은 1.0미터/초 이상이어야 합니다. |
| max_validation_errors | int32 반환된 유효성 검사 오류 수를 자릅니다. 이러한 오류는 일반적으로 solving_mode=VALIDATE_ONLY가 아닌 경우 INVALID_ARGUMENT 오류 페이로드에 BadRequest 오류 세부정보 (https://cloud.google.com/apis/design/errors#error_details)로 첨부됩니다. OptimizeToursResponse.validation_errors 필드를 참고하세요. 기본값은 100이며 최대 10,000으로 제한됩니다. |

SearchMode

지연 시간과 솔루션 품질 간의 절충점을 고려하여 검색 동작을 정의하는 모드입니다. 모든 모드에서 전 세계 요청 기한이 적용됩니다.

| 열거형 |
| --- |
| SEARCH_MODE_UNSPECIFIED | RETURN_FAST과 동일한 지정되지 않은 검색 모드입니다. |
| RETURN_FAST | 적절한 해결 방법을 찾으면 검색을 중지합니다. |
| CONSUME_ALL_AVAILABLE_TIME | 가능한 한 모든 시간을 더 나은 해결 방법을 찾는 데 할애합니다. |

SolvingMode

솔버가 요청을 처리하는 방법을 정의합니다. VALIDATE_ONLY을 제외한 모든 모드에서 요청이 유효하지 않으면 INVALID_REQUEST 오류가 발생합니다. 반환되는 오류 수를 제한하려면 max_validation_errors [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.OptimizeToursRequest.FIELDS.int32.google.maps.routeoptimization.v1.OptimizeToursRequest.max_validation_errors]를 참고하세요.

| 열거형 |
| --- |
| DEFAULT_SOLVE | 모델을 풀고 [OptimizeToursResponse.validation_errors][google.cloud.optimization.v1.OptimizeToursResponse.validation_errors]에서 경고가 발생할 수 있습니다. |
| VALIDATE_ONLY | 모델을 해결하지 않고 모델만 검증합니다. 최대한 많은 OptimizeToursResponse.validation_errors를 채웁니다. |
| DETECT_SOME_INFEASIBLE_SHIPMENTS | OptimizeToursResponse.validation_errors 또는 OptimizeToursResponse.skipped_shipments만 채우고 나머지 요청은 실제로 해결하지 않습니다 (status 및 routes는 응답에서 설정 해제됨). injected_solution_constraint 경로에서 실행 불가능성이 감지되면 OptimizeToursResponse.validation_errors 필드에 채워지고 OptimizeToursResponse.skipped_shipments는 비워 둡니다. 중요: 여기서는 실행 불가능한 모든 배송이 반환되는 것이 아니라 사전 처리 중에 실행 불가능한 것으로 감지된 배송만 반환됩니다. |

OptimizeToursResponse

각 차량이 따라간 경로, 건너뛴 배송, 솔루션의 전반적인 비용이 포함된 순회 최적화 문제를 해결한 후의 응답입니다.

| 필드 |
| --- |
| routes[] | ShipmentRoute 각 차량에 대해 계산된 경로입니다. i번째 경로는 모델의 i번째 차량에 해당합니다. |
| request_label | string 요청에 라벨이 지정된 경우 OptimizeToursRequest.label 사본입니다. |
| skipped_shipments[] | SkippedShipment 건너뛴 모든 배송의 목록입니다. |
| validation_errors[] | OptimizeToursValidationError Google에서 독립적으로 감지할 수 있었던 모든 유효성 검사 오류 목록입니다. OptimizeToursValidationError 메시지에 대한 'MULTIPLE ERRORS' 설명을 참고하세요. solving_mode가 DEFAULT_SOLVE인 경우 오류 대신 경고가 포함됩니다. |
| metrics | Metrics 이 솔루션의 시간, 거리, 사용량 측정항목 |

측정항목

모든 경로를 기준으로 집계된 전반적인 측정항목입니다.

| 필드 |
| --- |
| aggregated_route_metrics | AggregatedMetrics 경로별로 집계됩니다. 각 측정항목은 동일한 이름의 모든 ShipmentRoute.metrics 필드에 대한 합계 (또는 로드의 경우 최대값)입니다. |
| skipped_mandatory_shipment_count | int32 건너뛴 필수 배송 건수입니다. |
| used_vehicle_count | int32 사용된 차량 수입니다. 참고: 차량 경로가 비어 있고 Vehicle.used_if_route_is_empty이 true인 경우 차량이 사용된 것으로 간주됩니다. |
| earliest_vehicle_start_time | Timestamp 중고차의 가장 빠른 시작 시간으로, 모든 중고차 ShipmentRoute.vehicle_start_time의 최솟값으로 계산됩니다. |
| latest_vehicle_end_time | Timestamp 중고차의 최신 종료 시간으로, 모든 중고차 ShipmentRoute.vehicle_end_time의 최대값으로 계산됩니다. |
| costs | map<string, double> 비용 관련 요청 입력란별로 분류된 솔루션 비용입니다. 키는 입력 OptimizeToursRequest를 기준으로 한 프로토 경로(예: 'model.shipments.pickups.cost')이고 값은 전체 솔루션에 걸쳐 집계된 해당 비용 필드에서 생성된 총 비용입니다. 즉, costs["model.shipments.pickups.cost"] 는 솔루션의 모든 수령 비용의 합계입니다. 모델에 정의된 모든 비용은 여기에 자세히 보고됩니다. 단, 2022년 1월 현재 집계된 방식으로만 보고되는 TransitionAttributes와 관련된 비용은 예외입니다. |
| total_cost | double 솔루션의 총 비용입니다. 비용 맵의 모든 값의 합계입니다. |

OptimizeToursValidationError

OptimizeToursRequest를 검증할 때 발생한 오류 또는 경고를 설명합니다.

| 필드 |
| --- |
| code | int32 유효성 검사 오류는 항상 존재하는 쌍 (code, display_name)으로 정의됩니다. 다른 입력란 (아래)에는 오류에 관한 추가 컨텍스트가 제공됩니다. MULTIPLE ERRORS: 오류가 여러 개 있는 경우 검증 프로세스에서 여러 오류를 출력하려고 시도합니다. 컴파일러와 마찬가지로 이는 불완전한 프로세스입니다. 일부 유효성 검사 오류는 '심각'하여 전체 유효성 검사 프로세스가 중지됩니다. 특히 display_name="UNSPECIFIED" 오류가 이러한 경우에 해당합니다. 일부 오류는 유효성 검사 프로세스에서 다른 오류를 건너뛰게 할 수 있습니다. 안정성: code 및 display_name는 매우 안정적이어야 합니다. 하지만 시간이 지남에 따라 새 코드와 표시 이름이 표시될 수 있으며, 이로 인해 새 오류가 이전 오류를 숨겨 주어진 (잘못된) 요청이 다른 (code, display_name) 쌍을 생성할 수 있습니다('MULTIPLE ERRORS' 참고). 참조: 모든 (코드, 이름) 쌍의 목록입니다. UNSPECIFIED = 0; VALIDATION_TIMEOUT_ERROR = 10; 기한 내에 유효성 검사를 완료할 수 없습니다. REQUEST_OPTIONS_ERROR = 12; REQUEST_OPTIONS_INVALID_SOLVING_MODE = 1201; REQUEST_OPTIONS_INVALID_MAX_VALIDATION_ERRORS = 1203; REQUEST_OPTIONS_INVALID_GEODESIC_METERS_PER_SECOND = 1204; REQUEST_OPTIONS_GEODESIC_METERS_PER_SECOND_TOO_SMALL = 1205; REQUEST_OPTIONS_MISSING_GEODESIC_METERS_PER_SECOND = 1206; REQUEST_OPTIONS_POPULATE_PATHFINDER_TRIPS_AND_GEODESIC_DISTANCE = 1207; REQUEST_OPTIONS_COST_MODEL_OPTIONS_AND_GEODESIC_DISTANCE = 1208; REQUEST_OPTIONS_TRAVEL_MODE_INCOMPATIBLE_WITH_TRAFFIC = 1211; REQUEST_OPTIONS_MULTIPLE_TRAFFIC_FLAVORS = 1212; REQUEST_OPTIONS_INVALID_TRAFFIC_FLAVOR = 1213; REQUEST_OPTIONS_TRAFFIC_ENABLED_WITHOUT_GLOBAL_START_TIME = 1214; REQUEST_OPTIONS_TRAFFIC_ENABLED_WITH_PRECEDENCES = 1215; REQUEST_OPTIONS_TRAFFIC_PREFILL_MODE_INVALID = 1216; REQUEST_OPTIONS_TRAFFIC_PREFILL_ENABLED_WITHOUT_TRAFFIC = 1217; INJECTED_SOLUTION_ERROR = 20; INJECTED_SOLUTION_MISSING_LABEL = 2000; INJECTED_SOLUTION_DUPLICATE_LABEL = 2001; INJECTED_SOLUTION_AMBIGUOUS_INDEX = 2002; INJECTED_SOLUTION_INFEASIBLE_AFTER_GETTING_TRAVEL_TIMES = 2003; INJECTED_SOLUTION_TRANSITION_INCONSISTENT_WITH_ACTUAL_TRAVEL = 2004; INJECTED_SOLUTION_CONCURRENT_SOLUTION_TYPES = 2005; INJECTED_SOLUTION_MORE_THAN_ONE_PER_TYPE = 2006; INJECTED_SOLUTION_REFRESH_WITHOUT_POPULATE = 2008; INJECTED_SOLUTION_CONSTRAINED_ROUTE_PORTION_INFEASIBLE = 2010; SHIPMENT_MODEL_ERROR = 22; SHIPMENT_MODEL_TOO_LARGE = 2200; SHIPMENT_MODEL_TOO_MANY_CAPACITY_TYPES = 2201; SHIPMENT_MODEL_GLOBAL_START_TIME_NEGATIVE_OR_NAN = 2202; SHIPMENT_MODEL_GLOBAL_END_TIME_TOO_LARGE_OR_NAN = 2203; SHIPMENT_MODEL_GLOBAL_START_TIME_AFTER_GLOBAL_END_TIME = 2204; SHIPMENT_MODEL_GLOBAL_DURATION_TOO_LONG = 2205; SHIPMENT_MODEL_MAX_ACTIVE_VEHICLES_NOT_POSITIVE = 2206; SHIPMENT_MODEL_DURATION_MATRIX_TOO_LARGE = 2207; INDEX_ERROR = 24; TAG_ERROR = 26; TIME_WINDOW_ERROR = 28; TIME_WINDOW_INVALID_START_TIME = 2800; TIME_WINDOW_INVALID_END_TIME = 2801; TIME_WINDOW_INVALID_SOFT_START_TIME = 2802; TIME_WINDOW_INVALID_SOFT_END_TIME = 2803; TIME_WINDOW_OUTSIDE_GLOBAL_TIME_WINDOW = 2804; TIME_WINDOW_START_TIME_AFTER_END_TIME = 2805; TIME_WINDOW_INVALID_COST_PER_HOUR_BEFORE_SOFT_START_TIME = 2806; TIME_WINDOW_INVALID_COST_PER_HOUR_AFTER_SOFT_END_TIME = 2807; TIME_WINDOW_COST_BEFORE_SOFT_START_TIME_WITHOUT_SOFT_START_TIME = 2808; TIME_WINDOW_COST_AFTER_SOFT_END_TIME_WITHOUT_SOFT_END_TIME = 2809; TIME_WINDOW_SOFT_START_TIME_WITHOUT_COST_BEFORE_SOFT_START_TIME = 2810; TIME_WINDOW_SOFT_END_TIME_WITHOUT_COST_AFTER_SOFT_END_TIME = 2811; TIME_WINDOW_OVERLAPPING_ADJACENT_OR_EARLIER_THAN_PREVIOUS = 2812; TIME_WINDOW_START_TIME_AFTER_SOFT_START_TIME = 2813; TIME_WINDOW_SOFT_START_TIME_OUTSIDE_GLOBAL_TIME_WINDOW = 2819; TIME_WINDOW_SOFT_END_TIME_OUTSIDE_GLOBAL_TIME_WINDOW = 2820; TIME_WINDOW_SOFT_END_TIME_AFTER_END_TIME = 2816; TIME_WINDOW_COST_BEFORE_SOFT_START_TIME_SET_AND_MULTIPLE_WINDOWS = 2817; TIME_WINDOW_COST_AFTER_SOFT_END_TIME_SET_AND_MULTIPLE_WINDOWS = 2818; TRANSITION_ATTRIBUTES_ERROR = 30; TRANSITION_ATTRIBUTES_INVALID_COST = 3000; TRANSITION_ATTRIBUTES_INVALID_COST_PER_KILOMETER = 3001; TRANSITION_ATTRIBUTES_DUPLICATE_TAG_PAIR = 3002; TRANSITION_ATTRIBUTES_DISTANCE_LIMIT_MAX_METERS_UNSUPPORTED = 3003; TRANSITION_ATTRIBUTES_UNSPECIFIED_SOURCE_TAGS = 3004; TRANSITION_ATTRIBUTES_CONFLICTING_SOURCE_TAGS_FIELDS = 3005; TRANSITION_ATTRIBUTES_UNSPECIFIED_DESTINATION_TAGS = 3006; TRANSITION_ATTRIBUTES_CONFLICTING_DESTINATION_TAGS_FIELDS = 3007; TRANSITION_ATTRIBUTES_DELAY_DURATION_NEGATIVE_OR_NAN = 3008; TRANSITION_ATTRIBUTES_DELAY_DURATION_EXCEEDS_GLOBAL_DURATION = 3009; AMOUNT_ERROR = 31; AMOUNT_NEGATIVE_VALUE = 3100; LOAD_LIMIT_ERROR = 33; LOAD_LIMIT_INVALID_COST_ABOVE_SOFT_MAX = 3303; LOAD_LIMIT_SOFT_MAX_WITHOUT_COST_ABOVE_SOFT_MAX = 3304; LOAD_LIMIT_COST_ABOVE_SOFT_MAX_WITHOUT_SOFT_MAX = 3305; LOAD_LIMIT_NEGATIVE_SOFT_MAX = 3306; LOAD_LIMIT_MIXED_DEMAND_TYPE = 3307; LOAD_LIMIT_MAX_LOAD_NEGATIVE_VALUE = 3308; LOAD_LIMIT_SOFT_MAX_ABOVE_MAX = 3309; INTERVAL_ERROR = 34; INTERVAL_MIN_EXCEEDS_MAX = 3401; INTERVAL_NEGATIVE_MIN = 3402; INTERVAL_NEGATIVE_MAX = 3403; INTERVAL_MIN_EXCEEDS_CAPACITY = 3404; INTERVAL_MAX_EXCEEDS_CAPACITY = 3405; DISTANCE_LIMIT_ERROR = 36; DISTANCE_LIMIT_INVALID_COST_AFTER_SOFT_MAX = 3601; DISTANCE_LIMIT_SOFT_MAX_WITHOUT_COST_AFTER_SOFT_MAX = 3602; DISTANCE_LIMIT_COST_AFTER_SOFT_MAX_WITHOUT_SOFT_MAX = 3603; DISTANCE_LIMIT_NEGATIVE_MAX = 3604; DISTANCE_LIMIT_NEGATIVE_SOFT_MAX = 3605; DISTANCE_LIMIT_SOFT_MAX_LARGER_THAN_MAX = 3606; DURATION_LIMIT_ERROR = 38; DURATION_LIMIT_MAX_DURATION_NEGATIVE_OR_NAN = 3800; DURATION_LIMIT_SOFT_MAX_DURATION_NEGATIVE_OR_NAN = 3801; DURATION_LIMIT_INVALID_COST_PER_HOUR_AFTER_SOFT_MAX = 3802; DURATION_LIMIT_SOFT_MAX_WITHOUT_COST_AFTER_SOFT_MAX = 3803; DURATION_LIMIT_COST_AFTER_SOFT_MAX_WITHOUT_SOFT_MAX = 3804; DURATION_LIMIT_QUADRATIC_SOFT_MAX_DURATION_NEGATIVE_OR_NAN = 3805; DURATION_LIMIT_INVALID_COST_AFTER_QUADRATIC_SOFT_MAX = 3806; DURATION_LIMIT_QUADRATIC_SOFT_MAX_WITHOUT_COST_PER_SQUARE_HOUR = 3807; DURATION_LIMIT_COST_PER_SQUARE_HOUR_WITHOUT_QUADRATIC_SOFT_MAX = 3808; DURATION_LIMIT_QUADRATIC_SOFT_MAX_WITHOUT_MAX = 3809; DURATION_LIMIT_SOFT_MAX_LARGER_THAN_MAX = 3810; DURATION_LIMIT_QUADRATIC_SOFT_MAX_LARGER_THAN_MAX = 3811; DURATION_LIMIT_DIFF_BETWEEN_MAX_AND_QUADRATIC_SOFT_MAX_TOO_LARGE = 3812; DURATION_LIMIT_MAX_DURATION_EXCEEDS_GLOBAL_DURATION = 3813; DURATION_LIMIT_SOFT_MAX_DURATION_EXCEEDS_GLOBAL_DURATION = 3814; DURATION_LIMIT_QUADRATIC_SOFT_MAX_DURATION_EXCEEDS_GLOBAL_DURATION = 3815; SHIPMENT_ERROR = 40; SHIPMENT_PD_LIMIT_WITHOUT_PICKUP_AND_DELIVERY = 4014; SHIPMENT_PD_ABSOLUTE_DETOUR_LIMIT_DURATION_NEGATIVE_OR_NAN = 4000; SHIPMENT_PD_ABSOLUTE_DETOUR_LIMIT_DURATION_EXCEEDS_GLOBAL_DURATION = 4001; SHIPMENT_PD_RELATIVE_DETOUR_LIMIT_INVALID = 4015; SHIPMENT_PD_DETOUR_LIMIT_AND_EXTRA_VISIT_DURATION = 4016; SHIPMENT_PD_TIME_LIMIT_DURATION_NEGATIVE_OR_NAN = 4002; SHIPMENT_PD_TIME_LIMIT_DURATION_EXCEEDS_GLOBAL_DURATION = 4003; SHIPMENT_EMPTY_SHIPMENT_TYPE = 4004; SHIPMENT_NO_PICKUP_NO_DELIVERY = 4005; SHIPMENT_INVALID_PENALTY_COST = 4006; SHIPMENT_ALLOWED_VEHICLE_INDEX_OUT_OF_BOUNDS = 4007; SHIPMENT_DUPLICATE_ALLOWED_VEHICLE_INDEX = 4008; SHIPMENT_INCONSISTENT_COST_FOR_VEHICLE_SIZE_WITHOUT_INDEX = 4009; SHIPMENT_INCONSISTENT_COST_FOR_VEHICLE_SIZE_WITH_INDEX = 4010; SHIPMENT_INVALID_COST_FOR_VEHICLE = 4011; SHIPMENT_COST_FOR_VEHICLE_INDEX_OUT_OF_BOUNDS = 4012; SHIPMENT_DUPLICATE_COST_FOR_VEHICLE_INDEX = 4013; VEHICLE_ERROR = 42; VEHICLE_EMPTY_REQUIRED_OPERATOR_TYPE = 4200; VEHICLE_DUPLICATE_REQUIRED_OPERATOR_TYPE = 4201; VEHICLE_NO_OPERATOR_WITH_REQUIRED_OPERATOR_TYPE = 4202; VEHICLE_EMPTY_START_TAG = 4203; VEHICLE_DUPLICATE_START_TAG = 4204; VEHICLE_EMPTY_END_TAG = 4205; VEHICLE_DUPLICATE_END_TAG = 4206; VEHICLE_EXTRA_VISIT_DURATION_NEGATIVE_OR_NAN = 4207; VEHICLE_EXTRA_VISIT_DURATION_EXCEEDS_GLOBAL_DURATION = 4208; VEHICLE_EXTRA_VISIT_DURATION_EMPTY_KEY = 4209; VEHICLE_FIRST_SHIPMENT_INDEX_OUT_OF_BOUNDS = 4210; VEHICLE_FIRST_SHIPMENT_IGNORED = 4211; VEHICLE_FIRST_SHIPMENT_NOT_BOUND = 4212; VEHICLE_LAST_SHIPMENT_INDEX_OUT_OF_BOUNDS = 4213; VEHICLE_LAST_SHIPMENT_IGNORED = 4214; VEHICLE_LAST_SHIPMENT_NOT_BOUND = 4215; VEHICLE_IGNORED_WITH_USED_IF_ROUTE_IS_EMPTY = 4216; VEHICLE_INVALID_COST_PER_KILOMETER = 4217; VEHICLE_INVALID_COST_PER_HOUR = 4218; VEHICLE_INVALID_COST_PER_TRAVELED_HOUR = 4219; VEHICLE_INVALID_FIXED_COST = 4220; VEHICLE_INVALID_TRAVEL_DURATION_MULTIPLE = 4221; VEHICLE_TRAVEL_DURATION_MULTIPLE_WITH_SHIPMENT_PD_DETOUR_LIMITS = 4223; VEHICLE_MATRIX_INDEX_WITH_SHIPMENT_PD_DETOUR_LIMITS = 4224; VEHICLE_MINIMUM_DURATION_LONGER_THAN_DURATION_LIMIT = 4222; VISIT_REQUEST_ERROR = 44; VISIT_REQUEST_EMPTY_TAG = 4400; VISIT_REQUEST_DUPLICATE_TAG = 4401; VISIT_REQUEST_DURATION_NEGATIVE_OR_NAN = 4404; VISIT_REQUEST_DURATION_EXCEEDS_GLOBAL_DURATION = 4405; PRECEDENCE_ERROR = 46; PRECEDENCE_RULE_MISSING_FIRST_INDEX = 4600; PRECEDENCE_RULE_MISSING_SECOND_INDEX = 4601; PRECEDENCE_RULE_FIRST_INDEX_OUT_OF_BOUNDS = 4602; PRECEDENCE_RULE_SECOND_INDEX_OUT_OF_BOUNDS = 4603; PRECEDENCE_RULE_DUPLICATE_INDEX = 4604; PRECEDENCE_RULE_INEXISTENT_FIRST_VISIT_REQUEST = 4605; PRECEDENCE_RULE_INEXISTENT_SECOND_VISIT_REQUEST = 4606; BREAK_ERROR = 48; BREAK_RULE_EMPTY = 4800; BREAK_REQUEST_UNSPECIFIED_DURATION = 4801; BREAK_REQUEST_UNSPECIFIED_EARLIEST_START_TIME = 4802; BREAK_REQUEST_UNSPECIFIED_LATEST_START_TIME = 4803; BREAK_REQUEST_DURATION_NEGATIVE_OR_NAN = 4804; = 4804; BREAK_REQUEST_LATEST_START_TIME_BEFORE_EARLIEST_START_TIME = 4805; BREAK_REQUEST_EARLIEST_START_TIME_BEFORE_GLOBAL_START_TIME = 4806; BREAK_REQUEST_LATEST_END_TIME_AFTER_GLOBAL_END_TIME = 4807; BREAK_REQUEST_NON_SCHEDULABLE = 4808; BREAK_FREQUENCY_MAX_INTER_BREAK_DURATION_NEGATIVE_OR_NAN = 4809; BREAK_FREQUENCY_MIN_BREAK_DURATION_NEGATIVE_OR_NAN = 4810; BREAK_FREQUENCY_MIN_BREAK_DURATION_EXCEEDS_GLOBAL_DURATION = 4811; BREAK_FREQUENCY_MAX_INTER_BREAK_DURATION_EXCEEDS_GLOBAL_DURATION = 4812; BREAK_REQUEST_DURATION_EXCEEDS_GLOBAL_DURATION = 4813; BREAK_FREQUENCY_MISSING_MAX_INTER_BREAK_DURATION = 4814; BREAK_FREQUENCY_MISSING_MIN_BREAK_DURATION = 4815; SHIPMENT_TYPE_INCOMPATIBILITY_ERROR = 50; SHIPMENT_TYPE_INCOMPATIBILITY_EMPTY_TYPE = 5001; SHIPMENT_TYPE_INCOMPATIBILITY_LESS_THAN_TWO_TYPES = 5002; SHIPMENT_TYPE_INCOMPATIBILITY_DUPLICATE_TYPE = 5003; SHIPMENT_TYPE_INCOMPATIBILITY_INVALID_INCOMPATIBILITY_MODE = 5004; SHIPMENT_TYPE_INCOMPATIBILITY_TOO_MANY_INCOMPATIBILITIES = 5005; SHIPMENT_TYPE_REQUIREMENT_ERROR = 52; SHIPMENT_TYPE_REQUIREMENT_NO_REQUIRED_TYPE = 52001; SHIPMENT_TYPE_REQUIREMENT_NO_DEPENDENT_TYPE = 52002; SHIPMENT_TYPE_REQUIREMENT_INVALID_REQUIREMENT_MODE = 52003; SHIPMENT_TYPE_REQUIREMENT_TOO_MANY_REQUIREMENTS = 52004; SHIPMENT_TYPE_REQUIREMENT_EMPTY_REQUIRED_TYPE = 52005; SHIPMENT_TYPE_REQUIREMENT_DUPLICATE_REQUIRED_TYPE = 52006; SHIPMENT_TYPE_REQUIREMENT_NO_REQUIRED_TYPE_FOUND = 52007; SHIPMENT_TYPE_REQUIREMENT_EMPTY_DEPENDENT_TYPE = 52008; SHIPMENT_TYPE_REQUIREMENT_DUPLICATE_DEPENDENT_TYPE = 52009; SHIPMENT_TYPE_REQUIREMENT_SELF_DEPENDENT_TYPE = 52010; SHIPMENT_TYPE_REQUIREMENT_GRAPH_HAS_CYCLES = 52011; VEHICLE_OPERATOR_ERROR = 54; VEHICLE_OPERATOR_EMPTY_TYPE = 5400; VEHICLE_OPERATOR_MULTIPLE_START_TIME_WINDOWS = 5401; VEHICLE_OPERATOR_SOFT_START_TIME_WINDOW = 5402; VEHICLE_OPERATOR_MULTIPLE_END_TIME_WINDOWS = 5403; VEHICLE_OPERATOR_SOFT_END_TIME_WINDOW = 5404; DURATION_SECONDS_MATRIX_ERROR = 56; DURATION_SECONDS_MATRIX_DURATION_NEGATIVE_OR_NAN = 5600; DURATION_SECONDS_MATRIX_DURATION_EXCEEDS_GLOBAL_DURATION = 5601; WARNING = 9; WARNING_INJECTED_FIRST_SOLUTION = 90; WARNING_INJECTED_FIRST_SOLUTION_INFEASIBLE_SHIPMENTS_REMOVED = 9000; WARNING_INJECTED_FIRST_SOLUTION_INFEASIBLE_AFTER_GETTING_TRAVEL_TIMES = 9001; |
| display_name | string 오류 표시 이름입니다. |
| fields[] | FieldReference 오류 컨텍스트에는 0개, 1개 (대부분) 또는 그 이상의 필드가 포함될 수 있습니다. 예를 들어 차량 4번과 배송 2번의 첫 번째 수령을 참조하는 방법은 다음과 같습니다. fields { name: "vehicles" index: 4} fields { name: "shipments" index: 2 sub_field {name: "pickups" index: 0} } 단, 지정된 오류 코드의 경우 fields의 카디널리티는 변경되어서는 안 됩니다. |
| error_message | string 사람이 읽을 수 있는 오류를 설명하는 문자열입니다. code과 error_message는 일대일 매핑 관계입니다 (code != 'UNSPECIFIED'인 경우). 안정성: 안정적이지 않음: 특정 code에 연결된 오류 메시지는 시간이 지남에 따라 명확해지도록 변경될 수 있습니다. 대신 display_name 및 code를 사용하세요. |
| offending_values | string 필드의 값을 포함할 수 있습니다. 이 기능을 사용할 수 없는 경우도 있습니다. 이 방법에 의존해서는 안 되며 수동 모델 디버깅에만 사용해야 합니다. |

FieldReference

유효성 검사 오류의 컨텍스트를 지정합니다. FieldReference는 항상 이 파일의 지정된 필드를 참조하며 동일한 계층 구조를 따릅니다. 예를 들어 다음을 사용하여 차량 5의 start_time_windows 요소 2를 지정할 수 있습니다.
name: "vehicles" index: 5 sub_field { name: "end_time_windows" index: 2 }

그러나 메시지가 복잡해지지 않도록 OptimizeToursRequest 또는 ShipmentModel와 같은 최상위 항목은 생략합니다.

| 필드 |
| --- |
| name | string 필드 이름입니다(예: "vehicles". |
| sub_field | FieldReference 필요한 경우 중첩된 하위 필드(재귀) |
| 통합 필드 index_or_key. index_or_key는 다음 중 하나여야 합니다. |
| index | int32 반복되는 경우 필드의 색인입니다. |
| key | string 필드가 맵인 경우 키입니다. |

OutputConfig

[BatchOptimizeTours][google.maps.routeoptimization.v1.RouteOptimizationService.BatchOptimizeTours] 결과의 대상을 지정합니다.

| 필드 |
| --- |
| data_format | DataFormat 필수 항목입니다. 출력 데이터 형식입니다. |
| 통합 필드 destination. 필수 항목입니다. destination은 다음 중 하나여야 합니다. |
| gcs_destination | GcsDestination 출력을 기록할 Google Cloud Storage 위치입니다. |

배송

픽업에서 배송까지 단일 상품의 배송입니다. 배송이 완료된 것으로 간주되려면 고유한 차량이 하나의 수령 위치를 방문한 후 (따라서 예비 용량을 줄임) 나중에 하나의 배송 위치를 방문해야 합니다 (따라서 예비 용량을 다시 늘림).

| 필드 |
| --- |
| display_name | string 배송의 사용자 정의 표시 이름입니다. 최대 63자(영문 기준)까지 사용할 수 있으며 UTF-8 문자를 사용할 수 있습니다. |
| pickups[] | VisitRequest 배송과 연결된 픽업 대안 집합입니다. 지정하지 않으면 차량은 배송에 해당하는 위치만 방문하면 됩니다. |
| deliveries[] | VisitRequest 배송과 연결된 대체 배송 옵션 세트입니다. 지정하지 않으면 차량이 픽업에 해당하는 위치만 방문하면 됩니다. |
| load_demands | map<string, Load> 배송의 적재 요구사항 (예: 중량, 부피, 팔레트 수 등) 맵의 키는 해당 부하의 유형을 설명하는 식별자여야 하며, 단위도 포함하는 것이 좋습니다. 예를 들어 'weight_kg', 'volume_gallons', 'pallet_count' 등이 있습니다. 지정된 키가 맵에 표시되지 않으면 해당 로드가 null로 간주됩니다. |
| allowed_vehicle_indices[] | int32 이 배송을 실행할 수 있는 차량 세트입니다. 비어 있으면 모든 차량에서 실행할 수 있습니다. 차량은 ShipmentModel의 vehicles 목록에 있는 색인으로 지정됩니다. |
| costs_per_vehicle[] | double 이 배송 상품이 각 차량으로 배송될 때 발생하는 비용을 지정합니다. 지정된 경우 다음 중 하나를 포함해야 합니다. costs_per_vehicle_indices와 동일한 수의 요소가 있습니다. costs_per_vehicle[i]는 모델의 차량 costs_per_vehicle_indices[i]에 해당합니다. 모델에 있는 차량 수와 동일한 수의 요소가 있습니다. i번째 요소는 모델의 차량 #i에 해당합니다. 이 비용은 penalty_cost와 동일한 단위여야 하며 음수가 아니어야 합니다. 이러한 비용이 없는 경우 이 필드를 비워 둡니다. |
| costs_per_vehicle_indices[] | int32 costs_per_vehicle가 적용되는 차량의 색인입니다. 비어 있지 않은 경우 costs_per_vehicle와 요소 수가 동일해야 합니다. 차량 색인은 두 번 이상 지정할 수 없습니다. 차량이 costs_per_vehicle_indices에서 제외되면 비용은 0입니다. |
| pickup_to_delivery_absolute_detour_limit | Duration 수령부터 배송까지의 최단 경로에 비해 허용되는 최대 절대 우회 시간을 지정합니다. 지정된 경우 0보다 크거나 같아야 하며 배송에 픽업 및 배송이 하나 이상 포함되어야 합니다. 예를 들어 t는 선택한 수령 대안에서 선택한 배송 대안으로 바로 이동하는 데 걸리는 가장 짧은 시간입니다. 그런 다음 pickup_to_delivery_absolute_detour_limit를 설정하면 다음이 적용됩니다. start_time(delivery) - start_time(pickup) <= t + pickup_to_delivery_absolute_detour_limit 동일한 배송에 상대 한도와 절대 한도가 모두 지정된 경우 가능한 각 수령/배송 쌍에 더 제한적인 한도가 사용됩니다. 2017년 10월부터 우회 경로는 이동 시간이 차량에 종속되지 않는 경우에만 지원됩니다. |
| pickup_to_delivery_time_limit | Duration 배송의 수령 시작부터 배송 시작까지의 최대 기간을 지정합니다. 지정된 경우 0보다 크거나 같아야 하며 배송에 픽업 및 배송이 하나 이상 포함되어야 합니다. 이는 수령 및 배송에 선택된 대안이나 차량 속도에 따라 달라지지 않습니다. 최대 우회 제약 조건과 함께 지정할 수 있습니다. 솔루션은 두 사양을 모두 준수합니다. |
| shipment_type | string 이 배송의 '유형'을 지정하는 비어 있지 않은 문자열입니다. 이 기능은 shipment_types 간의 비호환성 또는 요구사항을 정의하는 데 사용할 수 있습니다 (ShipmentModel의 shipment_type_incompatibilities 및 shipment_type_requirements 참고). 단일 방문에 지정된 visit_types와는 다릅니다. 동일한 배송에 속한 모든 수령/배송은 동일한 shipment_type를 공유합니다. |
| label | string 이 배송의 라벨을 지정합니다. 이 라벨은 상응하는 ShipmentRoute.Visit의 shipment_label에 있는 응답에 보고됩니다. |
| ignore | bool true인 경우 이 배송을 건너뛰지만 penalty_cost를 적용하지 않습니다. 배송을 무시하면 모델에 shipment_type_requirements가 있는 경우 유효성 검사 오류가 발생합니다. injected_first_solution_routes 또는 injected_solution_constraint에서 실행된 배송을 무시하는 것은 허용됩니다. 솔버는 실행 경로에서 관련 수령/배송 방문을 삭제합니다. 무시된 배송을 참조하는 precedence_rules도 무시됩니다. |
| penalty_cost | double 배송이 완료되지 않으면 이 패널티가 경로의 전체 비용에 추가됩니다. 수령 및 배송 대안 중 하나가 방문되면 배송이 완료된 것으로 간주됩니다. 비용은 모델의 다른 모든 비용 관련 필드에 사용되는 것과 동일한 단위로 표현할 수 있으며 양수여야 합니다. 중요: 이 패널티가 지정되지 않으면 무한으로 간주되며, 즉 배송이 완료되어야 합니다. |
| pickup_to_delivery_relative_detour_limit | double 수령에서 배송까지의 최단 경로에 비해 최대 상대 우회 시간을 지정합니다. 지정된 경우 0보다 크거나 같아야 하며 배송에 픽업 및 배송이 하나 이상 포함되어야 합니다. 예를 들어 t는 선택한 수령 대안에서 선택한 배송 대안으로 바로 이동하는 데 걸리는 가장 짧은 시간입니다. 그런 다음 pickup_to_delivery_relative_detour_limit를 설정하면 다음이 적용됩니다. start_time(delivery) - start_time(pickup) <= std::ceil(t * (1.0 + pickup_to_delivery_relative_detour_limit)) 동일한 배송에 상대 한도와 절대 한도가 모두 지정된 경우 가능한 각 수령/배송 쌍에 더 제한적인 한도가 사용됩니다. 2017년 10월부터 우회 경로는 이동 시간이 차량에 종속되지 않는 경우에만 지원됩니다. |

로드

방문을 수행할 때 수령인 경우 사전 정의된 금액이 차량 로드에 추가되며, 배송인 경우 차량 로드에서 차감될 수 있습니다. 이 메시지는 이러한 금액을 정의합니다. load_demands [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Shipment.FIELDS.repeated.google.maps.routeoptimization.v1.Shipment.LoadDemandsEntry.google.maps.routeoptimization.v1.Shipment.load_demands]를 참조하세요.

| 필드 |
| --- |
| amount | int64 해당 방문을 실행하는 차량의 부하가 달라지는 양입니다. 정수이므로 사용자는 정밀도가 손실되지 않도록 적절한 단위를 선택하는 것이 좋습니다. 0 이상이어야 합니다. |

VisitRequest

차량으로 수행할 수 있는 방문 요청: 지리적 위치 (2개, 아래 참고), 시간대별로 표시되는 영업시간 및 서비스 기간 (차량이 도착하여 상품을 수령하거나 배송하는 데 소요되는 시간)이 있습니다.

| 필드 |
| --- |
| arrival_location | LatLng 이 VisitRequest를 실행할 때 차량이 도착하는 지리적 위치입니다. 배송 모델에 기간 거리 매트릭스가 있는 경우 arrival_location을 지정해서는 안 됩니다. |
| arrival_waypoint | Waypoint 이 VisitRequest를 실행할 때 차량이 도착하는 웨이포인트입니다. 배송 모델에 기간 거리 매트릭스가 있는 경우 arrival_waypoint을 지정해서는 안 됩니다. |
| departure_location | LatLng 이 VisitRequest를 완료한 후 차량이 출발하는 지리적 위치입니다. arrival_location와 동일한 경우 생략할 수 있습니다. 배송 모델에 기간 거리 매트릭스가 있는 경우 departure_location을 지정해서는 안 됩니다. |
| departure_waypoint | Waypoint 이 VisitRequest를 완료한 후 차량이 출발하는 웨이포인트입니다. arrival_waypoint와 동일한 경우 생략할 수 있습니다. 배송 모델에 기간 거리 매트릭스가 있는 경우 departure_waypoint을 지정해서는 안 됩니다. |
| tags[] | string 방문 요청에 연결된 태그를 지정합니다. 빈 문자열 또는 중복 문자열은 허용되지 않습니다. |
| time_windows[] | TimeWindow 방문 도착 시간을 제한하는 시간 범위입니다. 차량이 도착 시간 범위 외부에서 출발할 수 있습니다. 즉, 도착 시간 + 소요 시간이 시간 범위 내에 있지 않아도 됩니다. 이로 인해 차량이 TimeWindow.start_time 전에 도착하면 대기 시간이 발생할 수 있습니다. TimeWindow가 없으면 차량이 언제든지 이 방문을 실행할 수 있다는 뜻입니다. 시간 창은 중복되지 않아야 합니다. 즉, 시간 창이 다른 시간 창과 겹치거나 인접해서는 안 되며 오름차순으로 정렬되어야 합니다. cost_per_hour_after_soft_end_time 및 soft_end_time는 시간 창이 하나인 경우에만 설정할 수 있습니다. |
| duration | Duration 방문 시간, 즉 차량이 도착과 출발 사이에 보낸 시간입니다 (가능한 대기 시간에 추가됨, time_windows 참고). |
| cost | double 차량 경로에서 이 방문 요청을 처리하는 데 드는 비용입니다. 이 코드를 사용하면 배송의 대체 수령 또는 배송마다 다른 비용을 지불할 수 있습니다. 이 비용은 Shipment.penalty_cost와 동일한 단위여야 하며 음수가 아니어야 합니다. |
| load_demands | map<string, Load> 이 방문 요청의 수요를 로드합니다. 이는 전체 Shipment가 아닌 이 VisitRequest에만 적용된다는 점을 제외하고 Shipment.load_demands 필드와 같습니다. 여기에 나열된 요구사항은 Shipment.load_demands에 나열된 요구사항에 추가됩니다. |
| visit_types[] | string 방문 유형을 지정합니다. 차량이 이 방문을 완료하는 데 필요한 추가 시간을 할당하는 데 사용할 수 있습니다 (Vehicle.extra_visit_duration_for_visit_type 참고). 유형은 한 번만 표시될 수 있습니다. |
| label | string 이 VisitRequest의 라벨을 지정합니다. 이 라벨은 응답에서 상응하는 ShipmentRoute.Visit에 visit_label로 보고됩니다. |
| avoid_u_turns | bool 이 위치의 운전 경로에서 유턴을 피해야 하는지 여부를 지정합니다. U턴 방지는 최선의 방식이며 완전한 방지는 보장되지 않습니다. 이 기능은 실험용이며 동작이 변경될 수 있습니다. |

ShipmentModel

배송 모델에는 차량 세트로 실행해야 하는 배송 세트가 포함되며, 전체 비용은 다음의 합계입니다.

차량 경로 설정 비용 (총 시간당 비용, 이동 시간당 비용, 모든 차량의 고정 비용의 합계)
미실행 배송 페널티
전 세계 배송 기간의 비용

| 필드 |
| --- |
| shipments[] | Shipment 모델에서 실행해야 하는 배송 세트입니다. |
| vehicles[] | Vehicle 방문을 수행하는 데 사용할 수 있는 차량 세트입니다. |
| global_start_time | Timestamp 모델의 전 세계 시작 및 종료 시간: 이 범위를 벗어나는 시간은 유효하지 않은 것으로 간주됩니다. 모델의 기간은 1년 미만이어야 합니다. 즉, global_end_time와 global_start_time는 서로 31536000초 이내에 있어야 합니다. cost_per_*hour 필드를 사용할 때는 성능을 높이기 위해 이 기간을 더 짧은 간격으로 설정하는 것이 좋습니다. 예를 들어 하루를 모델링하는 경우 전역 시간 제한을 해당 날짜로 설정해야 합니다. 설정하지 않으면 1970년 1월 1일 00:00:00 UTC (즉, 초: 0, 나노초: 0)가 기본값으로 사용됩니다. |
| global_end_time | Timestamp 설정하지 않으면 1971년 1월 1일 00:00:00 UTC (즉, 초: 31536000, 나노: 0)가 기본값으로 사용됩니다. |
| global_duration_cost_per_hour | double 전체 계획의 '전체 기간'은 모든 차량의 가장 빠른 유효 시작 시간과 가장 늦은 유효 종료 시간의 차이입니다. 예를 들어 사용자는 해당 수량에 시간당 비용을 할당하여 최대한 빨리 작업을 완료하도록 최적화할 수 있습니다. 이 비용은 Shipment.penalty_cost와 동일한 단위여야 합니다. |
| duration_distance_matrices[] | DurationDistanceMatrix 모델에 사용되는 시간 및 거리 행렬을 지정합니다. 이 필드가 비어 있으면 use_geodesic_distances 필드의 값에 따라 Google 지도 또는 지오데시컬 거리가 대신 사용됩니다. 비어 있지 않으면 use_geodesic_distances가 true가 될 수 없으며 duration_distance_matrix_src_tags 또는 duration_distance_matrix_dst_tags가 비어 있을 수 없습니다. 사용 예시: locA와 locB라는 두 위치가 있습니다. 경로를 locA에서 시작하고 locA에서 종료하는 차량 1대 locB에서 수령 방문 요청 1건 model {   vehicles { start_tags: "locA"  end_tags: "locA" }   shipments { pickups { tags: "locB" } }   duration_distance_matrix_src_tags: "locA"   duration_distance_matrix_src_tags: "locB"   duration_distance_matrix_dst_tags: "locA"   duration_distance_matrix_dst_tags: "locB"   duration_distance_matrices {     rows {  # from: locA       durations { seconds: 0 }   meters: 0    # to: locA       durations { seconds: 100 } meters: 1000 # to: locB     }     rows {  # from: locB       durations { seconds: 102 } meters: 990 # to: locA       durations { seconds: 0 }   meters: 0   # to: locB     }   } } locA, locB, locC라는 세 가지 위치가 있습니다. 차량 1대가 locA에서 경로를 시작하여 locB에서 종료하며, 매트릭스 'fast'를 사용합니다. 차량 1대가 locB에서 경로를 시작하여 locB에서 종료하며, 매트릭스 'slow'를 사용합니다. 차량 1대가 locB에서 경로를 시작하여 locB에서 종료하며, 매트릭스 'fast'를 사용합니다. locC에서 수령 방문 요청 1건 model {   vehicles { start_tags: "locA" end_tags: "locB" start_tags: "fast" }   vehicles { start_tags: "locB" end_tags: "locB" start_tags: "slow" }   vehicles { start_tags: "locB" end_tags: "locB" start_tags: "fast" }   shipments { pickups { tags: "locC" } }   duration_distance_matrix_src_tags: "locA"   duration_distance_matrix_src_tags: "locB"   duration_distance_matrix_src_tags: "locC"   duration_distance_matrix_dst_tags: "locB"   duration_distance_matrix_dst_tags: "locC"   duration_distance_matrices {     vehicle_start_tag: "fast"     rows {  # from: locA       durations { seconds: 1000 } meters: 2000 # to: locB       durations { seconds: 600 }  meters: 1000 # to: locC     }     rows {  # from: locB       durations { seconds: 0 }   meters: 0    # to: locB       durations { seconds: 700 } meters: 1200 # to: locC     }     rows {  # from: locC       durations { seconds: 702 } meters: 1190 # to: locB       durations { seconds: 0 }   meters: 0    # to: locC     }   }   duration_distance_matrices {     vehicle_start_tag: "slow"     rows {  # from: locA       durations { seconds: 1800 } meters: 2001 # to: locB       durations { seconds: 900 }  meters: 1002 # to: locC     }     rows {  # from: locB       durations { seconds: 0 }    meters: 0    # to: locB       durations { seconds: 1000 } meters: 1202 # to: locC     }     rows {  # from: locC       durations { seconds: 1001 } meters: 1195 # to: locB       durations { seconds: 0 }    meters: 0    # to: locC     }   } } |
| duration_distance_matrix_src_tags[] | string 시간 및 거리 행렬의 소스를 정의하는 태그입니다. duration_distance_matrices(i).rows(j)는 태그 duration_distance_matrix_src_tags(j)가 있는 방문에서 행렬 i의 다른 방문까지의 시간과 거리를 정의합니다. 태그는 VisitRequest.tags 또는 Vehicle.start_tags에 해당합니다. 지정된 VisitRequest 또는 Vehicle는 이 필드의 태그와 정확히 하나만 일치해야 합니다. Vehicle의 소스, 대상, 매트릭스 태그가 동일할 수 있습니다. 마찬가지로 VisitRequest의 소스 및 대상 태그가 동일할 수 있습니다. 모든 태그는 서로 달라야 하며 빈 문자열일 수 없습니다. 이 필드가 비어 있지 않으면 duration_distance_matrices도 비어 있지 않아야 합니다. |
| duration_distance_matrix_dst_tags[] | string 시간 및 거리 행렬의 대상을 정의하는 태그입니다. duration_distance_matrices(i).rows(j).durations(k) (해당하는 경우 duration_distance_matrices(i).rows(j).meters(k))는 행렬 i에서 태그 duration_distance_matrix_src_tags(j)가 지정된 방문에서 태그 duration_distance_matrix_dst_tags(k)가 지정된 방문으로 이동하는 데 걸린 시간 (또는 거리)을 정의합니다. 태그는 VisitRequest.tags 또는 Vehicle.start_tags에 해당합니다. 지정된 VisitRequest 또는 Vehicle는 이 필드의 태그와 정확히 하나만 일치해야 합니다. Vehicle의 소스, 대상, 매트릭스 태그가 동일할 수 있습니다. 마찬가지로 VisitRequest의 소스 및 대상 태그가 동일할 수 있습니다. 모든 태그는 서로 달라야 하며 빈 문자열일 수 없습니다. 이 필드가 비어 있지 않으면 duration_distance_matrices도 비어 있지 않아야 합니다. |
| transition_attributes[] | TransitionAttributes 모델에 전환 속성이 추가되었습니다. |
| shipment_type_incompatibilities[] | ShipmentTypeIncompatibility 호환되지 않는 shipment_types의 집합입니다 (ShipmentTypeIncompatibility 참고). |
| shipment_type_requirements[] | ShipmentTypeRequirement shipment_type 요구사항 집합 (ShipmentTypeRequirement 참고). |
| precedence_rules[] | PrecedenceRule 모델에서 시행해야 하는 우선순위 규칙의 집합입니다. |
| max_active_vehicles | int32 활성 차량의 최대 수를 제한합니다. 경로에서 배송을 한 번 이상 실행하는 경우 차량이 활성 상태입니다. 운전자 수가 차량 수보다 적고 차량 구성이 이질적인 경우 경로 수를 제한하는 데 사용할 수 있습니다. 그러면 최적화 기능이 사용할 최적의 차량 하위 집합을 선택합니다. 엄격히 양수여야 합니다. |

DurationDistanceMatrix

방문 및 차량 시작 위치에서 방문 및 차량 종료 위치까지의 시간 및 거리 행렬을 지정합니다.

| 필드 |
| --- |
| rows[] | Row 시간 및 거리 행렬의 행을 지정합니다. ShipmentModel.duration_distance_matrix_src_tags와 동일한 수의 요소를 포함해야 합니다. |
| vehicle_start_tag | string 이 시간 및 거리 매트릭스가 적용되는 차량을 정의하는 태그입니다. 비어 있으면 모든 차량에 적용되며 매트릭스는 하나만 있을 수 있습니다. 각 차량 시작은 정확히 하나의 행렬과 일치해야 합니다. 즉, start_tags 필드 중 정확히 하나가 행렬의 vehicle_start_tag와 일치해야 하며, 이 행렬에만 일치해야 합니다. 모든 행렬은 vehicle_start_tag가 달라야 합니다. |

행

지속 시간 및 거리 행렬의 행을 지정합니다.

| 필드 |
| --- |
| durations[] | Duration 지정된 행의 기간 값입니다. ShipmentModel.duration_distance_matrix_dst_tags와 동일한 수의 요소를 포함해야 합니다. |
| meters[] | double 지정된 행의 거리 값입니다. 모델에서 거리를 참조하는 비용이나 제약 조건이 없는 경우 비워 둘 수 있습니다. 그렇지 않으면 durations와 동일한 수의 요소가 있어야 합니다. |

PrecedenceRule

두 이벤트 간의 우선순위 규칙 (각 이벤트는 배송 상품의 수령 또는 배송입니다): '첫 번째' 이벤트가 시작된 후 offset_duration 이상이 지나야 '두 번째' 이벤트가 시작될 수 있습니다.여러 우선순위가 동일한(또는 관련된) 이벤트를 참조할 수 있습니다(예: 'B 수령이 A 배송 후 발생' 및 'C 수령이 B 수령 후 발생'또한 우선순위는 두 배송이 모두 실행되는 경우에만 적용되며 그렇지 않은 경우에는 무시됩니다.

| 필드 |
| --- |
| first_is_delivery | bool '첫 번째' 이벤트가 전송인지 여부를 나타냅니다. |
| second_is_delivery | bool '두 번째' 이벤트가 전송인지 여부를 나타냅니다. |
| offset_duration | Duration '첫 번째' 이벤트와 '두 번째' 이벤트 간의 오프셋입니다. 음수일 수 있습니다. |
| first_index | int32 '첫 번째' 이벤트의 배송 색인입니다. 이 필드는 지정해야 합니다. |
| second_index | int32 '두 번째' 이벤트의 배송 색인입니다. 이 필드는 지정해야 합니다. |

ShipmentRoute

차량의 경로는 시간축을 따라 다음과 같이 분해할 수 있습니다 (방문 횟수가 n이라고 가정).
|            |            |          |       |  T[2], |        |      |
| Transition |  Visit #0  |          |       |  V[2], |        |      |
|     #0     |    aka     |   T[1]   |  V[1] |  ...   | V[n-1] | T[n] |
|  aka T[0]  |    V[0]    |          |       | V[n-2],|        |      |
|            |            |          |       | T[n-1] |        |      |
^            ^            ^          ^       ^        ^        ^      ^
vehicle    V[0].start   V[0].end     V[1].   V[1].    V[n].    V[n]. vehicle
start     (arrival)   (departure)   start   end      start    end     end

다음과 같이 구분됩니다.

차량 시작 및 종료, 각 방문의 시작 및 종료 (도착 및 출발)와 같은 '정확한 이벤트' 특정 초에 발생합니다.
'시간 간격'(예: 방문 자체, 방문 간의 전환) 시간 간격의 길이가 0인 경우(즉, 시작과 종료가 같은 초에 있는 경우)도 있지만, 대부분의 경우 길이가 양수입니다.
불변:

방문이 n회이면 전환은 n+1회입니다.
방문은 항상 그 전의 전환 (동일한 색인)과 그 후의 전환 (색인 + 1)으로 둘러싸여 있습니다.
차량 시작 후에는 항상 전환 #0이 뒤따릅니다.
차량 종료 앞에는 항상 전환 #n이 표시됩니다.
확대하면 Transition와 Visit 중에 다음과 같은 일이 발생합니다.
---+-------------------------------------+-----------------------------+-->
|           TRANSITION[i]             |           VISIT[i]          |
|                                     |                             |
|  * TRAVEL: the vehicle moves from   |      PERFORM the visit:     |
|    VISIT[i-1].departure_location to |                             |
|    VISIT[i].arrival_location, which |  * Spend some time:         |
|    takes a given travel duration    |    the "visit duration".    |
|    and distance                     |                             |
|                                     |  * Load or unload           |
|  * BREAKS: the driver may have      |    some quantities from the |
|    breaks (e.g. lunch break).       |    vehicle: the "demand".   |
|                                     |                             |
|  * WAIT: the driver/vehicle does    |                             |
|    nothing. This can happen for     |                             |
|    many reasons, for example when   |                             |
|    the vehicle reaches the next     |                             |
|    event's destination before the   |                             |
|    start of its time window         |                             |
|                                     |                             |
|  * DELAY: *right before* the next   |                             |
|    arrival. E.g. the vehicle and/or |                             |
|    driver spends time unloading.    |                             |
|                                     |                             |
---+-------------------------------------+-----------------------------+-->
^                                     ^                             ^
V[i-1].end                           V[i].start                    V[i].end

마지막으로 전환 중에 TRAVEL, BREAKS, DELAY, WAIT를 배치하는 방법은 다음과 같습니다.

겹치지 않습니다.
DELAY는 고유하며 다음 방문 (또는 차량 종료) 직전의 연속된 시간으로 여야 합니다. 따라서 시작 시간과 종료 시간을 알기 위해서는 지연 시간을 알면 충분합니다.
BREAKS는 중복되지 않는 연속된 시간입니다. 응답은 각 시점의 시작 시간과 길이를 지정합니다.
TRAVEL 및 WAIT는 '선점 가능': 이 전환 중에 여러 번 중단될 수 있습니다. 클라이언트는 이동이 '가능한 한 빨리' 이루어지고 '대기'가 남은 시간을 채운다고 가정할 수 있습니다.
(복잡한) 예:
TRANSITION[i]
--++-----+-----------------------------------------------------------++-->
||     |       |           |       |           |         |         ||
||  T  |   B   |     T     |       |     B     |         |    D    ||
||  r  |   r   |     r     |   W   |     r     |    W    |    e    ||
||  a  |   e   |     a     |   a   |     e     |    a    |    l    ||
||  v  |   a   |     v     |   i   |     a     |    i    |    a    ||
||  e  |   k   |     e     |   t   |     k     |    t    |    y    ||
||  l  |       |     l     |       |           |         |         ||
||     |       |           |       |           |         |         ||
--++-----------------------------------------------------------------++-->

| 필드 |
| --- |
| vehicle_index | int32 경로를 수행하는 차량으로, 소스 ShipmentModel의 색인으로 식별됩니다. |
| vehicle_label | string 이 경로를 수행하는 차량의 라벨입니다. 지정된 경우 ShipmentModel.vehicles(vehicle_index).label과 같습니다. |
| vehicle_start_time | Timestamp 차량이 경로를 시작하는 시간입니다. |
| vehicle_end_time | Timestamp 차량이 경로를 완료한 시간입니다. |
| visits[] | Visit 경로를 나타내는 순서가 지정된 방문 시퀀스입니다. visits[i] 는 경로의 i번째 방문입니다. 이 필드가 비어 있으면 차량이 사용되지 않는 것으로 간주됩니다. |
| transitions[] | Transition 경로의 전환 목록(순서 지정)입니다. |
| has_traffic_infeasibilities | bool OptimizeToursRequest.consider_road_traffic가 true로 설정된 경우 이 필드는 교통 기반 이동 시간 추정치를 사용하여 경로 시간의 불일치가 예측됨을 나타냅니다. 방문 및 차량 시간 범위를 충족하면서 첫 방문 전이나 마지막 방문 후에 방문 간에 교통량 조정된 이동, 지연, 휴식을 완료하기에 시간이 충분하지 않을 수 있습니다. 예를 들면 다음과 같습니다.   start_time(previous_visit) + duration(previous_visit) +   travel_duration(previous_visit, next_visit) > start_time(next_visit) 트래픽으로 인해 예상 이동 시간 travel_duration(previous_visit, next_visit)이 늘어나 next_visit 도착 시간이 현재 시간 범위보다 늦어질 수 있습니다. 또한 예상 이동 시간 증가와 방문 또는 휴식 시간 창 제한으로 인해 휴식 시간이 방문과 겹칠 수 있습니다. |
| route_polyline | EncodedPolyline 경로의 인코딩된 다중선 표현입니다. 이 필드는 OptimizeToursRequest.populate_polylines이 true로 설정된 경우에만 채워집니다. |
| breaks[] | Break 이 경로를 운행하는 차량에 예약된 휴식 시간입니다. breaks 시퀀스는 각 시퀀스가 상응하는 start_time에서 시작하여 duration초 동안 지속되는 시간 간격을 나타냅니다. |
| metrics | AggregatedMetrics 이 경로의 기간, 거리, 부하 측정항목입니다. AggregatedMetrics 필드는 맥락에 따라 모든 ShipmentRoute.transitions 또는 ShipmentRoute.visits에 대해 합산됩니다. |
| route_costs | map<string, double> 비용 관련 요청 필드별로 나눠진 경로의 비용입니다. 키는 입력 OptimizeToursRequest를 기준으로 한 프로토 경로(예: 'model.shipments.pickups.cost')이고 값은 전체 경로에 대해 집계된 해당 비용 필드에서 생성된 총 비용입니다. 즉, costs["model.shipments.pickups.cost"] 는 경로의 모든 수령 비용의 합계입니다. 모델에 정의된 모든 비용은 여기에 자세히 보고됩니다. 단, 2022년 1월 현재 집계된 방식으로만 보고되는 TransitionAttributes와 관련된 비용은 예외입니다. |
| route_total_cost | double 경로의 총 비용입니다. 비용 지도의 모든 비용의 합계입니다. |

휴식 시간

중단 실행을 나타내는 데이터입니다.

| 필드 |
| --- |
| start_time | Timestamp 광고 시점의 시작 시간입니다. |
| duration | Duration 휴식 시간입니다. |

EncodedPolyline

다중선의 인코딩된 표현입니다. 다중선 인코딩에 관한 자세한 내용은 https://developers.google.com/maps/documentation/utilities/polylinealgorithm [https://developers.google.com/maps/documentation/utilities/polylinealgorithm?hl=ko] https://developers.google.com/maps/documentation/javascript/reference/geometry#encoding [https://developers.google.com/maps/documentation/javascript/reference/geometry?hl=ko#encoding]을 참고하세요.

| 필드 |
| --- |
| points | string 다중선의 인코딩된 점을 나타내는 문자열입니다. |

전환

경로의 두 이벤트 간의 전환입니다. ShipmentRoute [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute]의 설명을 참고하세요.차량에 start_location 또는 end_location가 없으면 해당 이동 측정항목은 0입니다.

| 필드 |
| --- |
| travel_duration | Duration 이 전환 중의 이동 시간입니다. |
| travel_distance_meters | double 전환 중에 이동한 거리입니다. |
| traffic_info_unavailable | bool OptimizeToursRequest.consider_road_traffic를 통해 트래픽을 요청했지만 Transition의 트래픽 정보를 가져올 수 없는 경우 이 불리언은 true로 설정됩니다. 이는 일시적일 수 있고 (실시간 교통 서버의 드문 문제) 영구적일 수도 있습니다 (이 위치에 대한 데이터 없음). |
| delay_duration | Duration 이 전환에 적용된 지연 시간의 합계입니다. 지연이 있는 경우 다음 이벤트 (방문 또는 차량 종료)가 시작되기 정확히 delay_duration초 전에 지연이 시작됩니다. TransitionAttributes.delay 페이지를 참고하세요. |
| break_duration | Duration 이 전환 중에 발생한 휴식 시간의 합계입니다(휴식 시간이 있는 경우). 각 휴식 시간의 시작 시간 및 길이에 관한 세부정보는 ShipmentRoute.breaks에 저장됩니다. |
| wait_duration | Duration 이 전환 중에 대기한 시간입니다. 대기 시간은 유휴 시간에 해당하며 휴식 시간은 포함되지 않습니다. 또한 이 대기 시간은 연속되지 않은 여러 간격으로 나뉨을 수 있습니다. |
| total_duration | Duration 편의상 제공되는 전환의 총 시간입니다. 다음과 같습니다. 다음 방문 start_time (또는 마지막 전환인 경우 vehicle_end_time) - 이 전환의 start_time ShipmentRoute.has_traffic_infeasibilities가 false인 경우 다음이 추가로 적용됩니다. `total_duration = travel_duration + delay_duration break_duration + wait_duration`. |
| start_time | Timestamp 이 전환의 시작 시간입니다. |
| route_polyline | EncodedPolyline 전환 중에 따라간 경로의 인코딩된 다중선 표현입니다. 이 필드는 populate_transition_polylines이 true로 설정된 경우에만 채워집니다. |
| vehicle_loads | map<string, VehicleLoad> 이 전환 중에 차량이 로드되는 횟수입니다. 이 차량의 Vehicle.load_limits에 표시되거나 이 경로에서 실행된 일부 배송에 Shipment.load_demands가 0이 아닌 각 유형에 대해 차량 로드 횟수가 표시됩니다. 첫 번째 전환 중의 로드는 차량 경로의 시작 로드입니다. 그런 다음 방문이 수령인지 배송인지에 따라 방문 load_demands를 더하거나 빼서 다음 전환의 부하를 가져옵니다. |

VehicleLoad

지정된 유형에 대해 경로의 특정 지점에서 차량의 실제 부하를 보고합니다 (Transition.vehicle_loads [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentRoute.Transition.FIELDS.repeated.google.maps.routeoptimization.v1.ShipmentRoute.Transition.VehicleLoadsEntry.google.maps.routeoptimization.v1.ShipmentRoute.Transition.vehicle_loads] 참고).

| 필드 |
| --- |
| amount | int64 지정된 유형의 차량에 가해지는 부하입니다. 부하 단위는 일반적으로 유형으로 표시됩니다. Transition.vehicle_loads를 참조하세요. |

방문

경로 중에 실행된 방문입니다. 이 방문은 Shipment의 수령 또는 배송에 해당합니다.

| 필드 |
| --- |
| shipment_index | int32 소스 ShipmentModel의 shipments 필드 색인입니다. |
| is_pickup | bool 이 값이 true이면 방문이 Shipment의 수령에 해당합니다. 그렇지 않으면 전송에 해당합니다. |
| visit_request_index | int32 Shipment의 픽업 또는 배송 필드에 있는 VisitRequest의 색인입니다 (is_pickup 참고). |
| start_time | Timestamp 방문이 시작된 시간입니다. 차량이 방문 위치에 이보다 일찍 도착할 수도 있습니다. 시간이 ShipmentModel와 일치합니다. |
| load_demands | map<string, Load> 배송 및 방문 요청 load_demands의 합계로 표시되는 총 방문 부하 수요입니다. 방문이 전송인 경우 값은 음수입니다. 수요는 Transition.loads와 동일한 유형으로 보고됩니다 (이 필드 참고). |
| detour | Duration 방문 전에 경로에서 방문한 배송 상품과 시간대에서 발생할 수 있는 대기 시간으로 인한 추가 우회 시간입니다. 방문이 배송인 경우 우회 경로는 해당하는 수령 방문에서 계산되며 다음과 같습니다. start_time(delivery) - start_time(pickup) - (duration(pickup) + travel duration from the pickup location to the delivery location). 그렇지 않으면 차량 start_location에서 계산되며 다음과 같습니다. start_time - vehicle_start_time - travel duration from the vehicle's `start_location` to the visit. |
| shipment_label | string Shipment에 지정된 경우 해당 Shipment.label의 사본입니다. |
| visit_label | string VisitRequest에 지정된 경우 해당 VisitRequest.label의 사본입니다. |
| injected_solution_location_token | int32 방문 위치에 관한 정보를 나타내는 불투명 토큰입니다. 이 필드는 이 방문에 대해 VisitRequest.avoid_u_turns가 true로 설정되었거나 요청 OptimizeToursRequest에서 ShipmentModel.avoid_u_turns가 true로 설정된 경우 결과 경로의 방문에 채워질 수 있습니다. |

ShipmentTypeIncompatibility

shipment_type에 따라 배송 상품 간의 비호환성을 지정합니다. 동일한 경로에 호환되지 않는 배송이 표시되는 방식은 비호환성 모드에 따라 제한됩니다.

| 필드 |
| --- |
| types[] | string 호환되지 않는 유형 목록 나열된 배송 중 shipment_types가 다른 두 배송은 '호환되지 않음'입니다. |
| incompatibility_mode | IncompatibilityMode 비호환성에 적용된 모드입니다. |

IncompatibilityMode

동일한 경로에서 호환되지 않는 배송의 표시가 제한되는 방식을 정의하는 모드입니다.

| 열거형 |
| --- |
| INCOMPATIBILITY_MODE_UNSPECIFIED | 지정되지 않은 비호환성 모드입니다. 절대로 이 값을 사용하지 마세요. |
| NOT_PERFORMED_BY_SAME_VEHICLE | 이 모드에서는 유형이 호환되지 않는 두 배송이 동일한 차량을 공유할 수 없습니다. |
| NOT_IN_SAME_VEHICLE_SIMULTANEOUSLY | NOT_IN_SAME_VEHICLE_SIMULTANEOUSLY 비호환 모드와 호환되지 않는 유형의 두 배송의 경우: 둘 다 수령만 (배송 없음) 또는 배송만 (수령 없음)인 경우 동일한 차량을 공유할 수 없습니다. 배송 중 하나에 배송이 있고 다른 하나에 수령이 있는 경우, 후자가 수령되기 전에 전자가 배송되는 경우에만 두 배송이 동일한 차량을 공유할 수 있습니다. |

ShipmentTypeRequirement

shipment_type에 따라 배송 간 요구사항을 지정합니다. 요구사항의 세부정보는 요구사항 모드에 따라 정의됩니다.

| 필드 |
| --- |
| required_shipment_type_alternatives[] | string dependent_shipment_types에 필요한 대체 배송 유형 목록입니다. |
| dependent_shipment_types[] | string dependent_shipment_types 필드에 유형이 있는 모든 배송의 경우 동일한 경로에서 required_shipment_type_alternatives 유형의 배송이 하나 이상 방문해야 합니다. 참고: shipment_type가 자체적으로 종속되는 요구사항 체인은 허용되지 않습니다. |
| requirement_mode | RequirementMode 요구사항에 적용된 모드입니다. |

RequirementMode

경로에서 종속 배송의 모양을 정의하는 모드입니다.

| 열거형 |
| --- |
| REQUIREMENT_MODE_UNSPECIFIED | 지정되지 않은 요구사항 모드입니다. 절대로 이 값을 사용하지 마세요. |
| PERFORMED_BY_SAME_VEHICLE | 이 모드에서는 모든 '종속' 배송이 '필수' 배송 중 하나 이상과 동일한 차량을 공유해야 합니다. |
| IN_SAME_VEHICLE_AT_PICKUP_TIME | IN_SAME_VEHICLE_AT_PICKUP_TIME 모드를 사용하면 모든 '종속' 배송의 경우 차량에 '필수' 배송이 하나 이상 있어야 합니다. 따라서 '종속' 배송 수령에는 다음 중 하나가 있어야 합니다. 배송 전용 '필수' 배송으로, 다음과 같은 경로로 배송된 경우 그 전에 경로에서 '필수' 배송이 수령되었으며 '필수' 배송에 배송이 있는 경우 이 배송은 '종속' 배송의 수령 후에 실행되어야 합니다. |
| IN_SAME_VEHICLE_AT_DELIVERY_TIME | 이전과 동일하지만 '종속' 배송의 경우 배송 시 차량에 '필수' 배송이 있어야 합니다. |

SkippedShipment

솔루션에서 실행되지 않은 배송의 세부정보를 지정합니다. 사소한 케이스이거나 건너뛰는 이유를 파악할 수 있는 경우 여기에 이유를 보고합니다.

| 필드 |
| --- |
| index | int32 색인은 소스 ShipmentModel의 배송 색인에 해당합니다. |
| label | string Shipment에 지정된 경우 해당 Shipment.label의 사본입니다. |
| reasons[] | Reason 배송이 건너뛴 이유를 설명하는 이유 목록입니다. Reason 위의 주석을 참고하세요. 배송이 건너뛴 이유를 파악할 수 없는 경우 사유가 설정되지 않습니다. |

이유

배송이 건너뛴 이유를 설명할 수 있는 경우 여기에 이유가 표시됩니다. 모든 차량의 이유가 동일하지 않은 경우 reason에는 요소가 2개 이상 있습니다. 건너뛴 배송에는 중복된 이유가 있을 수 없습니다. 즉, example_vehicle_index를 제외한 모든 입력란이 동일한 경우입니다. 예:
reasons {
code: DEMAND_EXCEEDS_VEHICLE_CAPACITY
example_vehicle_index: 1
example_exceeded_capacity_type: "Apples"

시간 범위는 방문 도착 시간, 차량의 시작 시간 및 종료 시간과 같은 이벤트 시간을 제한합니다.하드 시간 창 경계인 start_time 및 end_time는 이벤트의 가장 빠른 시간과 가장 늦은 시간을 적용합니다(예: start_time <= event_time <=
end_time). 조정 시간 창 하한값 soft_start_time은 이벤트가 soft_start_time 전에 발생한 시간에 비례하는 비용을 발생시킴으로써 이벤트가 soft_start_time 이후에 발생하도록 하는 선호도를 나타냅니다. 소프트 시간 창 상한 soft_end_time는 이벤트가 soft_end_time 이전에 발생하도록 하는 선호도를 표현하며, soft_end_time 이후 이벤트가 발생한 시간에 비례하여 비용을 발생시킵니다. start_time, end_time, soft_start_time, soft_end_time는 전역 시간 제한 (ShipmentModel.global_start_time [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentModel.FIELDS.google.protobuf.Timestamp.google.maps.routeoptimization.v1.ShipmentModel.global_start_time] 및 ShipmentModel.global_end_time [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.ShipmentModel.FIELDS.google.protobuf.Timestamp.google.maps.routeoptimization.v1.ShipmentModel.global_end_time] 참고) 내에 있어야 하며 다음을 준수해야 합니다.
0 <= `start_time` <= `end_time` and
0 <= `start_time` <= `soft_start_time` and
0 <= `soft_end_time` <= `end_time`.

| 필드 |
| --- |
| start_time | Timestamp 엄격한 시간 간격의 시작 시간입니다. 지정하지 않으면 ShipmentModel.global_start_time로 설정됩니다. |
| end_time | Timestamp 엄격한 시간 범위의 종료 시간입니다. 지정하지 않으면 ShipmentModel.global_end_time로 설정됩니다. |
| soft_start_time | Timestamp 시간 범위의 조용히 시작 시간입니다. |
| soft_end_time | Timestamp 시간 범위의 조기 종료 시간입니다. |
| cost_per_hour_before_soft_start_time | double 이벤트가 soft_start_time 전에 발생하는 경우 모델의 다른 비용에 추가되는 시간당 비용으로 다음과 같이 계산됩니다.    max(0, soft_start_time - t.seconds)                           * cost_per_hour_before_soft_start_time / 3600, t being the time of the event. 이 비용은 양수여야 하며, 이 필드는 soft_start_time이 설정된 경우에만 설정할 수 있습니다. |
| cost_per_hour_after_soft_end_time | double 이벤트가 soft_end_time 이후에 발생하는 경우 모델의 다른 비용에 추가되는 시간당 비용으로 다음과 같이 계산됩니다.    max(0, t.seconds - soft_end_time.seconds)                     * cost_per_hour_after_soft_end_time / 3600, t being the time of the event. 이 비용은 양수여야 하며 soft_end_time가 설정된 경우에만 필드를 설정할 수 있습니다. |

TransitionAttributes

경로에서 두 번 연속 방문 간의 전환 속성을 지정합니다. 동일한 전환에 여러 개의 TransitionAttributes가 적용될 수 있습니다. 이 경우 모든 추가 비용이 합산되고 가장 엄격한 제약 조건 또는 한도가 적용됩니다 (자연스러운 'AND' 시맨틱에 따라).

| 필드 |
| --- |
| src_tag | string 이 속성이 적용되는 (src->dst) 전환 집합을 정의하는 태그입니다. 소스 방문 또는 차량 시작이 일치하는 경우는 VisitRequest.tags 또는 Vehicle.start_tags에 src_tag가 포함되거나 excluded_src_tag가 포함되지 않는 경우 (두 필드 중 비어 있지 않은 필드에 따라 다름)입니다. |
| excluded_src_tag | string src_tag를 참조하세요. src_tag 및 excluded_src_tag 중 정확히 하나는 비어 있지 않아야 합니다. |
| dst_tag | string 대상 방문 또는 차량 종료가 일치하는 경우는 VisitRequest.tags 또는 Vehicle.end_tags에 dst_tag가 포함되거나 excluded_dst_tag가 포함되지 않는 경우 (이 두 필드 중 비어 있지 않은 필드에 따라 다름)입니다. |
| excluded_dst_tag | string dst_tag를 참조하세요. dst_tag 및 excluded_dst_tag 중 정확히 하나는 비어 있지 않아야 합니다. |
| cost | double 이 전환을 실행하는 데 드는 비용을 지정합니다. 이 값은 모델의 다른 모든 비용과 동일한 단위로 표시되며 음수가 아니어야 합니다. 기존의 다른 모든 비용에 추가로 적용됩니다. |
| cost_per_kilometer | double 이 전환을 실행하는 동안 이동한 거리에 적용되는 킬로미터당 비용을 지정합니다. 차량에 지정된 Vehicle.cost_per_kilometer를 모두 더합니다. |
| distance_limit | DistanceLimit 이 전환을 실행하는 동안 이동하는 거리에 대한 제한을 지정합니다. 2021년 6월부터는 최대 한도만 지원됩니다. |
| delay | Duration 이 전환을 실행할 때 발생하는 지연을 지정합니다. 이 지연은 항상 소스 방문을 완료한 후 도착 페이지 방문을 시작하기 전에 발생합니다. |

차량

배송 문제의 차량을 모델링합니다. 배송 문제를 해결하면 이 차량의 경로가 start_location에서 시작하여 end_location에서 종료됩니다. 경로는 방문의 시퀀스입니다 (ShipmentRoute 참고).

| 필드 |
| --- |
| display_name | string 차량의 사용자 정의 표시 이름입니다. 최대 63자(영문 기준)까지 사용할 수 있으며 UTF-8 문자를 사용할 수 있습니다. |
| travel_mode | TravelMode 차량에서 사용할 수 있는 도로와 속도에 영향을 미치는 이동 모드입니다. travel_duration_multiple을 참고하세요. |
| start_location | LatLng 차량이 배송 상품을 수거하기 전에 출발하는 지리적 위치입니다. 지정하지 않으면 차량이 첫 번째 수령 위치에서 시작합니다. 배송 모델에 기간 및 거리 매트릭스가 있는 경우 start_location을 지정해서는 안 됩니다. |
| start_waypoint | Waypoint 차량이 배송 상품을 수거하기 전에 출발하는 지리적 위치를 나타내는 웨이포인트입니다. start_waypoint 또는 start_location가 지정되지 않으면 차량이 첫 번째 픽업 위치에서 시작합니다. 배송 모델에 기간 및 거리 매트릭스가 있는 경우 start_waypoint을 지정해서는 안 됩니다. |
| end_location | LatLng 차량이 마지막 VisitRequest를 완료한 후 종료되는 지리적 위치입니다. 지정하지 않으면 차량의 ShipmentRoute는 마지막 VisitRequest를 완료하면 즉시 종료됩니다. 배송 모델에 기간 및 거리 매트릭스가 있는 경우 end_location을 지정해서는 안 됩니다. |
| end_waypoint | Waypoint 차량이 마지막 VisitRequest를 완료한 후 종료되는 지리적 위치를 나타내는 웨이포인트입니다. end_waypoint 또는 end_location를 지정하지 않으면 차량의 ShipmentRoute는 마지막 VisitRequest를 완료하면 즉시 종료됩니다. 배송 모델에 기간 및 거리 매트릭스가 있는 경우 end_waypoint을 지정해서는 안 됩니다. |
| start_tags[] | string 차량 경로의 시작 부분에 연결된 태그를 지정합니다. 빈 문자열 또는 중복 문자열은 허용되지 않습니다. |
| end_tags[] | string 차량 경로의 끝에 연결된 태그를 지정합니다. 빈 문자열 또는 중복 문자열은 허용되지 않습니다. |
| start_time_windows[] | TimeWindow 차량이 출발 위치를 떠날 수 있는 시간입니다. 전 세계 시간 제한 내에 있어야 합니다 (ShipmentModel.global_* 필드 참고). 지정하지 않으면 전 세계 시간 제한 외에는 제한이 없습니다. 동일한 반복 필드에 속하는 시간 창은 서로 중복되지 않아야 합니다. 즉, 시간 창이 다른 시간 창과 겹치거나 인접해서는 안 되며 시간 순으로 정렬되어야 합니다. cost_per_hour_after_soft_end_time 및 soft_end_time는 시간 창이 하나인 경우에만 설정할 수 있습니다. |
| end_time_windows[] | TimeWindow 차량이 도착할 수 있는 시간입니다. 전 세계 시간 제한 내에 있어야 합니다 (ShipmentModel.global_* 필드 참고). 지정하지 않으면 전 세계 시간 제한 외에는 제한이 없습니다. 동일한 반복 필드에 속하는 시간 창은 서로 중복되지 않아야 합니다. 즉, 시간 창이 다른 시간 창과 겹치거나 인접해서는 안 되며 시간 순으로 정렬되어야 합니다. cost_per_hour_after_soft_end_time 및 soft_end_time는 시간 창이 하나인 경우에만 설정할 수 있습니다. |
| unloading_policy | UnloadingPolicy 차량에 적용된 하역 정책 |
| load_limits | map<string, LoadLimit> 차량의 용량 (예: 중량, 부피, 팔레트 수) 맵의 키는 Shipment.load_demands 필드의 키와 일치하는 부하 유형의 식별자입니다. 이 맵에 특정 키가 없으면 해당 용량은 무제한으로 간주됩니다. |
| cost_per_hour | double 차량 비용: 모든 비용이 합산되며 Shipment.penalty_cost와 동일한 단위여야 합니다. 차량 경로의 시간당 비용입니다. 이 비용은 경로에 걸린 총 시간에 적용되며 이동 시간, 대기 시간, 방문 시간 등이 포함됩니다. cost_per_traveled_hour 대신 cost_per_hour를 사용하면 지연 시간이 늘어날 수 있습니다. |
| cost_per_traveled_hour | double 차량 경로의 이동 시간당 비용입니다. 이 비용은 경로에서 걸린 이동 시간 (ShipmentRoute.transitions에 보고됨)에만 적용되며 대기 시간과 방문 시간은 제외됩니다. |
| cost_per_kilometer | double 차량 경로의 킬로미터당 비용입니다. 이 비용은 ShipmentRoute.transitions에 보고된 거리에 적용되며 단일 VisitRequest의 arrival_location에서 departure_location까지 암시적으로 이동한 거리에는 적용되지 않습니다. |
| fixed_cost | double 이 차량이 배송을 처리하는 데 사용되는 경우 적용되는 고정 비용입니다. |
| used_if_route_is_empty | bool 이 필드는 경로에 배송 상품이 없는 차량에만 적용됩니다. 이 경우 차량을 중고로 간주해야 하는지 여부를 나타냅니다. 이 값이 true이면 차량이 배송 상품을 배송하지 않더라도 시작 위치에서 종료 위치로 이동하며 시작 위치에서 종료 위치로 이동하는 데 발생하는 시간 및 거리 비용이 고려됩니다. 그렇지 않으면 시작 위치에서 종료 위치로 이동하지 않으며 이 차량에 break_rule 또는 지연 (TransitionAttributes에서)이 예약되지 않습니다. 이 경우 차량의 ShipmentRoute에는 차량 색상 및 라벨을 제외한 정보가 포함되지 않습니다. |
| route_duration_limit | DurationLimit 차량 경로의 총 시간에 적용되는 제한입니다. 주어진 OptimizeToursResponse에서 차량의 경로 시간은 vehicle_end_time와 vehicle_start_time의 차이입니다. |
| travel_duration_limit | DurationLimit 차량 경로의 이동 시간에 적용되는 제한입니다. 주어진 OptimizeToursResponse에서 경로 이동 시간은 모든 transitions.travel_duration의 합계입니다. |
| route_distance_limit | DistanceLimit 차량 경로의 총 거리에 적용되는 제한입니다. 주어진 OptimizeToursResponse에서 경로 거리는 모든 transitions.travel_distance_meters의 합계입니다. |
| extra_visit_duration_for_visit_type | map<string, Duration> visit_types 문자열에서 기간으로의 매핑을 지정합니다. 기간은 지정된 visit_types로 방문할 때 VisitRequest.duration 외에 걸리는 시간입니다. 이 추가 방문 기간은 cost_per_hour가 지정된 경우 비용을 추가합니다. 키 (예: visit_types)는 빈 문자열일 수 없습니다. 방문 요청에 유형이 여러 개인 경우 지도에 유형별로 소요 시간이 추가됩니다. |
| break_rule | BreakRule 이 차량에 적용할 휴식 일정을 설명합니다. 비어 있으면 이 차량에 휴식 시간이 예약되지 않습니다. |
| label | string 이 차량의 라벨을 지정합니다. 이 라벨은 응답에서 해당 ShipmentRoute의 vehicle_label로 보고됩니다. |
| ignore | bool true인 경우 used_if_route_is_empty는 false여야 하며 이 차량은 사용되지 않은 상태로 유지됩니다. injected_first_solution_routes에서 무시된 차량으로 배송이 실행되는 경우 첫 번째 솔루션에서는 건너뛰지만 응답에서는 자유롭게 실행할 수 있습니다. injected_solution_constraint에서 무시된 차량으로 배송이 실행되고 관련 수령/배송이 차량에 머물러야 하는 제약 조건이 있는 경우 (즉, RELAX_ALL_AFTER_THRESHOLD 수준으로 완화되지 않음) 응답에서 건너뜁니다. 배송에 비어 있지 않은 allowed_vehicle_indices 필드가 있고 허용된 모든 차량이 무시되면 응답에서 건너뜁니다. |
| travel_duration_multiple | double 이 차량의 이동 시간을 늘리거나 줄이는 데 사용할 수 있는 배수를 지정합니다. 예를 들어 이 값을 2.0으로 설정하면 이 차량이 느려지고 이동 시간이 표준 차량의 두 배가 된다는 의미입니다. 이 배수는 방문 시간에 영향을 미치지 않습니다. cost_per_hour 또는 cost_per_traveled_hour가 지정된 경우 비용에 영향을 미칩니다. 범위는 [0.001, 1000.0]이어야 합니다. 설정하지 않으면 차량이 표준이며 이 배수는 1.0으로 간주됩니다. 경고: 이동 시간은 이 배수가 적용된 후 수치 연산을 실행하기 전에 가장 가까운 초로 반올림되므로 작은 배수를 사용하면 정밀도가 떨어질 수 있습니다. 아래 extra_visit_duration_for_visit_type도 참고하세요. |

DurationLimit

차량 경로의 최대 시간을 정의하는 한도입니다. 하드 또는 소프트일 수 있습니다.최대한 낮은 한도 필드가 정의되면 최대한 낮은 최대 한도 임곗값과 연결된 비용도 함께 정의해야 합니다.

| 필드 |
| --- |
| max_duration | Duration 최대 길이가 max_duration 이하가 되도록 제한하는 하드 제한입니다. |
| soft_max_duration | Duration 최대 기간 한도를 적용하지 않는 가벼운 한도이지만 위반하면 경로에 비용이 발생합니다. 이 비용은 동일한 단위로 모델에 정의된 다른 비용에 합산됩니다. 정의된 경우 soft_max_duration는 음수가 아니어야 합니다. max_duration도 정의된 경우 soft_max_duration는 max_duration보다 작아야 합니다. |
| quadratic_soft_max_duration | Duration 최대 기간 제한을 적용하지 않는 가벼운 제한이지만 위반하면 경로에 기간에 비례하는 비용이 발생합니다. 이 비용은 동일한 단위로 모델에 정의된 다른 비용에 합산됩니다. 정의된 경우 quadratic_soft_max_duration는 음수가 아니어야 합니다. max_duration도 정의된 경우 quadratic_soft_max_duration는 max_duration보다 작아야 하며 차이는 1일 이하여야 합니다. max_duration - quadratic_soft_max_duration <= 86400 seconds |
| cost_per_hour_after_soft_max | double soft_max_duration 기준점이 위반될 경우 발생하는 시간당 비용입니다. 기간이 기준점 미만인 경우 추가 비용은 0이고, 그렇지 않은 경우 비용은 다음과 같이 기간에 따라 달라집니다.   cost_per_hour_after_soft_max * (duration - soft_max_duration) 비용은 음수가 아니어야 합니다. |
| cost_per_square_hour_after_quadratic_soft_max | double quadratic_soft_max_duration 기준점이 위반될 경우 발생하는 평방시간당 비용입니다. 기간이 기준점 미만인 경우 추가 비용은 0이고, 그렇지 않은 경우 비용은 다음과 같이 기간에 따라 달라집니다.   cost_per_square_hour_after_quadratic_soft_max *   (duration - quadratic_soft_max_duration)^2 비용은 음수가 아니어야 합니다. |

LoadLimit

차량에 적용되는 적재 한도를 정의합니다(예: '이 트럭은 최대 3, 500kg만 운반할 수 있음'). load_limits [https://developers.google.com/maps/tt/route-optimization/experimental/u-turn-avoidance/reference/rpc/google.maps.routeoptimization.v1?hl=ko#google.maps.routeoptimization.v1.Vehicle.FIELDS.repeated.google.maps.routeoptimization.v1.Vehicle.LoadLimitsEntry.google.maps.routeoptimization.v1.Vehicle.load_limits]를 참조하세요.

| 필드 |
| --- |
| soft_max_load | int64 부하의 소프트 한도입니다. cost_per_unit_above_soft_max를 참조하세요. |
| cost_per_unit_above_soft_max | double 이 차량의 경로에서 로드가 soft_max_load를 초과하는 경우 다음과 같은 비용 패널티가 적용됩니다 (차량당 한 번만 적용됨): (로드 - soft_max_load) * cost_per_unit_above_soft_max. 모든 비용이 합산되며 Shipment.penalty_cost와 동일한 단위여야 합니다. |
| start_load_interval | Interval 경로 시작 시 차량의 허용되는 적재 간격입니다. |
| end_load_interval | Interval 경로 끝에 있는 차량의 허용되는 적재 간격입니다. |
| max_load | int64 허용되는 최대 부하입니다. |

간격

허용되는 부하량 간격입니다.

| 필드 |
| --- |
| min | int64 허용되는 최소 부하입니다. 0 이상이어야 합니다. 둘 다 지정된 경우 min는 max보다 작거나 같아야 합니다. |
| max | int64 허용되는 최대 부하입니다. 0 이상이어야 합니다. 지정하지 않으면 이 메시지에 의해 최대 부하가 제한되지 않습니다. 둘 다 지정된 경우 min는 max보다 작거나 같아야 합니다. |

TravelMode

차량에서 사용할 수 있는 이동 수단입니다.이는 Google Maps Platform Routes Preferred API 이동 수단의 하위 집합이어야 합니다. https://developers.google.com/maps/documentation/routes_preferred/reference/rest/Shared.Types/RouteTravelMode [https://developers.google.com/maps/documentation/routes_preferred/reference/rest/Shared.Types/RouteTravelMode?hl=ko]를 참고하세요.

| 열거형 |
| --- |
| TRAVEL_MODE_UNSPECIFIED | DRIVING과 동일한 지정되지 않은 이동 수단입니다. |
| DRIVING | 운전 경로에 해당하는 이동 모드 (자동차 등)입니다. |
| WALKING | 도보 경로에 해당하는 이동 수단입니다. |

UnloadingPolicy

차량을 하역하는 방법에 관한 정책입니다. 수령과 배송이 모두 있는 배송에만 적용됩니다.다른 배송은 unloading_policy와 관계없이 경로의 어느 곳에서나 자유롭게 발생할 수 있습니다.

| 열거형 |
| --- |
| UNLOADING_POLICY_UNSPECIFIED | 지정되지 않은 하역 정책. 해당하는 픽업 후에만 배송이 이루어져야 합니다. |
| LAST_IN_FIRST_OUT | 배송은 수거의 역순으로 이루어져야 합니다. |
| FIRST_IN_FIRST_OUT | 배송은 수령과 동일한 순서로 이루어져야 함 |

경유지

웨이포인트를 캡슐화합니다. 웨이포인트는 VisitRequests의 도착 및 출발 위치와 차량의 시작 및 종료 위치를 표시합니다.

| 필드 |
| --- |
| side_of_road | bool 선택사항입니다. 이 경유지의 위치가 차량이 도로의 특정 측면에 정차하는 것을 선호한다는 것을 나타냅니다. 이 값을 설정하면 차량이 도로 중앙에서 위치가 편향된 도로 쪽에 정차할 수 있도록 경로가 위치를 통과합니다. 이 옵션은 '도보' 이동 모드에는 작동하지 않습니다. |
| 통합 필드 location_type. 위치를 나타내는 다양한 방법 location_type은 다음 중 하나여야 합니다. |
| location | Location 선택적 방향을 포함하여 지리적 좌표를 사용하여 지정된 지점입니다. |
| place_id | string 경로 지점과 연결된 관심 장소 장소 ID입니다. |