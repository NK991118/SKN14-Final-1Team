Source URL: https://developers.google.com/maps/documentation/javascript/places-ui-kit/basic-autocomplete?hl=ko
Title: 기본 Place Autocomplete 요소

의견 보내기

기본 Place Autocomplete 요소

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/places/android-sdk/basic-place-autocomplete-ui-kit?hl=ko]

iOS [https://developers.google.com/maps/documentation/places/ios-sdk/basic-place-autocomplete-ui-kit?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/places-ui-kit/basic-autocomplete?hl=ko]

BasicPlaceAutocompleteElement [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#BasicPlaceAutocompleteElement]은 텍스트 입력란을 만들고 UI 선택 목록에 장소 예상 검색어를 제공하며 선택한 장소의 장소 ID를 반환합니다.

기본 Place Autocomplete 요소는 PlaceAutocompleteElement [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#PlaceAutocompleteElement]보다 구현이 간단하며 다음과 같은 차이가 있습니다.

기본 Place Autocomplete 요소는 PlacePrediction [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#PlacePrediction] 객체가 아닌 장소 ID [https://developers.google.com/maps/documentation/places/web-service/place-id?hl=ko]만 포함하는 장소 객체 [https://developers.google.com/maps/documentation/javascript/place?hl=ko]를 반환합니다. 반환된 장소 ID를 Places UI Kit Details [https://developers.google.com/maps/documentation/javascript/places-ui-kit/ui-kit-details?hl=ko] 요소와 직접 사용하여 추가 장소 세부정보를 가져올 수 있지만 PlacePrediction 객체는 먼저 장소 ID로 변환해야 합니다.
기본 Place Autocomplete 요소를 사용하면 Places API를 로드할 필요가 없습니다.
사용자가 장소 예상 검색어를 선택하면 기본 장소 자동 완성 요소가 입력란을 지웁니다.

기본 요건

기본 Place Autocomplete 요소를 사용하려면 Google Cloud 프로젝트에서 Places UI Kit를 사용 설정해야 합니다. 자세한 내용은 시작하기 [https://developers.google.com/maps/documentation/javascript/places-ui-kit/get-started?hl=ko]를 참고하세요.

참고: 기본 장소 자동 완성 요소는 표준 자동 완성 요청 [https://developers.google.com/maps/billing-and-pricing/sku-details?hl=ko#places_autocomplete-request-new-ess-sku] 또는 자동 완성 세션 [https://developers.google.com/maps/billing-and-pricing/sku-details?hl=ko#autocomplete-session-new-ess-sku] SKU가 아닌 기본 자동 완성 [https://developers.google.com/maps/billing-and-pricing/sku-details?hl=ko#places_ui-kit-auto-ess-sku] SKU를 사용하여 청구됩니다.

기본 장소 자동 완성 요소 추가

이 섹션에서는 웹페이지 또는 지도에 기본 자동 완성 요소를 추가하는 방법을 보여줍니다.

웹페이지에 기본 자동 완성 요소 추가

웹페이지에 BasicAutocomplete 요소를 추가하려면 새 google.maps.places.BasicPlaceAutocompleteElement를 만들고 다음 예와 같이 페이지에 추가합니다.

</gmp-map>index.html [https://github.com/googlemaps-samples/js-api-samples/blob/5f4e6decfaf59cd69918bbf4e6338de03a63a5ba/dist/samples/place-autocomplete-basic-map/docs/index.html#L22-L25]

참고: 지도 ID [https://developers.google.com/maps/documentation/javascript/map-ids/mapid-over?hl=ko] 속성을 사용하면 지도 스타일 지정 및 구성 설정을 Google Cloud에 저장할 수 있으며 이 예에서는 필수입니다. DEMO_MAP_ID ID는 테스트에 사용할 수 있으며 클라우드에서 사용 설정할 필요가 없습니다.

자동 완성 예상 검색어 제한

기본적으로 Basic Place Autocomplete는 사용자 위치 근처의 예상 검색어에 편중된 모든 장소 유형을 표시합니다. 결과를 제한하거나 상세 검색하여 더 관련성 높은 예상 검색어를 표시하려면 BasicPlaceAutocompleteElementOptions [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#BasicPlaceAutocompleteElementOptions]를 설정하세요.

결과를 제한하면 기본 자동 완성 요소가 제한 지역 밖의 모든 결과를 무시합니다. 일반적인 방법은 결과를 지도 경계로 제한하는 것입니다. 결과를 상세 검색하면 BasicAutocomplete 요소가 지정된 지역 내 결과를 표시하지만 일부 일치 항목이 해당 지역을 벗어날 수 있습니다.

경계나 지도 표시 영역을 제공하지 않으면 API가 IP 주소에서 사용자의 위치를 감지하려고 시도하고 해당 위치에 편중된 결과를 반환합니다. 가능하면 항상 경계를 설정하세요. 그렇지 않으면 각 사용자가 받는 예측이 서로 다를 수 있습니다. 또한 일반적으로 예측을 개선하려면 지도를 화면 이동하거나 확대/축소하여 설정한 적절한 표시 영역이나 개발자가 기기 위치 및 반경을 기반으로 설정한 표시 영역을 제공해야 합니다. 반경을 사용할 수 없는 경우에는 5km가 기본 Place Autocomplete 요소에 적절한 기본값으로 간주됩니다.
반경이 0인 표시 영역(단일 점), 가로가 100m 미만에 불과한 표시 영역 또는 지구 전체 둘레에 해당하는 표시 영역은 설정하지 마세요.

국가별 장소 검색 제한

장소 검색을 하나 이상의 특정 국가로 제한하려면 다음 스니펫에 표시된 대로 includedRegionCodes 속성을 사용하여 국가 코드를 지정합니다.

장소 검색결과 상세 검색

다음과 같이 locationBias 속성을 사용하고 반경을 전달하여 장소 검색결과를 원 영역에 배치합니다.

장소 검색결과를 특정 유형으로 제한

다음과 같이 includedPrimaryTypes 속성을 사용하고 하나 이상의 유형을 지정하여 장소 검색 결과를 특정 유형으로 제한합니다.

Place Request 요소 구성

사용자가 예측을 선택할 때 Place Request 요소를 업데이트하는 리스너를 추가합니다.

placeDetailsElement.style.display = 'block';
advancedMarkerElement.position = null;
infoWindow.close();
const { AdvancedMarkerElement } = (await google.maps.importLibrary('marker'));
const { InfoWindow } = (await google.maps.importLibrary('maps'));
placeDetailsElement.style.display = 'block';
advancedMarkerElement.position = null;
infoWindow.close();
infoWindow.setContent(placeDetailsElement);
infoWindow.open({
map,
anchor: advancedMarkerElement,
advancedMarkerElement.position = null;
html,
body {
<html>
<head>
<title>Basic Place Autocomplete map</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
<!-- prettier-ignore -->
<script>
(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
({key: "AIzaSyA6myHzS10YXdcazAFalmXvDkrYCp5cLc8", v: "weekly"});
</script>
</head>
<body>
<gmp-map zoom="12" center="37.4220656,-122.0840897" map-id="DEMO_MAP_ID">
<gmp-basic-place-autocomplete
slot="control-inline-start-block-start"></gmp-basic-place-autocomplete>
</gmp-map>
<!-- Use inline styles to configure the Place Details Compact element because
it will be placed within the info window, and info window content is inside
the shadow DOM when using <gmp-map> -->
<gmp-place-details-compact
orientation="horizontal"
style="width: 400px;