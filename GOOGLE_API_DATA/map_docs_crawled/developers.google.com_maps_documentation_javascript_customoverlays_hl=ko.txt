Source URL: https://developers.google.com/maps/documentation/javascript/customoverlays?hl=ko
Title: 맞춤 오버레이

의견 보내기

맞춤 오버레이

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/android-sdk/tileoverlay?hl=ko]

iOS [https://developers.google.com/maps/documentation/ios-sdk/tiles?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/customoverlays?hl=ko]

소개

오버레이는 위도/경도 좌표에 연결되어 지도를 드래그하거나 확대/축소할 때 이동하는 지도상의 객체입니다. 사전 정의된 오버레이 유형에 대한 자세한 내용은 지도에 그리기 [https://developers.google.com/maps/documentation/javascript/overlays?hl=ko]를 참고하세요.

Maps JavaScript API는 맞춤 오버레이를 만들 수 있는 OverlayView [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#OverlayView] 클래스를 제공합니다. OverlayView는 오버레이를 만들 때 구현해야 하는 여러 메서드를 제공하는 기본 클래스로서, 화면 좌표와 지도상의 위치 간에 서로 변환할 수 있도록 지원하는 메서드도 제공합니다.

맞춤 오버레이 추가

다음은 맞춤 오버레이를 만드는 데 필요한 단계를 요약한 것입니다.

맞춤 오버레이 객체의 prototype을 새 google.maps.OverlayView() 인스턴스로 설정합니다. 이렇게 하면 오버레이 클래스의 서브클래스가 생성됩니다.
맞춤 오버레이의 생성자를 만들고 초기화 매개변수를 설정합니다.
프로토타입 내에서 onAdd() 메서드를 구현하고 오버레이를 지도에 연결합니다. 지도에 오버레이를 연결할 준비가 되면 OverlayView.onAdd()가 호출됩니다.
프로토타입 내에서 draw() 메서드를 구현하고 객체의 시각적 표시를 처리합니다. 객체가 처음 표시될 때 OverlayView.draw()가 호출됩니다.
또한 onRemove() 메서드를 구현하여 오버레이 내에 추가한 요소를 정리해야 합니다.

아래는 각 단계에 대한 자세한 설명입니다. 실제로 작동하는 전체 예시 코드를 확인할 수 있습니다. 예시 코드 보기 [https://developers.google.com/maps/documentation/javascript/customoverlays?hl=ko#code]

오버레이 서브클래스 생성

아래 예에서는 OverlayView를 사용하여 간단한 이미지 오버레이를 만듭니다.

이제 USGSOverlay 클래스의 생성자를 만들고 전달된 매개변수를 새 객체의 속성으로 초기화합니다.

TypeScript
/**
* The custom USGSOverlay object contains the USGS image,
* the bounds of the image, and a reference to the map.
*/
class USGSOverlay extends google.maps.OverlayView {
private bounds: google.maps.LatLngBounds;
private image: string;
private div?: HTMLElement;

constructor(bounds: google.maps.LatLngBounds, image: string) {
super();

this.bounds = bounds;
this.image = image;

/**
* The custom USGSOverlay object contains the USGS image,
* the bounds of the image, and a reference to the map.
*/
class USGSOverlay extends google.maps.OverlayView {
bounds;
image;
div;
constructor(bounds, image) {
super();
this.bounds = bounds;
this.image = image;
overlayLayer에는 다중선, 다각형, 지면 오버레이, 타일 레이어 오버레이가 포함되며, DOM 이벤트를 수신하지 않을 수도 있습니다. (창 1)
markerLayer에는 마커가 포함되며, DOM 이벤트를 수신하지 않을 수도 있습니다. (창 2)
overlayMouseTarget에는 DOM 이벤트를 수신하는 요소가 포함됩니다(창 3).
floatPane에는 정보 창이 포함되며 모든 지도 오버레이 위에 위치합니다. (창 4)

이미지는 '지면 오버레이'이므로 overlayLayer 창이 사용됩니다. 이 창이 있으면 객체를 창에 하위 요소로 연결합니다.

TypeScript
/**
* onAdd is called when the map's panes are ready and the overlay has been
* added to the map.
*/
onAdd() {
this.div = document.createElement("div");
this.div.style.borderStyle = "none";
this.div.style.borderWidth = "0px";
this.div.style.position = "absolute";

img.style.width = "100%";
img.style.height = "100%";
img.style.position = "absolute";
this.div.appendChild(img);

/**
* onAdd is called when the map's panes are ready and the overlay has been
* added to the map.
*/
onAdd() {
this.div = document.createElement("div");
this.div.style.borderStyle = "none";
this.div.style.borderWidth = "0px";
this.div.style.position = "absolute";

img.style.width = "100%";
img.style.height = "100%";
img.style.position = "absolute";
this.div.appendChild(img);

draw() {
)!;
)!;

this.div.style.top = ne.y + "px";
this.div.style.width = ne.x - sw.x + "px";
this.div.style.height = sw.y - ne.y + "px";

draw() {

this.div.style.top = ne.y + "px";
this.div.style.width = ne.x - sw.x + "px";
this.div.style.height = sw.y - ne.y + "px";

TypeScript
/**
* The onRemove() method will be called automatically from the API if
* we ever set the overlay's map property to 'null'.
*/
onRemove() {
if (this.div) {
(this.div.parentNode as HTMLElement).removeChild(this.div);
delete this.div;

/**
* The onRemove() method will be called automatically from the API if
* we ever set the overlay's map property to 'null'.
*/
onRemove() {
if (this.div) {
this.div.parentNode.removeChild(this.div);
delete this.div;
/**
*  Set the visibility to 'hidden' or 'visible'.
*/
hide() {
if (this.div) {
this.div.style.visibility = "hidden";

/**
*  Set the visibility to 'hidden' or 'visible'.
*/
hide() {
if (this.div) {
this.div.style.visibility = "hidden";

TypeScript
toggleButton.classList.add("custom-map-control-button");

toggleDOMButton.classList.add("custom-map-control-button");

toggleButton.addEventListener("click", () => {
overlay.toggle();
map.controls[google.maps.ControlPosition.TOP_RIGHT].push(toggleButton);index.ts [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/samples/overlay-hideshow/index.ts#L163-L182]

참고: TypeScript 및 Google 지도 사용에 관한 가이드 [https://developers.google.com/maps/documentation/javascript/using-typescript?hl=ko]를 읽어 보세요.

JavaScript

toggleButton.classList.add("custom-map-control-button");

toggleDOMButton.classList.add("custom-map-control-button");
toggleButton.addEventListener("click", () => {
overlay.toggle();
map.controls[google.maps.ControlPosition.TOP_RIGHT].push(toggleButton);index.js [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/overlay-hideshow/docs/index.js#L142-L158]

전체 샘플 코드

다음은 전체 샘플 코드입니다.

TypeScript

new google.maps.LatLng(62.400471, -150.005608)

/**
* The custom USGSOverlay object contains the USGS image,
* the bounds of the image, and a reference to the map.
*/
class USGSOverlay extends google.maps.OverlayView {
private bounds: google.maps.LatLngBounds;
private image: string;
private div?: HTMLElement;

constructor(bounds: google.maps.LatLngBounds, image: string) {
super();

this.bounds = bounds;
this.image = image;
this.div.style.borderStyle = "none";
this.div.style.borderWidth = "0px";
this.div.style.position = "absolute";

img.style.width = "100%";
img.style.height = "100%";
img.style.position = "absolute";
this.div.appendChild(img);

)!;
)!;

this.div.style.top = ne.y + "px";
this.div.style.width = ne.x - sw.x + "px";
this.div.style.height = sw.y - ne.y + "px";
delete this.div;

toggleButton.classList.add("custom-map-control-button");

toggleDOMButton.classList.add("custom-map-control-button");

toggleButton.addEventListener("click", () => {
overlay.toggle();
map.controls[google.maps.ControlPosition.TOP_RIGHT].push(toggleButton);
new google.maps.LatLng(62.400471, -150.005608),
/**
* The custom USGSOverlay object contains the USGS image,
* the bounds of the image, and a reference to the map.
*/
class USGSOverlay extends google.maps.OverlayView {
bounds;
image;
div;
constructor(bounds, image) {
super();
this.bounds = bounds;
this.image = image;
this.div.style.borderStyle = "none";
this.div.style.borderWidth = "0px";
this.div.style.position = "absolute";

img.style.width = "100%";
img.style.height = "100%";
img.style.position = "absolute";
this.div.appendChild(img);

this.div.style.top = ne.y + "px";
this.div.style.width = ne.x - sw.x + "px";
this.div.style.height = sw.y - ne.y + "px";
delete this.div;

toggleButton.classList.add("custom-map-control-button");

toggleDOMButton.classList.add("custom-map-control-button");
toggleButton.addEventListener("click", () => {
overlay.toggle();
map.controls[google.maps.ControlPosition.TOP_RIGHT].push(toggleButton);
/*
* Always set the map height explicitly to define the size of the div element
* that contains the map.
*/
body {
<html>
<head>
<title>Showing/Hiding Overlays</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<div id="map"></div>

<!--
The `defer` attribute causes the script to execute after the full HTML
document has been parsed. For non-blocking uses, avoiding race conditions,
and consistent behavior across browsers, consider loading using Promises. See
https://developers.google.com/maps/documentation/javascript/load-maps-js-api
for more information.
-->
<script
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap&v=weekly"
defer
></script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/overlay-hideshow/docs/index.html#L8-L30]

샘플 사용해 보기

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/overlay-hideshow/jsfiddle]

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-overlay-hideshow&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]

의견 보내기