Source URL: https://developers.google.com/maps/architecture/high-volume-address-validation?hl=ko
Title: Address Validation API를 사용하여 대량의 주소 처리

의견 보내기

Address Validation API를 사용하여 대량의 주소 처리

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

목표

개발자는 품질이 좋지 않을 수 있는 고객 주소가 포함된 데이터 세트를 사용하는 경우가 많습니다. 고객 ID 확인부터 배송 등에 이르기까지 다양한 사용 사례에 대해 주소가 올바른지 확인해야 합니다.

Address Validation API [https://developers.google.com/maps/documentation/address-validation?hl=ko]는 주소의 유효성을 검사하는 데 사용할 수 있는 Google Maps Platform의 제품입니다. 하지만 한 번에 하나의 주소만 처리합니다. 이 문서에서는 API 테스트부터 일회성 및 반복 주소 확인까지 다양한 시나리오에서 대량 주소 확인을 사용하는 방법을 살펴봅니다.

사용 사례

이제 대량 주소 유효성 검사가 유용한 사용 사례를 알아보겠습니다.

테스트

수천 개의 주소를 실행하여 Address Validation API를 테스트하는 경우가 많습니다. 쉼표로 구분된 값 파일에 주소가 있으며 주소의 품질을 검증하고 싶을 수 있습니다.

주소 일회성 검증

Address Validation API 온보딩 중에 기존 주소 데이터베이스를 사용자 데이터베이스와 비교하여 검증하려고 합니다.

주소의 반복 검증

다음과 같은 여러 시나리오에서 주소를 반복적으로 검증해야 합니다.

예를 들어 고객 가입, 주문 세부정보, 배송 일정 등 하루 동안 수집된 세부정보의 주소를 확인하는 작업을 예약했을 수 있습니다.
영업팀부터 마케팅팀까지 다양한 부서의 주소가 포함된 데이터 덤프를 받을 수 있습니다. 주소를 수신하는 새 부서에서는 사용하기 전에 주소의 유효성을 검사하는 경우가 많습니다.
설문조사나 다양한 프로모션 중에 주소를 수집한 후 나중에 온라인 시스템에서 업데이트할 수 있습니다. 시스템에 주소를 입력할 때 주소가 올바른지 확인하고 싶습니다.

기술 심층 정보

이 문서에서는 다음을 가정합니다.

고객 데이터베이스 (예: 고객 세부정보가 포함된 데이터베이스)의 주소로 Address Validation API를 호출하는 경우
데이터베이스의 개별 주소에 대해 유효성 플래그를 캐시할 수 있습니다.
개별 고객이 로그인하면 유효성 플래그가 Address Validation API에서 가져옵니다.

지금 사용해 보기: Google Cloud 콘솔로 이동하여 Address Validation API [https://console.cloud.google.com/marketplace/product/google/addressvalidation.googleapis.com?utm_source=architecture_high_volume&hl=ko]를 사용 설정합니다.

프로덕션용 캐시
참고: 다음 섹션에 설명된 특정 응답 요소는 최대 30일 연속으로 저장할 수 있습니다. 이러한 모든 응답 요소는 30일이 지난 후 삭제해야 합니다(MUST).
Address Validation API를 사용할 때는 API 호출에서 반환된 응답의 일부를 캐시하는 것이 좋습니다. Google의 서비스 약관 [https://cloud.google.com/maps-platform/terms/maps-service-terms?hl=ko]에 따라 캐시할 수 있는 데이터가 제한되지만 주소 유효성 검사 API에서 캐시할 수 있는 데이터는 사용자 계정에 대해 캐시해야 합니다. 즉, 데이터베이스에서 주소 또는 주소 메타데이터가 사용자의 이메일 주소 또는 기타 기본 ID에 대해 캐시되어야 합니다.

대량 주소 검증 사용 사례의 경우 데이터 캐싱은 섹션 11.3에 설명된 Address Validation API 서비스별 약관 [https://cloud.google.com/maps-platform/terms/maps-service-terms?hl=ko]을 따라야 합니다. 이 정보를 바탕으로 사용자의 주소가 유효하지 않은지 확인할 수 있으며, 이 경우 사용자가 애플리케이션과 다음 번에 상호작용할 때 수정된 주소를 묻는 메시지가 표시됩니다.

AddressComponent [https://developers.google.com/maps/documentation/address-validation/reference/rest/v1/TopLevel/validateAddress?hl=ko#addresscomponent] 객체의 데이터

confirmationLevel
inferred
spellCorrected
replaced
unexpected

실제 주소에 관한 정보를 캐시하려면 사용자 동의가 있어야만 해당 데이터를 캐시할 수 있습니다. 이렇게 하면 사용자가 특정 서비스에서 주소를 저장하는 이유를 잘 알고 주소 공유 약관에 동의하게 됩니다.

사용자 동의의 예로는 결제 페이지에서 전자상거래 주소 양식과 직접 상호작용하는 것이 있습니다. 패키지 배송 목적으로 주소를 캐시하고 처리할 것으로 이해됩니다.

사용자의 동의를 얻어 응답에서 formattedAddress 및 기타 주요 구성요소를 캐시할 수 있습니다. 하지만 헤드리스 시나리오에서는 주소 유효성 검사가 백엔드에서 이루어지므로 사용자가 동의를 제공할 수 없습니다. 따라서 이 헤드리스 시나리오에서는 매우 제한된 정보만 캐시할 수 있습니다.

응답 이해
참고: 응답을 해석하는 방법을 설명하는 유효성 검사 로직 빌드 [https://developers.google.com/maps/documentation/address-validation/build-validation-logic?hl=ko]라는 유용한 가이드도 있습니다.
주소 유효성 검사 API 응답에 다음 마커가 포함되어 있으면 입력한 주소가 배송 가능한 품질임을 확신할 수 있습니다.

Verdict [https://developers.google.com/maps/documentation/address-validation/reference/rest/v1/TopLevel/validateAddress?hl=ko#verdict] 객체의 addressComplete 마커가 true입니다.
Verdict [https://developers.google.com/maps/documentation/address-validation/reference/rest/v1/TopLevel/validateAddress?hl=ko#verdict] 객체의 validationGranularity가 PREMISE 또는 SUB_PREMISE입니다.
AddressComponent [https://developers.google.com/documentation/address-validation/reference/rest/v1/TopLevel/validateAddress?hl=ko#addresscomponent] 중 다음으로 표시된 항목이 없습니다.

Inferred(: inferred=true는 addressComplete=true인 경우 발생할 수 있음)
spellCorrected
replaced
unexpected 및

confirmationLevel [https://developers.google.com/maps/documentation/address-validation/reference/rest/v1/TopLevel/validateAddress?hl=ko#confirmationlevel]:
AddressComponent [https://developers.google.com/maps/documentation/address-validation/reference/rest/v1/TopLevel/validateAddress?hl=ko#addresscomponent]의 확인 수준이 CONFIRMED 또는 UNCONFIRMED_BUT_PLAUSIBLE로 설정됩니다.

API 응답에 위의 마커가 포함되지 않으면 입력 주소의 품질이 좋지 않을 수 있으며, 이를 반영하기 위해 데이터베이스에 플래그를 캐시할 수 있습니다. 캐시된 플래그는 주소 전체의 품질이 좋지 않음을 나타내고, 맞춤법 수정과 같은 더 자세한 플래그는 구체적인 주소 품질 문제를 나타냅니다. 품질이 낮은 것으로 표시된 주소로 다음 고객과 상호작용할 때 기존 주소로 Address Validation API를 호출할 수 있습니다. Address Validation API는 수정된 주소를 반환하며, 이 주소는 UI 프롬프트를 사용하여 표시할 수 있습니다. 고객이 형식이 지정된 주소를 수락하면 응답에서 다음을 캐시할 수 있습니다.

formattedAddress
postalAddress
addressComponent componentNames또는
UspsData standardizedAddress

헤드리스 주소 유효성 검사 구현
참고: 헤드리스란 무엇인가요? 서버 측 또는 명령줄 실행 스크립트와 같이 그래픽 사용자 인터페이스 없이 기기에서 작동할 수 있는 소프트웨어입니다.
이 용어는 소프트웨어가 GUI 없이 사용되는 경우를 설명하는 데 사용됩니다.
위의 논의를 바탕으로 다음을 수행합니다.

비즈니스상의 이유로 주소 유효성 검사 API의 응답 일부를 캐시해야 하는 경우가 많습니다.
하지만 Google Maps Platform의 서비스 약관 [https://cloud.google.com/maps-platform/terms/maps-service-terms?hl=ko]에 따라 캐시할 수 있는 데이터가 제한됩니다.

다음 섹션에서는 서비스 약관을 준수하고 대량 주소 유효성 검사를 구현하는 2단계 프로세스를 설명합니다.

1단계:

첫 번째 단계에서는 기존 데이터 파이프라인에서 대량 주소 유효성 검사 스크립트를 구현하는 방법을 살펴봅니다. 이 프로세스를 통해 서비스 약관을 준수하는 방식으로 Address Validation API 응답의 특정 필드를 저장할 수 있습니다.

다이어그램 A: 다음 다이어그램은 대량 주소 유효성 검사 로직으로 데이터 파이프라인을 개선하는 방법을 보여줍니다.

서비스 약관에 따라 addressComponent에서 다음 데이터를 캐시할 수 있습니다.

confirmationLevel
inferred
spellCorrected
replaced
unexpected

따라서 구현의 이 단계에서는 위에서 언급한 필드를 UserID에 대해 캐시합니다.

자세한 내용은 실제 데이터 구조 [https://developers.google.com/maps/documentation/address-validation/reference/rest/v1/TopLevel/validateAddress?hl=ko]를 참고하세요.

2단계:

1단계에서 입력 데이터 세트의 일부 주소가 품질이 높지 않을 수 있다는 의견이 수집되었습니다. 다음 단계에서는 신고된 주소를 가져와 사용자에게 표시하고 저장된 주소를 수정하는 데 동의를 구합니다.

다이어그램 B: 이 다이어그램은 사용자 동의 흐름의 엔드 투 엔드 통합이 어떻게 표시될 수 있는지를 보여줍니다.

사용자가 로그인하면 먼저 시스템에 캐시된 유효성 검사 플래그가 있는지 확인합니다.
플래그가 있는 경우 사용자에게 주소를 수정하고 업데이트할 수 있는 UI를 표시해야 합니다.
업데이트되거나 캐시된 주소로 Address Validation API를 다시 호출하고 수정된 주소를 사용자에게 표시하여 확인할 수 있습니다.
주소의 품질이 양호하면 Address Validation API가 formattedAddress를 반환합니다.
수정이 이루어진 경우 해당 주소를 사용자에게 표시하거나 수정이 없는 경우 자동으로 수락할 수 있습니다.
사용자가 수락하면 데이터베이스에 formattedAddress를 캐시할 수 있습니다.

참고: 이 워크플로가 완료되면 캐시된 validationFlags가 삭제되어야 합니다.
결론

대량 주소 유효성 검사는 많은 애플리케이션에서 발생할 수 있는 일반적인 사용 사례입니다. 이 문서에서는 Google Maps Platform 서비스 약관을 준수하는 솔루션을 구현하는 방법에 관한 몇 가지 시나리오와 설계 패턴을 보여줍니다.

또한 Google에서는 GitHub에 대량 주소 유효성 검사의 참조 구현을 오픈소스 라이브러리로 작성했습니다. 이를 확인하여 대량 주소 유효성 검사를 빠르게 빌드해 보세요. 다양한 시나리오에서 라이브러리를 사용하는 방법의 디자인 패턴에 관한 도움말도 참고하세요.

다음 단계

신뢰할 수 있는 주소로 결제, 배송, 운영 개선 [https://mapsplatform.withgoogle.com/address-validation-whitepaper/home.html?utm_source=architecture&utm_medium=website&utm_campaign=FY23-Q1-global-Maps-website-dl-GMP-AV-Whitepaper&utm_content=av_whitepaper] 백서를 다운로드하고 주소 확인으로 결제, 배송, 운영 개선 [https://mapsonair.withgoogle.com/events/improving-checkout-operations-with-address-validation-webinar?utm_source=architecture&utm_medium=website&utm_campaign=FY23-Q1-global-Maps-onlineevent-er-GMP-Improving-Ops-with-Address-Validation&utm_content=january_webinar] 웨비나를 시청하세요.

추천 추가 자료:

대량 주소 확인의 적용 [https://developers.google.com/maps/architecture/design-patterns-high-volume-address-validation?hl=ko]
GitHub의 Python 라이브러리 [https://github.com/googlemaps/python-high-volume-address-validation-library/]
Address Validation의 데모 [https://developers.google.com/maps/documentation/address-validation/demo?hl=ko] 살펴보기

참여자

Google에서 이 도움말을 유지관리합니다. 다음 참여자가 원래 작성했습니다.
주요 저자:

헨리크 밸브 [https://www.linkedin.com/in/henrikvalve/] | 솔루션 엔지니어
토마스 앙글라레 [https://www.linkedin.com/in/thomas-anglaret/] | 솔루션 엔지니어
사르탁 강굴리 [https://www.linkedin.com/in/sarthakganguly/] | 솔루션 엔지니어

의견 보내기