Source URL: https://developers.google.com/maps/documentation/javascript/shapes?hl=ko
Title: 도형 및 선

의견 보내기

도형 및 선

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/android-sdk/shapes?hl=ko]

iOS [https://developers.google.com/maps/documentation/ios-sdk/shapes?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko]

지도에 다양한 도형을 추가할 수 있습니다. 도형은 위도/경도 좌표와 연결된 지도 위의 객체입니다. 선 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#polylines], 다각형 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#polygons], 원 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#circles], 직사각형 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#rectangles] 등의 도형을 사용할 수 있습니다.
사용자가 수정하거나 드래그 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#user-editable]할 수 있도록 도형을 구성할 수도 있습니다.

다중선

지도에 선을 그리려면 다중선을 사용하세요. Polyline [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#Polyline] 클래스는 지도에서 연결된 선분의 선형 오버레이를 정의합니다. Polyline 객체는 일련의 LatLng 위치로 구성되며 그러한 위치를 순서대로 연결하는 일련의 선분을 생성합니다.

다중선 추가

Polyline 생성자는 선의 LatLng 좌표를 지정하는 PolylineOptions의 집합과 스타일의 집합을 가져와 다중선의 시각적인 동작을 조정합니다.

Polyline 객체는 지도에 일련의 직선 선분으로 그려집니다. 선을 생성할 때 PolylineOptions 내에서 선 획의 맞춤 색상, 두께 및 불투명도를 지정하거나 생성 후 이러한 속성을 변경할 수 있습니다.
다중선에는 다음과 같은 획 스타일을 사용할 수 있습니다.

strokeColor는 "#FFFFFF" 형식의 16진수 HTML 색상을 지정합니다. Polyline 클래스는 이름이 지정된 색상을 지원하지 않습니다.
strokeOpacity는 0.0과 1.0 사이의 숫자 값을 사용하여 선 색상의 불투명도를 지정합니다. 기본값은 1.0입니다.
strokeWeight는 선의 너비를 픽셀 단위로 지정합니다.

다중선의 editable 속성은 사용자가 도형을 수정할 수 있는지를 결정합니다. 아래의 사용자가 수정할 수 있는 도형 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#user-editable]을 참고하세요. 사용자가 선을 드래그 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#draggable]할 수 있도록 draggable 속성을 설정할 수도 있습니다.

TypeScript

위의 메서드는 다중선을 삭제하지 않으며 지도에서 다중선을 제거할 뿐입니다. 다중선을 삭제하려면 지도에서 제거한 다음 다중선 자체를 null로 설정해야 합니다.

다중선 검사

다중선은 일련의 좌표를 LatLng 객체의 배열로 지정합니다. 이러한 좌표가 선의 경로를 결정합니다.
좌표를 가져오려면 MVCArray 유형의 배열을 반환하는 getPath()를 호출하세요. 다음 작업을 통해 배열을 조작하고 검사할 수 있습니다.

getAt()은 0에서 시작하는 지정된 색인 값에서 LatLng를 반환합니다.
insertAt()은 0에서 시작하는 지정된 색인 값에 전달된 LatLng를 삽입합니다. 해당 색인 값의 기존 좌표는 앞으로 이동합니다.
removeAt()은 0에서 시작하는 지정된 색인 값에서 LatLng를 제거합니다.
참고: mvcArray[i] 문법을 사용하여 배열의 i번째 요소를 가져올 수 없습니다. mvcArray.getAt(i)을 사용해야 합니다.

TypeScript

Polygon 객체로 다음과 같이 복잡한 도형을 표시할 수 있습니다.

단일 다각형으로 정의된 인접하지 않은 여러 영역
구멍이 있는 영역
영역 하나 이상의 교차 영역

복잡한 도형을 정의하려면 여러 경로가 포함된 다각형을 사용하세요.

참고: 데이터 영역을 사용하면 간단하게 다각형을 그릴 수 있습니다. 데이터 영역에서 다각형 와인딩을 처리하므로 구멍이 있는 다각형을 쉽게 그릴 수 있습니다. 데이터 영역 문서 [https://developers.google.com/maps/documentation/javascript/datalayer?hl=ko#polygon]를 참고하세요.

다각형 추가

다각형 영역에 여러 개의 개별 경로가 포함될 수 있으므로 Polygon 객체의 paths 속성은 각각 MVCArray 유형인 배열의 배열을 지정합니다. 각 배열은 순서가 지정된 LatLng 좌표의 개별 시퀀스를 정의합니다.

하나의 경로로만 구성된 간단한 다각형의 경우 LatLng 좌표의 단일 배열을 사용하여 Polygon을 생성할 수 있습니다. Maps JavaScript API는 간단한 배열이 paths 속성 내에 저장되는 경우 생성되는 즉시 배열의 배열로 변환합니다. API는 하나의 경로로 구성된 다각형에 간단한 getPath() 메서드를 제공합니다.

참고: 이 방법으로 간단한 다각형을 생성해도 여전히 경로를 MVCArray로 조작하여 다각형에서 값을 가져와야 합니다.

다각형의 editable 속성은 사용자가 도형을 수정할 수 있는지를 결정합니다. 아래의 사용자가 수정할 수 있는 도형 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#user-editable]을 참고하세요.
사용자가 도형을 드래그 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#draggable]할 수 있도록 draggable 속성을 설정할 수도 있습니다.

TypeScript

위의 메서드는 다각형을 삭제하지 않으며 지도에서 다각형을 제거합니다. 다각형을 삭제하려면 지도에서 제거한 다음 다각형 자체를 null로 설정해야 합니다.

다각형 제거는 다중선 제거와 유사합니다. 실제로 작동하는 다중선에 관한 코드를 보려면 예를 참고 [https://developers.google.com/maps/documentation/javascript/examples/polyline-remove?hl=ko]하세요.

다각형 검사

다각형은 일련의 좌표를 각각 MVCArray 유형인 배열의 배열로 지정합니다. 각 '리프' 배열은 단일 경로를 지정하는 LatLng 좌표의 배열입니다. 이 좌표를 가져오려면 Polygon 객체의 getPaths() 메서드를 호출하세요. 배열은 MVCArray이므로 다음 작업을 통해 배열을 처리하고 검사해야 합니다.

getAt()은 0에서 시작하는 지정된 색인 값에서 LatLng를 반환합니다.
insertAt()은 0에서 시작하는 지정된 색인 값에 전달된 LatLng를 삽입합니다. 해당 색인 값의 기존 좌표는 앞으로 이동합니다.
removeAt()은 0에서 시작하는 지정된 색인 값에서 LatLng를 제거합니다.
참고: mvcArray[i] 문법을 사용하여 배열의 i번째 요소를 가져올 수 없습니다. mvcArray.getAt(i)을 사용해야 합니다.

TypeScript

infoWindow = new google.maps.InfoWindow();
"," +
event.latLng.lng() +
"<br>";

"<br>" + "Coordinate " + i + ":<br>" + xy.lat() + "," + xy.lng();
infoWindow.setPosition(event.latLng);

infoWindow.open(map);
infoWindow = new google.maps.InfoWindow();
"," +
event.latLng.lng() +
"<br>";

"<br>" + "Coordinate " + i + ":<br>" + xy.lat() + "," + xy.lng();
infoWindow.setPosition(event.latLng);
infoWindow.open(map);

Rectangle은 직사각형 가장자리(획)의 맞춤 색상, 두께, 불투명도와 직사각형 내부 영역(채우기)의 맞춤 색상 및 불투명도를 정의할 수 있다는 점에서 Polygon과 유사합니다. 색상은 16진수 HTML 형식으로 표시해야 합니다.

Polygon과 달리 Rectangle의 paths는 정의하지 않습니다. 대신 직사각형에는 직사각형의 google.maps.LatLngBounds [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#LatLngBounds]를 지정하여 모양을 정의하는 bounds 속성이 있습니다.

직사각형의 editable 속성은 사용자가 도형을 수정할 수 있는지를 결정합니다. 아래의 사용자가 수정할 수 있는 도형 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#user-editable]을 참고하세요. 사용자가 직사각형을 드래그 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#draggable]할 수 있도록 draggable 속성을 설정할 수도 있습니다.

TypeScript

bounds: {
north: 33.685,
south: 33.671,
east: -116.234,
west: -116.251,
bounds: {
north: 33.685,
south: 33.671,
east: -116.234,
west: -116.251,

bounds: map.getBounds() as google.maps.LatLngBounds,
bounds: map.getBounds(),

위의 메서드는 직사각형을 삭제하지 않으며 지도에서 직사각형을 제거할 뿐입니다. 직사각형을 삭제하려면 지도에서 제거한 다음 직사각형 자체를 null로 설정해야 합니다.

직사각형 제거는 다중선 제거와 유사합니다. 실제로 작동하는 다중선에 관한 코드를 보려면 예를 참고 [https://developers.google.com/maps/documentation/javascript/examples/polyline-remove?hl=ko]하세요.

원

Google Maps JavaScript API에는 일반 Polygon 클래스 외에 Circle [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#Circle] 객체의 생성을 단순화하기 위한 특정 클래스가 포함되어 있습니다.

원 추가

Circle은 원 가장자리(획)의 맞춤 색상, 두께, 불투명도와 원 내부 영역(채우기)의 맞춤 색상 및 불투명도를 정의할 수 있다는 점에서 Polygon과 유사합니다. 색상은 16진수 HTML 형식으로 표시해야 합니다.

Polygon과 달리 Circle의 paths는 정의하지 않습니다. 대신 원에는 원의 모양을 정의하는 두 가지 추가 속성이 있습니다.

center는 원 중심의 google.maps.LatLng를 지정합니다.
radius는 원의 반지름을 미터 단위로 지정합니다.

원의 editable 속성은 사용자가 도형을 수정할 수 있는지를 지정합니다. 아래의 사용자가 수정할 수 있는 도형 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#user-editable]을 참고하세요.
사용자가 원을 드래그 [https://developers.google.com/maps/documentation/javascript/shapes?hl=ko#draggable]할 수 있도록 draggable 속성을 설정할 수도 있습니다.

TypeScript

center: citymap[city].center,
radius: Math.sqrt(citymap[city].population) * 100,
center: citymap[city].center,
radius: Math.sqrt(citymap[city].population) * 100,

위의 메서드는 원을 삭제하지 않으며 지도에서 원을 제거합니다. 원을 삭제하려면 지도에서 제거한 다음 원 자체를 null로 설정해야 합니다.

원 제거는 다중선 제거와 유사합니다. 실제로 작동하는 다중선에 관한 코드를 보려면 예를 참고 [https://developers.google.com/maps/documentation/javascript/examples/polyline-remove?hl=ko]하세요.

사용자가 수정하고 드래그할 수 있는 도형

도형을 수정 가능하도록 만들면 도형에 핸들이 추가되며, 이 핸들을 사용하면 지도에서 직접 도형의 위치와 형태, 크기를 변경할 수 있습니다. 사용자가 도형을 지도의 다른 장소로 이동할 수 있도록 드래그 가능하도록 만들 수도 있습니다.

사용자가 객체에 적용한 변경사항은 세션 간에 유지되지 않습니다. 사용자가 수정한 사항을 저장하려면 직접 정보를 캡처하고 저장해야 합니다.

도형을 수정 가능하도록 만들기

모든 도형(다중선, 다각형, 원 및 직사각형)은 도형의 옵션에서 editable을 true로 설정하여 사용자가 수정 가능하도록 설정할 수 있습니다.