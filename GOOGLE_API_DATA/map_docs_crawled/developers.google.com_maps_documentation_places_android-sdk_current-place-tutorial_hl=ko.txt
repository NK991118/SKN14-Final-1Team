Source URL: https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko
Title: 지도에서 현재 장소 선택 및 세부정보 표시하기
bookmark_border

의견 보내기

지도에서 현재 장소 선택 및 세부정보 표시하기

bookmark_borderbookmark

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 페이지의 내용코드 가져오기 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#get-the-code]개발 프로젝트 설정 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#set-up-your-development-project]필요한 API 사용 설정 및 API 키 가져오기 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#api-key]앱에 API 키 추가 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#add-the-api-key-to-your-app]앱 빌드 및 실행 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#build-and-run-your-app]코드 이해하기 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#understand-the-code]Places API 클라이언트 인스턴스화 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#connect-client]위치 정보 액세스 권한 요청 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#location-permission]지도 추가 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#add-a-map]Android 기기의 위치 가져오기 및 지도 위치 지정 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#get-the-location-of-the-android-device-and-position-the-map]현재 장소 가져오기 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#get-the-current-place]지도의 상태 저장 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#save-the-maps-state]

Android 기기의 현재 위치를 찾고 해당 위치에 있는 장소(비즈니스 또는 기타 관심 장소)의 세부정보를 표시하는 방법을 알아보세요. Android용 Maps SDK [https://developers.google.com/maps/documentation/android-sdk?hl=ko], Android용 Places SDK [https://developers.google.com/maps/documentation/places/android-sdk?hl=ko], Google Play 서비스 위치 API의 통합 위치 정보 제공자 [https://developers.google.com/android/reference/com/google/android/gms/location/FusedLocationProviderApi?hl=ko]를 사용하여 Android 앱을 빌드하려면 이 튜토리얼을 따르세요.참고: 이 튜토리얼의 내용을 따르려면 Google Play 서비스 11.2.0 이상이 필요합니다.코드 가져오기

GitHub에서 Google Maps Android API v2 샘플 저장소를 클론하거나 다운로드 [https://github.com/googlemaps-samples/android-samples]하세요.

활동의 자바 버전을 확인하세요.

코드 표시/숨기기

import android.content.DialogInterface;
import android.content.pm.PackageManager;
import android.location.Location;
import android.os.Bundle;

import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.FrameLayout;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

import com.google.android.gms.location.FusedLocationProviderClient;
import com.google.android.gms.location.LocationServices;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.CameraPosition;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;

import com.google.android.libraries.places.api.Places;
import com.google.android.libraries.places.api.model.Place;
import com.google.android.libraries.places.api.model.PlaceLikelihood;
import com.google.android.libraries.places.api.net.FindCurrentPlaceRequest;
import com.google.android.libraries.places.api.net.FindCurrentPlaceResponse;
import com.google.android.libraries.places.api.net.PlacesClient;

import java.util.Arrays;
import java.util.List;

/**
* An activity that displays a map showing the place at the device's current location.
*/
public class MapsActivityCurrentPlace extends AppCompatActivity
implements OnMapReadyCallback {

private static final String TAG = MapsActivityCurrentPlace.class.getSimpleName();
private GoogleMap map;
private CameraPosition cameraPosition;

private static final int DEFAULT_ZOOM = 15;
private static final int PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION = 1;
private boolean locationPermissionGranted;

private static final String KEY_LOCATION = "location";

private String[] likelyPlaceNames;
private String[] likelyPlaceAddresses;
private List[] likelyPlaceAttributions;
private LatLng[] likelyPlaceLatLngs;

@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);

cameraPosition = savedInstanceState.getParcelable(KEY_CAMERA_POSITION);

Places.initialize(getApplicationContext(), BuildConfig.PLACES_API_KEY);
placesClient = Places.createClient(this);

SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
.findFragmentById(R.id.map);
mapFragment.getMapAsync(this);
outState.putParcelable(KEY_LOCATION, lastKnownLocation);
return true;

View infoWindow = getLayoutInflater().inflate(R.layout.custom_info_contents,
(FrameLayout) findViewById(R.id.map), false);

TextView title = infoWindow.findViewById(R.id.title);
title.setText(marker.getTitle());

TextView snippet = infoWindow.findViewById(R.id.snippet);
snippet.setText(marker.getSnippet());

return infoWindow;

Task<Location> locationResult = fusedLocationProviderClient.getLastLocation();
locationResult.addOnCompleteListener(this, new OnCompleteListener<Location>() {
@Override
public void onComplete(@NonNull Task<Location> task) {
if (task.isSuccessful()) {
if (lastKnownLocation != null) {
map.moveCamera(CameraUpdateFactory.newLatLngZoom(
new LatLng(lastKnownLocation.getLatitude(),
lastKnownLocation.getLongitude()), DEFAULT_ZOOM));
Log.d(TAG, "Current location is null. Using defaults.");
Log.e(TAG, "Exception: %s", task.getException());
map.moveCamera(CameraUpdateFactory
.newLatLngZoom(defaultLocation, DEFAULT_ZOOM));
map.getUiSettings().setMyLocationButtonEnabled(false);
Log.e("Exception: %s", e.getMessage(), e);
android.Manifest.permission.ACCESS_FINE_LOCATION)
== PackageManager.PERMISSION_GRANTED) {
locationPermissionGranted = true;
ActivityCompat.requestPermissions(this,
new String[]{android.Manifest.permission.ACCESS_FINE_LOCATION},
PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION);
@NonNull String[] permissions,
@NonNull int[] grantResults) {
locationPermissionGranted = false;
if (requestCode
== PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION) {// If request is cancelled, the result arrays are empty.
if (grantResults.length > 0
&& grantResults[0] == PackageManager.PERMISSION_GRANTED) {
locationPermissionGranted = true;
List<Place.Field> placeFields = Arrays.asList(Place.Field.NAME, Place.Field.ADDRESS,
Place.Field.LAT_LNG);

FindCurrentPlaceRequest request =
FindCurrentPlaceRequest.newInstance(placeFields);

Task<FindCurrentPlaceResponse> placeResult =
placesClient.findCurrentPlace(request);
placeResult.addOnCompleteListener (new OnCompleteListener<FindCurrentPlaceResponse>() {
@Override
public void onComplete(@NonNull Task<FindCurrentPlaceResponse> task) {
if (task.isSuccessful() && task.getResult() != null) {
FindCurrentPlaceResponse likelyPlaces = task.getResult();

if (likelyPlaces.getPlaceLikelihoods().size() < M_MAX_ENTRIES) {
count = likelyPlaces.getPlaceLikelihoods().size();
likelyPlaceNames = new String[count];
likelyPlaceAddresses = new String[count];
likelyPlaceAttributions = new List[count];
likelyPlaceLatLngs = new LatLng[count];

for (PlaceLikelihood placeLikelihood : likelyPlaces.getPlaceLikelihoods()) {
likelyPlaceAddresses[i] = placeLikelihood.getPlace().getAddress();
likelyPlaceAttributions[i] = placeLikelihood.getPlace()
.getAttributions();
likelyPlaceLatLngs[i] = placeLikelihood.getPlace().getLatLng();

i++;
if (i > (count - 1)) {
break;
MapsActivityCurrentPlace.this.openPlacesDialog();
Log.e(TAG, "Exception: %s", task.getException());
Log.i(TAG, "The user did not grant location permission.");

.title(getString(R.string.default_info_title))
.position(defaultLocation)
.snippet(getString(R.string.default_info_snippet)));

LatLng markerLatLng = likelyPlaceLatLngs[which];
String markerSnippet = likelyPlaceAddresses[which];
if (likelyPlaceAttributions[which] != null) {
markerSnippet = markerSnippet + "\n" + likelyPlaceAttributions[which];
.title(likelyPlaceNames[which])
.position(markerLatLng)
.snippet(markerSnippet));

DEFAULT_ZOOM));
AlertDialog dialog = new AlertDialog.Builder(this)
.setTitle(R.string.pick_place)
.setItems(likelyPlaceNames, listener)
.show();
map.getUiSettings().setMyLocationButtonEnabled(true);
map.getUiSettings().setMyLocationButtonEnabled(false);
lastKnownLocation = null;
Log.e("Exception: %s", e.getMessage());

import android.Manifest
import android.annotation.SuppressLint
import android.content.DialogInterface
import android.content.pm.PackageManager
import android.location.Location
import android.os.Bundle
import android.util.Log
import android.view.Menu
import android.view.MenuItem
import android.view.View
import android.widget.FrameLayout
import android.widget.TextView
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import com.google.android.gms.location.FusedLocationProviderClient
import com.google.android.gms.location.LocationServices
import com.google.android.gms.maps.CameraUpdateFactory
import com.google.android.gms.maps.GoogleMap
import com.google.android.gms.maps.GoogleMap.InfoWindowAdapter
import com.google.android.gms.maps.OnMapReadyCallback
import com.google.android.gms.maps.SupportMapFragment
import com.google.android.gms.maps.model.CameraPosition
import com.google.android.gms.maps.model.LatLng
import com.google.android.gms.maps.model.Marker
import com.google.android.gms.maps.model.MarkerOptions
import com.google.android.libraries.places.api.Places
import com.google.android.libraries.places.api.model.Place
import com.google.android.libraries.places.api.net.FindCurrentPlaceRequest
import com.google.android.libraries.places.api.net.PlacesClient

/**
* An activity that displays a map showing the place at the device's current location.
*/
class MapsActivityCurrentPlace : AppCompatActivity(), OnMapReadyCallback {
private var map: GoogleMap? = null
private var cameraPosition: CameraPosition? = null

private var locationPermissionGranted = false

cameraPosition = savedInstanceState.getParcelable(KEY_CAMERA_POSITION)

Places.initialize(applicationContext, BuildConfig.MAPS_API_KEY)
placesClient = Places.createClient(this)

.findFragmentById(R.id.map) as SupportMapFragment?
mapFragment?.getMapAsync(this)
outState.putParcelable(KEY_LOCATION, lastKnownLocation)
return true

findViewById<FrameLayout>(R.id.map), false)
val title = infoWindow.findViewById<TextView>(R.id.title)
title.text = marker.title
val snippet = infoWindow.findViewById<TextView>(R.id.snippet)
snippet.text = marker.snippet
return infoWindow

locationResult.addOnCompleteListener(this) { task ->
if (task.isSuccessful) {
if (lastKnownLocation != null) {
map?.moveCamera(CameraUpdateFactory.newLatLngZoom(
LatLng(lastKnownLocation!!.latitude,
lastKnownLocation!!.longitude), DEFAULT_ZOOM.toFloat()))
Log.d(TAG, "Current location is null. Using defaults.")
Log.e(TAG, "Exception: %s", task.exception)
map?.moveCamera(CameraUpdateFactory
.newLatLngZoom(defaultLocation, DEFAULT_ZOOM.toFloat()))
map?.uiSettings?.isMyLocationButtonEnabled = false
Manifest.permission.ACCESS_FINE_LOCATION)
== PackageManager.PERMISSION_GRANTED) {
locationPermissionGranted = true
ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),
PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION)
when (requestCode) {
PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION -> {

grantResults[0] == PackageManager.PERMISSION_GRANTED) {
locationPermissionGranted = true

placeResult.addOnCompleteListener { task ->
if (task.isSuccessful && task.result != null) {
val likelyPlaces = task.result

likelyPlaceAddresses = arrayOfNulls(count)
likelyPlaceAttributions = arrayOfNulls<List<*>?>(count)
likelyPlaceLatLngs = arrayOfNulls(count)
for (placeLikelihood in likelyPlaces?.placeLikelihoods ?: emptyList()) {
likelyPlaceAddresses[i] = placeLikelihood.place.address
likelyPlaceAttributions[i] = placeLikelihood.place.attributions
likelyPlaceLatLngs[i] = placeLikelihood.place.latLng
i++
if (i > count - 1) {
break
Log.i(TAG, "The user did not grant location permission.")

.title(getString(R.string.default_info_title))
.position(defaultLocation)
.snippet(getString(R.string.default_info_snippet)))

$markerSnippet
${likelyPlaceAttributions[which]}
""".trimIndent()
.title(likelyPlaceNames[which])
.position(markerLatLng)
.snippet(markerSnippet))

DEFAULT_ZOOM.toFloat()))
AlertDialog.Builder(this)
.setTitle(R.string.pick_place)
.setItems(likelyPlaceNames, listener)
.show()
map?.uiSettings?.isMyLocationButtonEnabled = true
map?.uiSettings?.isMyLocationButtonEnabled = false
lastKnownLocation = null
getLocationPermission()
private const val PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION = 1

private const val KEY_LOCATION = "location"

Android 스튜디오를
다운로드 [https://developer.android.com/studio/index.html?hl=ko]하여
설치 [https://developer.android.com/studio/install.html?pkg=studio&hl=ko]합니다.
Android
스튜디오에 Google Play 서비스 패키지를
추가 [https://developer.android.com/studio/intro/update.html?hl=ko#sdk-manager]합니다. 이 튜토리얼을 읽기 전에 Google Maps Android API v2 샘플 저장소를 클론하거나 다운로드 [https://github.com/googlemaps-samples/android-samples]합니다.
튜토리얼 프로젝트를 가져옵니다.

Android 스튜디오에서 File > New > Import
Project를 선택합니다.
Google Maps Android API v2 샘플 저장소를 다운로드한 후
저장한 위치로 이동합니다.
다음 위치에서 CurrentPlaceDetailsOnMap 프로젝트를
찾습니다.
PATH-TO-SAVED-REPO/android-samples/tutorials/java/CurrentPlaceDetailsOnMap(Java) 또는
PATH-TO-SAVED-REPO/android-samples/tutorials/kotlin/CurrentPlaceDetailsOnMap(Kotlin)

프로젝트 디렉터리를 선택한 다음 Open을 클릭합니다. 이제 Android 스튜디오에서 Gradle 빌드 도구를 사용하여 프로젝트를 빌드합니다.

필요한 API 사용 설정 및 API 키 가져오기

이 튜토리얼을 완료하려면 필요한 API가 사용 설정되고 Android용 Maps SDK를 사용할 수 있도록
승인된 API 키가 포함된 Google Cloud 프로젝트가 필요합니다.
자세한 내용은 다음을 참고하세요.

Google Cloud 프로젝트 설정 [https://developers.google.com/maps/documentation/places/android-sdk/cloud-setup?hl=ko]
API 키 사용하기 [https://developers.google.com/maps/documentation/places/android-sdk/get-api-key?hl=ko]

참고: 이 튜토리얼에서는 Places API 및 Android용 Maps SDK를 사용 설정해야 합니다.

사용 설정된 API를 보려면 Cloud 콘솔의 Google Maps Platform 페이지로 이동하여 프로젝트를 선택하세요.

Google Maps Platform 페이지로 이동 [https://console.cloud.google.com/project/_/google/maps-apis/api-list?utm_source=Docs_EnabledMapsAPIsView&hl=ko]

프로젝트에서 Places API가 사용 설정되어 있지 않은 경우, 이를 사용 설정해야 합니다.

Places API 사용 설정 [https://console.cloud.google.com/apis/library/places-backend.googleapis.com?hl=ko]

API 키에 제한사항을 추가하는 경우 키에 Places API를 추가해야
합니다. 자세한 내용은 API 키 사용 [https://developers.google.com/maps/documentation/places/android-sdk/get-api-key?hl=ko]을
참고하세요.

앱에 API 키 추가

프로젝트의 local.properties 파일을 엽니다.
다음 문자열을 추가한 다음 YOUR_API_KEY를 API 키 값으로 대체합니다.
MAPS_API_KEY=YOUR_API_KEY
앱을 빌드할 때
Android용 Secrets Gradle 플러그인 [https://github.com/google/secrets-gradle-plugin]에서
API 키를 복사하여 이를 Android 매니페스트에서 빌드 변수로 제공합니다.

앱 빌드 및 실행

컴퓨터에 Android 기기를 연결합니다. 안내 [https://developer.android.com/studio/run/device.html?hl=ko]에 따라
Android 기기에서 개발자 옵션을 사용 설정하고
기기를 감지하도록
시스템을 구성합니다.

또는
Android Virtual DeviceAndroid(AVD) Manager [https://developer.android.com/studio/run/managing-avds.html?hl=ko]를
사용하여
가상 기기를 구성할 수 있습니다. 에뮬레이터를 선택할 때 Google API가 포함된 이미지를
선택해야 합니다. 자세한 내용은
Android 스튜디오 프로젝트 설정 [https://developers.google.com/maps/documentation/places/android-sdk/config?hl=ko]을 참조하세요.
Android 스튜디오에서 Run 메뉴 옵션(또는 재생 버튼 아이콘)을
클릭합니다. 표시되는 메시지에 따라 기기를 선택합니다.

Android 스튜디오에서 Gradle을 호출하여 앱을 빌드한 다음 기기 또는 에뮬레이터에서
앱을 실행합니다. 이 페이지의 이미지와 비슷하게, 내 현재 위치를
중심으로 주변에 여러 개의 마커가 있는 지도가 표시됩니다.

장소 가져오기를 선택하여 현재 위치 주변의 장소(비즈니스 또는 관심 장소) 목록을 엽니다.
목록에서 장소를 선택합니다. 지도에 선택한 장소의 마커가 추가됩니다.

문제 해결:

지도가 표시되지 않으면 위에서 설명한 대로 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#api-key] API 키를 가져와
앱에 추가했는지 확인하세요. Android 스튜디오의 Android Monitor [https://developer.android.com/studio/debug/am-logcat.html?hl=ko]에 있는 로그에 API 키 관련 오류 메시지가 있는지 확인하세요.
지도에서 시드니 하버 브리지(앱에서 지정된 기본 위치)에 마커가 하나만 표시되면 앱에 위치 정보 액세스 권한을 부여했는지 확인하세요. Android 권한 가이드 [https://developer.android.com/training/permissions/requesting.html?hl=ko]에 설명된 패턴에 따라, 런타임 시 위치 정보 액세스 권한을 요청하는 메시지가 앱에 표시됩니다. 설정 > 앱 > 앱 이름 >
권한 > 위치를 선택하여
기기에서 직접 권한을 설정할 수도 있습니다. 코드에서 권한을 처리하는 방법을 자세히 알아보려면 아래에 나온 앱에서 위치 정보 액세스 권한 요청 [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#location-permission] 가이드를 읽어보세요.
Android 스튜디오 디버깅 도구 [https://developer.android.com/studio/debug/am-logcat.html?hl=ko]를
사용하여 로그를 확인하고 앱을
디버그하세요.

코드 이해하기

여기에서는 유사한 앱을 빌드하는 방법을 이해할 수 있도록
CurrentPlaceDetailsOnMap 앱의 가장 중요한 부분을
설명합니다.

Places API 클라이언트 인스턴스화

이 객체는 Android용 Places SDK의 기본 진입점입니다.

Places [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/Places?hl=ko]
클래스는 Android용 Places SDK의 클라이언트를 만들고 관리합니다.

PlacesClient [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko]
인터페이스는 기기의 현재 위치와 위치 근처의 장소를 검색합니다.

LocationServices [https://developers.google.com/android/reference/com/google/android/gms/location/LocationServices?hl=ko]
인터페이스는 Android 위치 서비스의 기본 진입점입니다.

API를 사용하려면 프래그먼트 또는 활동의
onCreate() [https://developer.android.com/reference/android/app/Activity?hl=ko#onCreate(android.os.Bundle,%20android.os.PersistableBundle)]
메서드에서 다음을 실행하세요.

Places 객체를 초기화합니다.
PlacesClient 객체를 만듭니다.
FusedLocationProviderClient 객체를 만듭니다.

예:

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);

Places.initialize(getApplicationContext(), getString(R.string.maps_api_key));
placesClient = Places.createClient(this);

Places.initialize(applicationContext, getString(R.string.maps_api_key))
placesClient = Places.createClient(this)

Android 매니페스트에 권한을 <manifest>
요소의 하위 요소로 추가합니다.

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
package="com.example.currentplacedetailsonmap">
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
</manifest>

앱에서 런타임 권한을 요청하여 사용자에게 위치 정보 액세스 권한을
허용 또는 거부할 수 있는 기회를 제공합니다. 다음 코드는
사용자가 상세한 위치 정보 액세스 권한을 부여했는지 확인합니다. 부여하지 않은 경우
권한을 요청합니다.

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
private void getLocationPermission() {
/*
* Request location permission, so that we can get the location of the
* device. The result of the permission request is handled by a callback,
* onRequestPermissionsResult.
*/
if (ContextCompat.checkSelfPermission(this.getApplicationContext(),
android.Manifest.permission.ACCESS_FINE_LOCATION)
== PackageManager.PERMISSION_GRANTED) {
locationPermissionGranted = true;
ActivityCompat.requestPermissions(this,
new String[]{android.Manifest.permission.ACCESS_FINE_LOCATION},
PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION);
Manifest.permission.ACCESS_FINE_LOCATION)
== PackageManager.PERMISSION_GRANTED) {
locationPermissionGranted = true
ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),
PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION)

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
@Override
public void onRequestPermissionsResult(int requestCode,
@NonNull String[] permissions,
@NonNull int[] grantResults) {
locationPermissionGranted = false;
if (requestCode
== PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION) {// If request is cancelled, the result arrays are empty.
if (grantResults.length > 0
&& grantResults[0] == PackageManager.PERMISSION_GRANTED) {
locationPermissionGranted = true;
when (requestCode) {
PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION -> {

grantResults[0] == PackageManager.PERMISSION_GRANTED) {
locationPermissionGranted = true

지도 추가

Android용 Maps SDK를 사용하여 지도를 표시합니다.

활동의 레이아웃 파일인 activity_maps.xml에
<fragment> 요소를 추가합니다. 이 요소는 지도의
컨테이너 역할을 하고 GoogleMap 객체에 대한 액세스 권한을 제공하도록
SupportMapFragment [https://developers.google.com/android/reference/com/google/android/gms/maps/SupportMapFragment?hl=ko]를
정의합니다. 이 튜토리얼에서는 이전 버전 Android 프레임워크와의 호환성을 위해 지도 프래그먼트의 Android 지원 라이브러리 버전을 사용합니다.

<!--
Copyright 2020 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<fragment xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:id="@+id/map"
android:name="com.google.android.gms.maps.SupportMapFragment"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context="com.example.currentplacedetailsonmap.MapsActivityCurrentPlace" />

활동의 onCreate() 메서드에서 레이아웃 파일을 콘텐츠 뷰로
설정합니다.

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);

GoogleMap 객체를 사용할 수 있을 때 지도를 설정하도록
onMapReady() 메서드를 재정의합니다.

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
@Override
public void onMapReady(GoogleMap map) {
this.map = map;

SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
.findFragmentById(R.id.map);
mapFragment.getMapAsync(this);MapsActivityCurrentPlace.java [https://github.com/googlemaps-samples/android-samples/blob/73ac16ffca01a2ca6fedd1988c713138ec000082/tutorials/java/CurrentPlaceDetailsOnMap/app/src/main/java/com/example/currentplacedetailsonmap/MapsActivityCurrentPlace.java#L126-L128]

--- 탭: Kotlin [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#kotlin] [None] ---
val mapFragment = supportFragmentManager
.findFragmentById(R.id.map) as SupportMapFragment?
mapFragment?.getMapAsync(this)MapsActivityCurrentPlace.kt [https://github.com/googlemaps-samples/android-samples/blob/73ac16ffca01a2ca6fedd1988c713138ec000082/tutorials/kotlin/CurrentPlaceDetailsOnMap/app/src/main/java/com/example/currentplacedetailsonmap/MapsActivityCurrentPlace.kt#L101-L103]

updateLocationUI() 메서드를 작성하여
지도에 위치 컨트롤을 설정합니다. 사용자가 위치 정보 액세스 권한을 부여한 경우 지도의 내 위치 레이어 및 관련 컨트롤을 사용 설정하고, 부여하지 않은 경우 레이어와 컨트롤을 사용 중지하고 현재 위치를 null로 설정합니다.

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
private void updateLocationUI() {
if (map == null) {
return;
map.getUiSettings().setMyLocationButtonEnabled(true);
map.getUiSettings().setMyLocationButtonEnabled(false);
lastKnownLocation = null;
Log.e("Exception: %s", e.getMessage());
map?.uiSettings?.isMyLocationButtonEnabled = true
map?.uiSettings?.isMyLocationButtonEnabled = false
lastKnownLocation = null
getLocationPermission()
Android 기기의 위치 가져오기 및 지도 위치 지정

통합 위치 정보 제공자를 사용하여 마지막으로 알려진 기기 위치를 찾은 다음
해당 위치를 사용해 지도의 위치를 지정합니다. 이 튜토리얼에서 필요한 코드를
제공합니다. 기기 위치 가져오기에 대한 자세한 내용은 Google Play 서비스 위치 API의 통합 위치 정보 제공자 [https://developers.google.com/android/reference/com/google/android/gms/location/FusedLocationProviderApi?hl=ko]에 대한 가이드를 참고하세요.

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
private void getDeviceLocation() {
/*
* Get the best and most recent location of the device, which may be null in rare
* cases when a location is not available.
*/
try {
if (locationPermissionGranted) {
Task<Location> locationResult = fusedLocationProviderClient.getLastLocation();
locationResult.addOnCompleteListener(this, new OnCompleteListener<Location>() {
@Override
public void onComplete(@NonNull Task<Location> task) {
if (task.isSuccessful()) {
if (lastKnownLocation != null) {
map.moveCamera(CameraUpdateFactory.newLatLngZoom(
new LatLng(lastKnownLocation.getLatitude(),
lastKnownLocation.getLongitude()), DEFAULT_ZOOM));
Log.d(TAG, "Current location is null. Using defaults.");
Log.e(TAG, "Exception: %s", task.getException());
map.moveCamera(CameraUpdateFactory
.newLatLngZoom(defaultLocation, DEFAULT_ZOOM));
map.getUiSettings().setMyLocationButtonEnabled(false);
Log.e("Exception: %s", e.getMessage(), e);
locationResult.addOnCompleteListener(this) { task ->
if (task.isSuccessful) {
if (lastKnownLocation != null) {
map?.moveCamera(CameraUpdateFactory.newLatLngZoom(
LatLng(lastKnownLocation!!.latitude,
lastKnownLocation!!.longitude), DEFAULT_ZOOM.toFloat()))
Log.d(TAG, "Current location is null. Using defaults.")
Log.e(TAG, "Exception: %s", task.exception)
map?.moveCamera(CameraUpdateFactory
.newLatLngZoom(defaultLocation, DEFAULT_ZOOM.toFloat()))
map?.uiSettings?.isMyLocationButtonEnabled = false
Android용 Places SDK를 사용하면 현재의 기기 위치에 있는 예상 장소
목록을 가져올 수 있습니다. 이 컨텍스트에서 장소는 비즈니스
또는 기타 관심 장소입니다.

이 튜토리얼에서는 사용자가 장소 가져오기 버튼을
클릭할 때 현재 장소를 가져옵니다. 이 버튼은 선택할 수 있는 예상 장소 목록을
사용자에게 제공한 다음 지도에서 사용자가 선택한 장소의 위치에 마커를
추가합니다. 이 튜토리얼에서는 Android용 Places SDK와 상호작용하는 데 필요한 코드를 제공합니다. 자세한 내용은 현재 장소 가져오기 [https://developers.google.com/maps/documentation/places/android-sdk/current-place?hl=ko]
가이드를 참고하세요.

옵션 메뉴에 대한 레이아웃 파일(current_place_menu.xml)을
만들고 옵션 메뉴를 설정하도록 onCreateOptionsMenu() 메서드를
재정의합니다. 코드와 함께 제공되는 샘플 앱을 참고하세요.
사용자가 장소 가져오기 옵션을
클릭할 때 현재 장소를 가져오도록 onOptionsItemSelected() 메서드를 재정의합니다.

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
@Override
public boolean onOptionsItemSelected(MenuItem item) {
if (item.getItemId() == R.id.option_get_place) {
showCurrentPlace();
예상 장소 목록을 가져옵니다.

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
private void showCurrentPlace() {
if (map == null) {
return;
List<Place.Field> placeFields = Arrays.asList(Place.Field.NAME, Place.Field.ADDRESS,
Place.Field.LAT_LNG);

FindCurrentPlaceRequest request =
FindCurrentPlaceRequest.newInstance(placeFields);

Task<FindCurrentPlaceResponse> placeResult =
placesClient.findCurrentPlace(request);
placeResult.addOnCompleteListener (new OnCompleteListener<FindCurrentPlaceResponse>() {
@Override
public void onComplete(@NonNull Task<FindCurrentPlaceResponse> task) {
if (task.isSuccessful() && task.getResult() != null) {
FindCurrentPlaceResponse likelyPlaces = task.getResult();

if (likelyPlaces.getPlaceLikelihoods().size() < M_MAX_ENTRIES) {
count = likelyPlaces.getPlaceLikelihoods().size();
likelyPlaceNames = new String[count];
likelyPlaceAddresses = new String[count];
likelyPlaceAttributions = new List[count];
likelyPlaceLatLngs = new LatLng[count];

for (PlaceLikelihood placeLikelihood : likelyPlaces.getPlaceLikelihoods()) {
likelyPlaceAddresses[i] = placeLikelihood.getPlace().getAddress();
likelyPlaceAttributions[i] = placeLikelihood.getPlace()
.getAttributions();
likelyPlaceLatLngs[i] = placeLikelihood.getPlace().getLatLng();

i++;
if (i > (count - 1)) {
break;
MapsActivityCurrentPlace.this.openPlacesDialog();
Log.e(TAG, "Exception: %s", task.getException());
Log.i(TAG, "The user did not grant location permission.");

.title(getString(R.string.default_info_title))
.position(defaultLocation)
.snippet(getString(R.string.default_info_snippet)));

placeResult.addOnCompleteListener { task ->
if (task.isSuccessful && task.result != null) {
val likelyPlaces = task.result

likelyPlaceAddresses = arrayOfNulls(count)
likelyPlaceAttributions = arrayOfNulls<List<*>?>(count)
likelyPlaceLatLngs = arrayOfNulls(count)
for (placeLikelihood in likelyPlaces?.placeLikelihoods ?: emptyList()) {
likelyPlaceAddresses[i] = placeLikelihood.place.address
likelyPlaceAttributions[i] = placeLikelihood.place.attributions
likelyPlaceLatLngs[i] = placeLikelihood.place.latLng
i++
if (i > count - 1) {
break
Log.i(TAG, "The user did not grant location permission.")

.title(getString(R.string.default_info_title))
.position(defaultLocation)
.snippet(getString(R.string.default_info_snippet)))

예상 장소 목록에서 장소를 선택할 수 있는 양식을 표시합니다. 선택한 장소의
지도에 마커를 추가합니다. 마커 콘텐츠에는 장소의 이름과 주소, API에서 제공하는 모든 저작자 표시가 포함됩니다.

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
private void openPlacesDialog() {
LatLng markerLatLng = likelyPlaceLatLngs[which];
String markerSnippet = likelyPlaceAddresses[which];
if (likelyPlaceAttributions[which] != null) {
markerSnippet = markerSnippet + "\n" + likelyPlaceAttributions[which];
.title(likelyPlaceNames[which])
.position(markerLatLng)
.snippet(markerSnippet));

DEFAULT_ZOOM));
AlertDialog dialog = new AlertDialog.Builder(this)
.setTitle(R.string.pick_place)
.setItems(likelyPlaceNames, listener)
.show();
$markerSnippet
${likelyPlaceAttributions[which]}
""".trimIndent()
.title(likelyPlaceNames[which])
.position(markerLatLng)
.snippet(markerSnippet))

DEFAULT_ZOOM.toFloat()))
AlertDialog.Builder(this)
.setTitle(R.string.pick_place)
.setItems(likelyPlaceNames, listener)
.show()
Copyright 2020 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layoutDirection="locale"
android:orientation="vertical">
<TextView
android:id="@+id/title"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_gravity="center_horizontal"
android:textColor="#ff000000"
android:textStyle="bold" />

<TextView
android:id="@+id/snippet"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:textColor="#ff7f7f7f" />
</LinearLayout>

InfoWindowAdapter [https://developers.google.com/android/reference/com/google/android/gms/maps/GoogleMap.InfoWindowAdapter?hl=ko]
인터페이스를 구현하여
레이아웃을 확장하고 정보 창 콘텐츠를 로드합니다.

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
View infoWindow = getLayoutInflater().inflate(R.layout.custom_info_contents,
(FrameLayout) findViewById(R.id.map), false);

TextView title = infoWindow.findViewById(R.id.title);
title.setText(marker.getTitle());

TextView snippet = infoWindow.findViewById(R.id.snippet);
snippet.setText(marker.getSnippet());

return infoWindow;
findViewById<FrameLayout>(R.id.map), false)
val title = infoWindow.findViewById<TextView>(R.id.title)
title.text = marker.title
val snippet = infoWindow.findViewById<TextView>(R.id.snippet)
snippet.text = marker.snippet
return infoWindow
Android 기기를 회전하거나 구성을 변경하면 Android 프레임워크에서
지도 활동을 삭제하고 재구성합니다. 원활한 사용자 환경을 유지하려면 관련 애플리케이션 상태를 저장했다가 필요할 때 복원하는 것이 좋습니다.

이 튜토리얼에서는 지도의 상태를 저장하는 데 필요한 모든 코드를 제공합니다. 자세한 내용은 savedInstanceState 번들 [https://developer.android.com/training/basics/activity-lifecycle/recreating.html?hl=ko] 가이드를 참고하세요.

지도 활동에서 활동 상태를 저장하기 위한 키 값을 설정합니다.

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
private static final String KEY_CAMERA_POSITION = "camera_position";
private static final String KEY_LOCATION = "location";MapsActivityCurrentPlace.java [https://github.com/googlemaps-samples/android-samples/blob/73ac16ffca01a2ca6fedd1988c713138ec000082/tutorials/java/CurrentPlaceDetailsOnMap/app/src/main/java/com/example/currentplacedetailsonmap/MapsActivityCurrentPlace.java#L87-L88]

--- 탭: Kotlin [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#kotlin] [None] ---
private const val KEY_CAMERA_POSITION = "camera_position"
private const val KEY_LOCATION = "location"MapsActivityCurrentPlace.kt [https://github.com/googlemaps-samples/android-samples/blob/73ac16ffca01a2ca6fedd1988c713138ec000082/tutorials/kotlin/CurrentPlaceDetailsOnMap/app/src/main/java/com/example/currentplacedetailsonmap/MapsActivityCurrentPlace.kt#L412-L413]

활동이 일시중지될 때 상태를 저장하도록 onSaveInstanceState()
콜백을 구현합니다.

--- 탭: Java [https://developers.google.com/maps/documentation/places/android-sdk/current-place-tutorial?hl=ko#java] [None] ---
@Override
protected void onSaveInstanceState(Bundle outState) {
if (map != null) {
outState.putParcelable(KEY_CAMERA_POSITION, map.getCameraPosition());
outState.putParcelable(KEY_LOCATION, lastKnownLocation);
outState.putParcelable(KEY_LOCATION, lastKnownLocation)
cameraPosition = savedInstanceState.getParcelable(KEY_CAMERA_POSITION);
cameraPosition = savedInstanceState.getParcelable(KEY_CAMERA_POSITION)