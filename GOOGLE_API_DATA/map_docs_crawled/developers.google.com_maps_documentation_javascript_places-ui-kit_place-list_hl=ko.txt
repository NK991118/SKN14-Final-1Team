Source URL: https://developers.google.com/maps/documentation/javascript/places-ui-kit/place-list?hl=ko
Title: 장소 검색 요소

의견 보내기

장소 검색 요소

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

PlaceSearchElement [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#PlaceSearchElement]는 장소 검색 결과를 목록에 렌더링하는 HTML 요소입니다. gmp-place-search 요소를 구성하는 방법에는 두 가지가 있습니다.

주변 검색 요청 [https://developers.google.com/maps/documentation/javascript/places-ui-kit/place-list?hl=ko#search-nearby-request]을 사용하여 PlaceNearbySearchRequestElement [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#PlaceNearbySearchRequestElement]를 사용하여 검색 결과를 렌더링합니다.
텍스트로 검색 요청 [https://developers.google.com/maps/documentation/javascript/places-ui-kit/place-list?hl=ko#search-by-text-request]을 사용하여 PlaceTextSearchRequestElement [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#PlaceTextSearchRequestElement]를 사용하여 검색 결과를 렌더링합니다.

주변 검색 요청

메뉴에서 장소 유형을 선택하여 해당 장소 유형의 주변 검색 결과를 확인합니다.

다음 예에서는 주변 지역 검색에 대한 응답으로 장소 검색 요소를 렌더링합니다. 간단하게 카페, 레스토랑, 전기 자동차 충전소의 세 가지 장소 유형만 나열되어 있습니다. 결과를 선택하면 선택한 장소에 마커와 PlaceDetailsCompactElement [https://developers.google.com/maps/documentation/javascript/places-ui-kit/place-details?hl=ko#PlaceDetailsCompactElement]가 표시됩니다. 지도에 장소 검색 요소를 추가하려면 다음 스니펫과 같이 gmp-place-nearby-search-request 요소를 포함하는 gmp-place-search 요소를 HTML 페이지에 추가합니다.

<div class="list-container">
<div id="map-container"></div>
<div class="controls">
<select name="types" class="type-select">
<option value="">Select a place type</option>
<option value="cafe">Cafe</option>
<option value="restaurant">Restaurant</option>
<option value="electric_vehicle_charging_station">EV charging station</option>
</select>
</div>

<div class="list-container">
<gmp-place-search orientation="vertical" selectable>
<gmp-place-all-content> </gmp-place-all-content>
<gmp-place-nearby-search-request
></gmp-place-nearby-search-request>
</gmp-place-search>
</div>

<div id="details-container">
<gmp-place-details-compact orientation="horizontal">
<gmp-place-details-place-request></gmp-place-details-place-request>
<gmp-place-all-content></gmp-place-all-content>
</gmp-place-details-compact>
</div>

여러 querySelector 호출은 상호작용을 위해 페이지 요소를 선택하는 데 사용됩니다.

searchPlaces();

if (typeSelect.value) {
placeSearch.style.display = 'block';
placeSearchQuery.maxResultCount = 10;
placeSearchQuery.locationRestriction = { center: cent, radius: 1000 };
placeSearchQuery.includedTypes = [typeSelect.value];

placeSearch.addEventListener('gmp-load', addMarkers, { once: true });
const {Map} = await google.maps.importLibrary("maps");
await google.maps.importLibrary("places");
({AdvancedMarkerElement} = await google.maps.importLibrary("marker"));
({LatLngBounds, LatLng} = await google.maps.importLibrary("core"));

placeDetailsPopup = new AdvancedMarkerElement({
map: null,
content: placeDetails,
zIndex: 100

gMap.addListener('click', (e) => {
hidePlaceDetailsPopup();
searchPlaces();

for(const markerId in markers){
if (Object.prototype.hasOwnProperty.call(markers, markerId)) {
markers[markerId].map = null;
if (typeSelect.value) {
mapContainer.style.height = '75vh';
placeSearch.style.display = 'block';
placeSearchQuery.maxResultCount = 10;
placeSearchQuery.locationRestriction = { center: cent, radius: cappedRadius };
placeSearchQuery.includedTypes = [typeSelect.value];
placeSearch.addEventListener('gmp-load', addMarkers, { once: true });

if(placeSearch.places.length > 0){
placeSearch.places.forEach((place) => {
markers[place.id] = marker;
bounds.extend(place.location);

marker.addListener('click',(event) => {
placeRequest.place = place;
placeDetails.style.display = 'block';

placeDetailsPopup.position = place.location;
placeDetailsPopup.map = gMap;

gMap.fitBounds(place.viewport, {top: 0, left: 400});

placeDetails.addEventListener('gmp-load',() => {
gMap.fitBounds(place.viewport, {top: 0, right: 450});
gMap.fitBounds(bounds);
if (navigator.geolocation) {
navigator.geolocation.getCurrentPosition(
(position) => {
gMap.setZoom(16);
placeDetails.style.display = 'none';

CSS
html,
body {
<!DOCTYPE html>
<html>
<head>
<title>Place Search with Compact Place Details Element</title>
<meta charset="utf-8">
<link rel="stylesheet" href="style.css">
<script type="module" src="./index.js"></script>
</head>
<body>
<div id="map-container"></div>
<div class="controls">
<select name="types" class="type-select">
<option value="">Select a place type</option>
<option value="cafe">Cafe</option>
<option value="restaurant">Restaurant</option>
<option value="electric_vehicle_charging_station">EV charging station</option>
</select>
</div>
<div class="list-container">
<gmp-place-search orientation="vertical" selectable>
<gmp-place-all-content> </gmp-place-all-content>
<gmp-place-nearby-search-request
></gmp-place-nearby-search-request>
</gmp-place-search>
</div>
<div id="details-container">
<gmp-place-details-compact orientation="horizontal">
<gmp-place-details-place-request></gmp-place-details-place-request>
<gmp-place-all-content></gmp-place-all-content>
</gmp-place-details-compact>
</div>
<script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
({key: "YOUR_API_KEY", v: "weekly"});
</script>
</body>
</html>

텍스트로 검색 요청

입력란에 검색어를 입력하고 검색 버튼을 클릭하면 검색어와 일치하는 장소 목록이 표시됩니다.

이 예에서는 사용자 텍스트 검색에 대한 응답으로 장소 검색 요소를 렌더링합니다. 결과를 선택하면 선택한 장소에 마커와 PlaceDetailsCompactElement [https://developers.google.com/maps/documentation/javascript/places-ui-kit/place-details?hl=ko#PlaceDetailsCompactElement]가 표시됩니다. 지도에 장소 검색 요소를 추가하려면 다음 스니펫과 같이 gmp-place-search-text-search-request 요소를 포함하는 gmp-place-search 요소를 HTML 페이지에 추가합니다.

<div id="map-container"></div>
<div class="controls">
<input type="text" class="query-input" />
<button class="search-button">Search</button>
</div>

<div class="list-container">
<gmp-place-search orientation="vertical" selectable>
<gmp-place-all-content> </gmp-place-all-content>
<gmp-place-text-search-request></gmp-place-text-search-request>
</gmp-place-search>
</div>

<div id="details-container">
<gmp-place-details-compact orientation="horizontal">
<gmp-place-details-place-request></gmp-place-details-place-request>
<gmp-place-all-content></gmp-place-all-content>
</gmp-place-details-compact>
</div>

여러 querySelector 호출은 상호작용을 위해 페이지 요소를 선택하는 데 사용됩니다.

queryInput.addEventListener("keydown", (event) => {
if (event.key == 'Enter') {
event.preventDefault();
searchPlaces();
placeSearchQuery.textQuery = queryInput.value;
placeSearchQuery.locationBias = gMap.getBounds();
placeSearch.addEventListener('gmp-load', addMarkers, { once: true });
await google.maps.importLibrary("places");
({AdvancedMarkerElement} = await google.maps.importLibrary("marker"));
({LatLngBounds, LatLng} = await google.maps.importLibrary("core"));

placeDetailsPopup = new AdvancedMarkerElement({
map: null,
content: placeDetails,
zIndex: 100

gMap.addListener('click', (e) => {
hidePlaceDetailsPopup();
queryInput.addEventListener("keydown", (event) => {
if (event.key == 'Enter') {
event.preventDefault();
searchPlaces();
placeDetailsPopup.map = null;

for(const markerId in markers){
if (Object.prototype.hasOwnProperty.call(markers, markerId)) {
markers[markerId].map = null;
if (queryInput.value) {
placeSearchQuery.textQuery = queryInput.value;
placeSearchQuery.locationBias = gMap.getBounds();
placeSearch.addEventListener('gmp-load', addMarkers, { once: true });
markers[place.id] = marker;
bounds.extend(place.location);

marker.addListener('click',(event) => {
placeRequest.place = place;
placeDetails.style.display = 'block';

placeDetailsPopup.position = place.location;
placeDetailsPopup.map = gMap;

gMap.fitBounds(place.viewport, {top: 200, right: 450});

gMap.fitBounds(bounds);
if (navigator.geolocation) {
navigator.geolocation.getCurrentPosition(
(position) => {
gMap.setZoom(16);
placeDetails.style.display = 'none';

CSS
html,
body {
<!DOCTYPE html>
<html>
<head>
<title>Place Search with a Details Popup</title>
<meta charset="utf-8">
<link rel="stylesheet" href="style.css">
<script type="module" src="./index.js"></script>
</head>

<body>
<div id="map-container"></div>
<div class="controls">
<input type="text" class="query-input" />
<button class="search-button">Search</button>
</div>

<div class="list-container">
<gmp-place-search orientation="vertical" selectable>
<gmp-place-all-content> </gmp-place-all-content>
<gmp-place-text-search-request></gmp-place-text-search-request>
</gmp-place-search>
</div>

<div id="details-container">
<gmp-place-details-compact orientation="horizontal">
<gmp-place-details-place-request></gmp-place-details-place-request>
<gmp-place-all-content></gmp-place-all-content>
</gmp-place-details-compact>
</div>

<script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
({key: "YOUR_API_KEY", v: "weekly"});
</script>

</body>
</html>

의견 보내기