Source URL: https://developers.google.com/maps/documentation/navigation/android-sdk/route?hl=ko
Title: 단일 대상 경로 탐색

의견 보내기

단일 대상 경로 탐색

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

공지: fromLatLng() 및 fromPlaceId()은 지원이 중단되었지만 추가 업데이트 없이 계속 사용할 수 있습니다. 새 Waypoint.Builder [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Waypoint.Builder?hl=ko]로 마이그레이션하는 것이 좋습니다.

이 가이드에 따라 Android용 Navigation SDK를 사용하여 앱 내에 경로를 표시하세요. 이 가이드에서는 프로젝트 설정 [https://developers.google.com/maps/documentation/navigation/android-sdk/set-up-project?hl=ko]에 설명된 대로 탐색 SDK를 앱에 이미 통합했다고 가정합니다.

요약

탐색 프래그먼트 또는 탐색 뷰로 앱에 UI 요소를 추가합니다. 이 UI 요소는 활동에 대화형 지도와 턴바이턴 탐색 UI를 추가합니다.
위치 정보 액세스 권한을 요청합니다. 앱에서 기기의 위치를 확인하려면 위치 정보 액세스 권한을 요청해야 합니다.
NavigationApi [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationApi?hl=ko] 클래스를 사용하여 SDK를 초기화합니다.
Navigator [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko] 클래스를 사용하여 목적지를 설정하고 세부 경로 안내를 제어합니다. 이 과정은 세 단계로 이루어집니다.

setDestination() [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko#setDestination(com.google.android.libraries.navigation.Waypoint)]를 사용하여 목적지를 설정합니다.
startGuidance() [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko#startGuidance()]로 내비게이션을 시작합니다.
getSimulator() [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/Navigator?hl=ko#getSimulator()]을 사용하여 테스트, 디버깅, 앱 데모를 위해 경로를 따라 차량의 진행 상황을 시뮬레이션합니다.

앱을 빌드하고 실행합니다.

코드 보기

단일 대상 탐색 활동의 Java 코드를 표시하거나 숨깁니다.

package com.example.navsdksingledestination;

import android.content.pm.PackageManager;
import android.os.Bundle;
import android.util.Log;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;
import com.google.android.gms.maps.GoogleMap.CameraPerspective;
import com.google.android.libraries.navigation.ListenableResultFuture;
import com.google.android.libraries.navigation.NavigationApi;
import com.google.android.libraries.navigation.Navigator;
import com.google.android.libraries.navigation.RoutingOptions;
import com.google.android.libraries.navigation.SimulationOptions;
import com.google.android.libraries.navigation.SupportNavigationFragment;
import com.google.android.libraries.navigation.Waypoint;

/**
* An activity that displays a map and a navigation UI, guiding the user from their current location
* to a single, given destination.
*/
public class NavigationActivitySingleDestination extends AppCompatActivity {

private static final String TAG = NavigationActivitySingleDestination.class.getSimpleName();
private Navigator mNavigator;
private SupportNavigationFragment mNavFragment;
private RoutingOptions mRoutingOptions;

private boolean mLocationPermissionGranted;

@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);

this.getApplicationContext(), android.Manifest.permission.ACCESS_FINE_LOCATION)
== PackageManager.PERMISSION_GRANTED) {
mLocationPermissionGranted = true;
ActivityCompat.requestPermissions(
this,
new String[] {android.Manifest.permission.ACCESS_FINE_LOCATION},
PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION);
"Error loading Navigation SDK: " + "The user has not granted location permission.");
return;
NavigationApi.getNavigator(
this,
new NavigationApi.NavigatorListener() {
mNavigator = navigator;
mNavFragment =
(SupportNavigationFragment)
getSupportFragmentManager().findFragmentById(R.id.navigation_fragment);

googleMap -> googleMap.followMyLocation(CameraPerspective.TILTED));

mRoutingOptions.travelMode(RoutingOptions.TravelMode.DRIVING);

"Error loading Navigation SDK: Your API key is "
+ "invalid or not authorized to use the Navigation SDK.");
break;
case NavigationApi.ErrorCode.TERMS_NOT_ACCEPTED:
displayMessage(
"Error loading Navigation SDK: User did not accept "
+ "the Navigation Terms of Use.");
break;
case NavigationApi.ErrorCode.NETWORK_ERROR:
displayMessage("Error loading Navigation SDK: Network error.");
break;
case NavigationApi.ErrorCode.LOCATION_PERMISSION_MISSING:
displayMessage(
"Error loading Navigation SDK: Location permission " + "is missing.");
break;
default:
displayMessage("Error loading Navigation SDK: " + errorCode);
Waypoint destination;
try {
destination = Waypoint.builder().setPlaceIdString(placeId).build();
return;
ListenableResultFuture<Navigator.RouteStatus> pendingRoute =
mNavigator.setDestination(destination, travelMode);

new ListenableResultFuture.OnResultListener<Navigator.RouteStatus>() {
@Override
public void onResult(Navigator.RouteStatus code) {
switch (code) {
case OK:

.getSimulator()
.simulateLocationsAlongExistingRoute(
new SimulationOptions().speedMultiplier(5));
break;
break;
case NETWORK_ERROR:
displayMessage("Error starting navigation: Network error.");
break;
case ROUTE_CANCELED:
displayMessage("Error starting navigation: Route canceled.");
break;
default:
displayMessage("Error starting navigation: " + String.valueOf(code));
int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
mLocationPermissionGranted = false;
switch (requestCode) {
case PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION:
Toast.makeText(this, errorMessage, Toast.LENGTH_LONG).show();
Log.d(TAG, errorMessage);
Android 매니페스트에 권한을 <manifest> 요소의 하위 요소로 추가합니다.
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
package="com.example.navsdksingledestination">
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
</manifest>

앱에서 런타임 권한을 요청하여 사용자에게 위치 정보 액세스 권한을 부여하거나 거부할 수 있는 기회를 제공합니다. 다음 코드는 사용자가 상세한 위치 정보 액세스 권한을 부여했는지 확인합니다. 부여하지 않은 경우, 해당 권한을 요청합니다.
if (ContextCompat.checkSelfPermission(this.getApplicationContext(),
android.Manifest.permission.ACCESS_FINE_LOCATION)
== PackageManager.PERMISSION_GRANTED) {
mLocationPermissionGranted = true;
ActivityCompat.requestPermissions(this,
new String[] { android.Manifest.permission.ACCESS_FINE_LOCATION },
PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION);
return;
@NonNull int[] grantResults) {
mLocationPermissionGranted = false;
switch (requestCode) {
case PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION: {
&& grantResults[0] == PackageManager.PERMISSION_GRANTED) {
mLocationPermissionGranted = true;
Navigation SDK 초기화

NavigationApi [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/NavigationApi?hl=ko] 클래스는 앱이 Google 탐색을 사용할 수 있도록 승인하는 초기화 로직을 제공합니다. 이 섹션에서는 탐색기를 초기화하는 방법과 앱에서 사용 설정할 수 있는 기타 구성을 다룹니다.

Navigation SDK를 초기화하고 onNavigatorReady() 콜백을 재정의하여 탐색기가 준비되면 내비게이션을 시작합니다.
선택사항입니다. 사용자가 기기에서 앱을 닫으면 안내 알림과 백그라운드 서비스가 종료되도록 앱을 구성합니다. 이 선택은 비즈니스 모델에 따라 다릅니다. 앱이 닫혀도 회전 안내와 위치 업데이트를 계속 표시하는 기본 탐색기 동작을 사용하는 것이 좋습니다. 대신 최종 사용자가 앱을 닫을 때 탐색 및 위치 업데이트를 종료하려면 이 구성을 사용합니다.
선택사항입니다. 지원되는 국가에서 도로 제한을 사용 설정합니다. 번호판의 마지막 숫자를 설정합니다. 이 호출은 한 번만 하면 됩니다. 후속 경로 요청은 계속해서 이를 사용합니다. 이 호출은 지원되는 지역에서만 작동합니다. Navigation SDK 지원 국가 [https://developers.google.com/maps/documentation/navigation/android-sdk/coverage-nav-sdk?hl=ko]를 참고하세요.
NavigationApi.getNavigator(this, new NavigationApi.NavigatorListener() {
/**
* Sets up the navigation UI when the navigator is ready for use.
*/
@Override
public void onNavigatorReady(Navigator navigator) {
displayMessage("Navigator ready.");
mNavigator = navigator;
mNavFragment = (NavigationFragment) getFragmentManager()
.findFragmentById(R.id.navigation_fragment);

mRoutingOptions.travelMode(RoutingOptions.TravelMode.DRIVING);

break;
case NavigationApi.ErrorCode.TERMS_NOT_ACCEPTED:
displayMessage("Error loading Navigation SDK: User did not accept "
+ "the Navigation Terms of Use.");
break;
case NavigationApi.ErrorCode.NETWORK_ERROR:
displayMessage("Error loading Navigation SDK: Network error.");
break;
case NavigationApi.ErrorCode.LOCATION_PERMISSION_MISSING:
displayMessage("Error loading Navigation SDK: Location permission "
+ "is missing.");
break;
default:
displayMessage("Error loading Navigation SDK: " + errorCode);
Waypoint destination;
try {
destination = Waypoint.builder().setPlaceIdString(placeId).build();
return;
ListenableResultFuture<Navigator.RouteStatus> pendingRoute =
mNavigator.setDestination(destination, travelMode);

new ListenableResultFuture.OnResultListener<Navigator.RouteStatus>() {
@Override
public void onResult(Navigator.RouteStatus code) {
switch (code) {
case OK:
Navigator.AudioGuidance.VOICE_ALERTS_AND_GUIDANCE);

new SimulationOptions().speedMultiplier(5));
break;
break;
case NETWORK_ERROR:
displayMessage("Error starting navigation: Network error.");
break;
case ROUTE_CANCELED:
displayMessage("Error starting navigation: Route canceled.");
break;
default:
displayMessage("Error starting navigation: "
+ String.valueOf(code));
Android 스튜디오에서 Run 메뉴 옵션 또는 재생 버튼 아이콘을 클릭합니다.
표시되는 메시지에 따라 기기를 선택합니다.

사용자 환경 개선을 위한 힌트

탐색을 사용하려면 사용자가 Google 탐색 서비스 약관에 동의해야 합니다. 이 수락은 한 번만 필요합니다. 기본적으로 SDK는 탐색기가 처음 호출될 때 수락을 요청합니다. 원하는 경우 TermsAndConditionsCheckOption [https://developers.google.com/maps/documentation/navigation/android-sdk/reference/com/google/android/libraries/navigation/TermsAndConditionsCheckOption?hl=ko]를 사용하여 앱의 UX 흐름 초기에(예: 가입 또는 로그인 중) 내비게이션 서비스 약관 대화상자를 트리거할 수 있습니다.
탐색 품질과 ETA 정확도를 크게 개선하려면 위도/경도 좌표 대신 장소 ID를 사용하여 경유지를 초기화하세요.
이 샘플은 시드니 오페라 하우스의 특정 장소 ID에서 대상 경유지를 파생합니다. 장소 ID 찾기 [https://developers.google.com/maps/documentation/places/web-service/place-id?hl=ko]를 사용하여 다른 특정 위치의 장소 ID를 가져올 수 있습니다.

의견 보내기