Source URL: https://developers.google.com/maps/documentation/android-sdk/examples/polygon?hl=ko
Title: 지도에 다각형 그리기

의견 보내기

지도에 다각형 그리기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 예시에서는 지도에서 다양한 모양 및 색상의 다각형을 그립니다.

자세한 내용은 문서 [https://developers.google.com/maps/documentation/android-sdk/shapes?hl=ko#polygons]를 참고하세요.

시작하기

샘플 코드를 사용하기 전에 개발 환경을 구성해야 합니다.
자세한 내용은 Android용 Maps SDK 코드 샘플 [https://developers.google.com/maps/documentation/android-sdk/examples?hl=ko]을 참고하세요.

코드 보기

Kotlin

override fun onCreate(savedInstanceState: Bundle?) {
super.onCreate(savedInstanceState)
setContentView(R.layout.polygon_demo)

fillHueBar = findViewById<SeekBar>(R.id.fillHueSeekBar).apply {
max = MAX_HUE_DEGREES
progress = MAX_HUE_DEGREES / 2
progress = MAX_ALPHA / 2
progress = MAX_WIDTH_PX / 3
progress = 0
progress = MAX_ALPHA
this@PolygonDemoActivity, android.R.layout.simple_spinner_item,
getResourceStrings(jointTypeNameResourceIds))
this@PolygonDemoActivity, android.R.layout.simple_spinner_item,
getResourceStrings(patternTypeNameResourceIds))

val mapFragment = supportFragmentManager.findFragmentById(R.id.map) as SupportMapFragment
mapFragment.getMapAsync(this)
fillAlphaBar.progress, floatArrayOf(fillHueBar.progress.toFloat(), 1f, 1f))
val strokeColorArgb = Color.HSVToColor(
strokeAlphaBar.progress, floatArrayOf(strokeHueBar.progress.toFloat(), 1f, 1f))

with(googleMap) {

addHole(createRectangle(LatLng(-22.0, 128.0), 1.0, 1.0))
addHole(createRectangle(LatLng(-18.0, 133.0), 0.5, 1.5))
fillColor(fillColorArgb)
strokeColor(strokeColorArgb)
strokeWidth(strokeWidthBar.progress.toFloat())
clickable(clickabilityCheckbox.isChecked)
strokePattern = getSelectedPattern(strokePatternSpinner.selectedItemPosition)

public class PolygonDemoActivity extends AppCompatActivity
implements OnSeekBarChangeListener, OnItemSelectedListener, OnMapReadyCallback {

private static final LatLng CENTER = new LatLng(-20, 130);
private static final int MAX_WIDTH_PX = 100;
private static final int MAX_HUE_DEGREES = 360;
private static final int MAX_ALPHA = 255;

private static final int PATTERN_DASH_LENGTH_PX = 50;
private static final int PATTERN_GAP_LENGTH_PX = 10;
private static final Dot DOT = new Dot();
private static final Dash DASH = new Dash(PATTERN_DASH_LENGTH_PX);
private static final Gap GAP = new Gap(PATTERN_GAP_LENGTH_PX);
private static final List<PatternItem> PATTERN_DOTTED = Arrays.asList(DOT, GAP);
private static final List<PatternItem> PATTERN_DASHED = Arrays.asList(DASH, GAP);
private static final List<PatternItem> PATTERN_MIXED = Arrays.asList(DOT, GAP, DOT, DASH, GAP);

private Polygon mutablePolygon;
private SeekBar fillHueBar;
private SeekBar fillAlphaBar;
private SeekBar strokeWidthBar;
private SeekBar strokeHueBar;
private SeekBar strokeAlphaBar;
private Spinner strokeJointTypeSpinner;
private Spinner strokePatternSpinner;
private CheckBox clickabilityCheckbox;

R.string.joint_type_default, // Default
R.string.joint_type_bevel,
R.string.joint_type_round,
R.string.pattern_solid, // Default
R.string.pattern_dashed,
R.string.pattern_dotted,
R.string.pattern_mixed,
setContentView(R.layout.polygon_demo);

fillHueBar = findViewById(R.id.fillHueSeekBar);
fillHueBar.setMax(MAX_HUE_DEGREES);
fillHueBar.setProgress(MAX_HUE_DEGREES / 2);

fillAlphaBar = findViewById(R.id.fillAlphaSeekBar);
fillAlphaBar.setMax(MAX_ALPHA);
fillAlphaBar.setProgress(MAX_ALPHA / 2);

strokeWidthBar = findViewById(R.id.strokeWidthSeekBar);
strokeWidthBar.setMax(MAX_WIDTH_PX);
strokeWidthBar.setProgress(MAX_WIDTH_PX / 3);

strokeHueBar = findViewById(R.id.strokeHueSeekBar);
strokeHueBar.setMax(MAX_HUE_DEGREES);
strokeHueBar.setProgress(0);

strokeAlphaBar = findViewById(R.id.strokeAlphaSeekBar);
strokeAlphaBar.setMax(MAX_ALPHA);
strokeAlphaBar.setProgress(MAX_ALPHA);

strokeJointTypeSpinner = findViewById(R.id.strokeJointTypeSpinner);
strokeJointTypeSpinner.setAdapter(new ArrayAdapter<>(
this, android.R.layout.simple_spinner_item,
getResourceStrings(JOINT_TYPE_NAME_RESOURCE_IDS)));

strokePatternSpinner = findViewById(R.id.strokePatternSpinner);
strokePatternSpinner.setAdapter(new ArrayAdapter<>(
this, android.R.layout.simple_spinner_item,
getResourceStrings(PATTERN_TYPE_NAME_RESOURCE_IDS)));

clickabilityCheckbox = findViewById(R.id.toggleClickability);

SupportMapFragment mapFragment =
(SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);
mapFragment.getMapAsync(this);

int fillColorArgb = Color.HSVToColor(
fillAlphaBar.getProgress(), new float[]{fillHueBar.getProgress(), 1, 1});
int strokeColorArgb = Color.HSVToColor(
strokeAlphaBar.getProgress(), new float[]{strokeHueBar.getProgress(), 1, 1});

.addAll(createRectangle(CENTER, 5, 5))
.addHole(createRectangle(new LatLng(-22, 128), 1, 1))
.addHole(createRectangle(new LatLng(-18, 133), 0.5, 1.5))
.fillColor(fillColorArgb)
.strokeColor(strokeColorArgb)
.strokeWidth(strokeWidthBar.getProgress())
.clickable(clickabilityCheckbox.isChecked()));

fillHueBar.setOnSeekBarChangeListener(this);
fillAlphaBar.setOnSeekBarChangeListener(this);

strokeWidthBar.setOnSeekBarChangeListener(this);
strokeHueBar.setOnSeekBarChangeListener(this);
strokeAlphaBar.setOnSeekBarChangeListener(this);

strokeJointTypeSpinner.setOnItemSelectedListener(this);
strokePatternSpinner.setOnItemSelectedListener(this);

mutablePolygon.setStrokeJointType(getSelectedJointType(strokeJointTypeSpinner.getSelectedItemPosition()));
mutablePolygon.setStrokePattern(getSelectedPattern(strokePatternSpinner.getSelectedItemPosition()));

Android 스튜디오에서 File > New > Import Project를 선택합니다.
저장소를 저장한 위치로 이동하여 Kotlin 또는 Java를 위한 프로젝트 디렉터리를 선택합니다.

Kotlin: PATH-REPO/android-samples/ApiDemos/kotlin
Java: PATH-REPO/android-samples/ApiDemos/java

열기를 선택합니다. Android 스튜디오에서 Gradle 빌드 도구를 사용하여 프로젝트를 빌드합니다.
프로젝트의 local.properties 파일과 동일한 디렉터리에서 빈 secrets.properties 파일을 만듭니다. 자세한 내용은 프로젝트에 직접 생성한 API 키 추가하기 [https://developers.google.com/maps/documentation/android-sdk/config?hl=ko#step_3_add_your_api_key_to_the_project]를 참고하세요.
다음 문자열을 secrets.properties에 추가합니다(YOUR_API_KEY는 API 키의 값으로 변경).
MAPS_API_KEY=YOUR_API_KEY
앱을 실행합니다.

의견 보내기