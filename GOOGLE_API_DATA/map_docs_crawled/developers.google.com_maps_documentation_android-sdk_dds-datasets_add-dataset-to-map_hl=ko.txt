Source URL: https://developers.google.com/maps/documentation/android-sdk/dds-datasets/add-dataset-to-map?hl=ko
Title: 지도 및 스타일 데이터 세트에 데이터 세트 추가

의견 보내기

지도 및 스타일 데이터 세트에 데이터 세트 추가

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/android-sdk/dds-datasets/add-dataset-to-map?hl=ko]

iOS [https://developers.google.com/maps/documentation/ios-sdk/dds-datasets/add-dataset-to-map?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/dds-datasets/add-dataset-to-map?hl=ko]

이 페이지에서는 지도에 데이터 세트를 추가하고 스타일을 적용하는 방법을 설명합니다.

기본 요건

먼저, 지도 ID와 지도 스타일, 데이터 세트 ID가 있어야 합니다.

지도 ID 및 지도 스타일 만들기 [https://developers.google.com/maps/documentation/android-sdk/dds-datasets/start?hl=ko#create_a_map_id]
데이터 세트 만들기 및 업로드 [https://developers.google.com/maps/documentation/android-sdk/dds-datasets/create-dataset?hl=ko]
참고: 앱을 초기화하려면 데이터 세트의 ID가 필요합니다.

데이터 세트 ID와 지도 스타일 연결

데이터 세트의 지형지물에 스타일을 지정하려면 지도의 데이터 세트 지형지물 레이어에 스타일 함수를 적용합니다. 데이터 세트 기능 레이어는 데이터 세트를 지도 스타일과 연결할 때 생성됩니다.
실험용: 이 기능은 밝은 지도 스타일에만 설정할 수 있습니다. 이 기능이 사용 설정된 밝은 지도 스타일을 지도 ID [https://developers.google.com/maps/documentation/android-sdk/map-ids/mapid-over?hl=ko]에 연결하면 사용 설정된 레이어를 어두운 지도 스타일에서도 사용할 수 있습니다.
데이터 세트를 지도 스타일과 연결하려면 다음 단계를 따르세요.

Google Cloud 콘솔에서 데이터 세트 페이지로 이동 [https://console.cloud.google.com/google/maps-apis/datasets?hl=ko]합니다.

데이터 세트의 이름을 클릭합니다. 데이터 세트 세부정보 페이지가 나타납니다.
미리보기 탭을 클릭합니다.
연결된 지도 스타일 섹션에서 지도 스타일 추가를 클릭합니다.

연결할 지도 스타일의 체크박스를 클릭한 다음 저장을 클릭합니다.

주의: 지도에서 여러 데이터 세트를 렌더링하면 데이터 세트의 크기와 수에 따라 성능에 영향을 미칠 수 있습니다.
데이터 세트에 스타일 적용

데이터 세트에 스타일을 적용하려면 다음 단계를 따르세요.

FeatureLayer.StyleFactory [https://developers.google.com/android/reference/com/google/android/gms/maps/model/FeatureLayer.StyleFactory?hl=ko] 인터페이스를 구현하는 스타일 팩토리 함수를 만듭니다. 이 함수는 데이터 세트의 스타일 지정 로직을 정의합니다.
FeatureLayer.setFeatureStyle() [https://developers.google.com/android/reference/com/google/android/gms/maps/model/FeatureLayer?hl=ko#setFeatureStyle(com.google.android.gms.maps.model.FeatureLayer.StyleFactory)]를 호출하여 스타일 팩토리 함수를 데이터 세트의 각 지형지물에 적용합니다.

스타일 팩토리 함수 만들기

스타일 팩토리 함수는 지형지물 레이어에 함수를 설정할 때 데이터 세트 레이어의 모든 지형지물에 적용됩니다. 이 함수는 다각형의 스타일을 지정하는 방법을 지정하는 FeatureStyle [https://developers.google.com/android/reference/com/google/android/gms/maps/model/FeatureStyle?hl=ko] 객체를 반환해야 합니다.

스타일 팩토리에서 null를 반환하면 지정된 기능이 렌더링되지 않습니다. 자세한 내용은 레이어에서 스타일 삭제 [https://developers.google.com/maps/documentation/android-sdk/dds-datasets/add-dataset-to-map?hl=ko#remove_styling_from_a_layer]를 참고하세요.
참고: 기능 레이어의 스타일 팩토리 함수를 업데이트하거나 수정하는 경우 FeatureLayer.setFeatureStyle()를 다시 호출하여 기능 레이어의 함수를 재설정해야 합니다.
Android용 Maps SDK는 스타일 팩토리 함수에 Feature [https://developers.google.com/android/reference/com/google/android/gms/maps/model/Feature?hl=ko] 인스턴스를 전달합니다. Feature 인스턴스는 스타일 팩토리 함수의 메타데이터에 액세스할 수 있도록 기능의 메타데이터를 나타냅니다.
참고: 데이터 세트의 경우 인스턴스는 실제로 Feature의 하위 클래스인 DatasetFeature [https://developers.google.com/android/reference/com/google/android/gms/maps/model/DatasetFeature?hl=ko] 유형입니다.
스타일 팩토리 함수는 적용될 때 항상 일관성 있는 결과를 반환해야 합니다. 예를 들어 여러 지형지물의 색상을 무작위로 지정할 경우, 지형지물 스타일 함수에 무작위 부분이 있으면 의도하지 않은 결과가 발생할 수 있으므로 무작위 부분이 없어야 합니다.

이 함수는 레이어의 모든 지형지물에 대해 실행되므로 최적화가 중요합니다. 렌더링 시간에 영향을 주지 않으려면 지형지물 레이어가 더 이상 사용되지 않을 때 FeatureLayer.setFeatureStyle(null)를 호출하세요.

FeatureLayer.getDatasetId()를 호출하여 데이터 세트의 ID를 가져올 수도 있습니다.

획, 채우기, 점 반경 설정

스타일 팩토리 함수에서 지형지물의 스타일을 지정할 때 다음을 설정할 수 있습니다.

Color [https://developer.android.com/reference/android/graphics/Color.html?hl=ko] 클래스에 의해 정의된 테두리의 획 색상 및 불투명도입니다. 기본값은 투명 (Color.TRANSPARENT)입니다.
화면 픽셀의 테두리 획 너비입니다. 기본값은 2입니다.
Color [https://developer.android.com/reference/android/graphics/Color.html?hl=ko] 클래스에 의해 정의된 채우기 색상 및 불투명도 기본값은 투명 (Color.TRANSPARENT)입니다.
0~128픽셀 사이의 포인트 기능의 포인트 반경입니다.

간단한 스타일 규칙 사용

지형지물의 스타일을 지정하는 가장 간단한 방법은 지형지물에 관계없이 항상 동일한 FeatureStyle 객체를 빌드하는 FeatureLayer.StyleFactory를 정의하는 것입니다. 지형지물 스타일 옵션을 데이터 세트 지형지물 레이어에 직접 적용하거나 FeatureStyleFunction과 함께 사용합니다.

선언적 스타일 규칙 사용

특성 속성을 기반으로 스타일 규칙을 선언적으로 설정하고 전체 데이터 세트에 적용할 수 있습니다. 지형지물의 하위 집합은 계속 보이지 않게 하려는 등의 경우에는 지형지물 스타일 함수에서 null을 반환할 수 있습니다.

예를 들어 DatasetFeature.getDatasetAttributes() 메서드를 사용하여 기능의 데이터 세트 속성 Map<String,String>을 반환합니다. 그런 다음 속성을 기반으로 기능의 스타일을 맞춤설정할 수 있습니다.

이 예에서는 데이터 세트의 각 기능의 'highlightColor' 속성 값을 확인하여 스타일을 제어합니다.

Kotlin
DatasetFeature datasetFeature = (DatasetFeature) feature;
Map<String, String> attributeColor = datasetFeature.getDatasetAttributes();
switch(attributeColor.get("highlightColor"))
case "Black":
...
break;
case "Red":
...
break;
default: // Color not defined.
...
break;
private var datasetLayer: FeatureLayer? = null
override fun onMapReady(googleMap: GoogleMap) {
.featureType(FeatureType.DATASET)
@Override
public void onMapReady(GoogleMap map) {
.featureType(FeatureType.DATASET)
private fun styleDatasetsLayer() {