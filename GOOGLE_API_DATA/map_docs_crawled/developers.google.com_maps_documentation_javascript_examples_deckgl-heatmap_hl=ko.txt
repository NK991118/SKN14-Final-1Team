Source URL: https://developers.google.com/maps/documentation/javascript/examples/deckgl-heatmap?hl=ko
Title: Google Maps and deck.gl HeatmapLayer

Send feedback

Google Maps and deck.gl HeatmapLayer

Stay organized with collections

Save and categorize content based on your preferences.

Visualize data with a deck.gl heatmap layer

This example uses uses the deck.gl HeatmapLayer to show bicycle parking
capacity. Use the HeatmapLayer [https://deck.gl/docs/api-reference/aggregation-layers/heatmap-layer]
to visualize spatial distribution of data.

TypeScript
setMap(map: google.maps.Map | null): void;
setProps(props: any): void;
progress.open();
progress.determinate = false;
progress.done = function () {
progress.close();
progressDiv?.remove(); // Use optional chaining in case progressDiv is null
const {AdvancedMarkerElement} = await google.maps.importLibrary('marker') as google.maps.MarkerLibrary;

tooltip.style.left = info.x + 'px';
tooltip.style.top = info.y + 'px';
tooltip.style.display = 'block';

if (!marker) {
infoWindow.setContent(content);
infoWindow.open(map, marker);
infoWindow.setContent(content);
infoWindow.open(map, marker);

infoWindow.setContent(content);
infoWindow.open(map, marker);

toggleButton.textContent = !currentVisible ? 'Hide Heatmap Layer' : 'Show Heatmap Layer';
progress.open();
progress.determinate = false;
progress.done = function () {
progress.close();
progressDiv?.remove(); // Use optional chaining in case progressDiv is null
const { AdvancedMarkerElement } = await google.maps.importLibrary('marker');
tooltip.style.left = info.x + 'px';
tooltip.style.top = info.y + 'px';
tooltip.style.display = 'block';
return; // Ensure latLng is not null
if (!marker) {
infoWindow.setContent(content);
infoWindow.open(map, marker);
infoWindow.setContent(content);
infoWindow.open(map, marker);
infoWindow.setContent(content);
infoWindow.open(map, marker);
toggleButton.textContent = !currentVisible ? 'Hide Heatmap Layer' : 'Show Heatmap Layer';
/*
* Always set the map height explicitly to define the size of the div element
* that contains the map.
*/
body {
<html>
<head>
<title>deck.gl HeatmapLayer and Google Maps Platform</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Use Material Design Progress indicator -->
<link
href="https://unpkg.com/material-components-web@6.0.0/dist/material-components-web.css"
rel="stylesheet"
/>
<script src="https://unpkg.com/material-components-web@6.0.0/dist/material-components-web.min.js"></script>
<script src="https://unpkg.com/deck.gl@8.9.22/dist.min.js"></script>
<script src="https://unpkg.com/@deck.gl/google-maps@8.9.22/dist.min.js"></script>

<link rel="stylesheet" href="style.css">

<script type="module" src="index.js" defer></script>
</head>
<body>
<div
role="progressbar"
class="mdc-linear-progress"
aria-label="Data Progress Bar"
>
<div class="mdc-linear-progress__buffer">
<div class="mdc-linear-progress__buffer-bar"></div>
<div class="mdc-linear-progress__buffer-dots"></div>
</div>
<div class="mdc-linear-progress__bar mdc-linear-progress__primary-bar">
<span class="mdc-linear-progress__bar-inner"></span>
</div>
<div class="mdc-linear-progress__bar mdc-linear-progress__secondary-bar">
<span class="mdc-linear-progress__bar-inner"></span>
</div>
</div>
<script>
progress = new mdc.linearProgress.MDCLinearProgress(progressDiv);
progress.open();
progress.determinate = false;
progress.done = function () {
progress.close();
progressDiv.remove();

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps-samples/js-api-samples/tree/main/dist/samples/deckgl-heatmap/jsfiddle]

Clone Sample

Git and Node.js are required to run this sample locally. Follow these instructions [https://docs.npmjs.com/downloading-and-installing-node-js-and-npm] to install Node.js and NPM. The following commands clone, install dependencies and start the sample application.

git clone https://github.com/googlemaps-samples/js-api-samples.git
cd samples/deckgl-heatmap
npm i
npm start

Send feedback