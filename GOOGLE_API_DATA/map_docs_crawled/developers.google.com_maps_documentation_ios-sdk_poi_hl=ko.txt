Source URL: https://developers.google.com/maps/documentation/ios-sdk/poi?hl=ko
Title: 비즈니스 및 기타 관심 장소

의견 보내기

비즈니스 및 기타 관심 장소

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/android-sdk/poi?hl=ko]

iOS [https://developers.google.com/maps/documentation/ios-sdk/poi?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/examples/event-poi?hl=ko]

기본적으로 관심 장소(POI)는 해당 아이콘과 함께 기본 지도에
표시됩니다. 관심 장소에는 공원, 학교, 정부 건물 등이
포함됩니다. 또한 지도 유형이 kGMSTypeNormal인 경우 비즈니스 관심 장소가 지도에 기본으로 표시됩니다. 비즈니스 관심 장소는 상점, 음식점, 호텔 등의 비즈니스를
나타냅니다.

관심 장소는 iOS용 Places SDK에 정의된 장소 ID [https://developers.google.com/maps/documentation/places/ios-sdk/place-id?hl=ko#id-overview]에 해당합니다. 예를 들어 휴양 공원은 관심 장소이지만 식수대와 같은 곳은 (국가적 또는 역사적으로 중요하지 않은 한) 일반적으로 관심 장소가 아닙니다.

관심 장소의 클릭 이벤트 수신 대기

관심 장소를 탭한 사용자에게 응답하려면 다음 예와 같이 GMSMapViewDelegate [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Protocols/GMSMapViewDelegate?hl=ko]를 구현하고 mapView(_:didTapPOIWithPlaceID:name:location:) [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Protocols/GMSMapViewDelegate?hl=ko#-mapview:didtappoiwithplaceid:name:location:] 메서드를 구현합니다.

Swift
import GoogleMaps

class POI: UIViewController, GMSMapViewDelegate {

override func loadView() {
self.view = mapView
_ mapView: GMSMapView,
didTapPOIWithPlaceID placeID: String,
name: String,
location: CLLocationCoordinate2D
) {
print("You tapped \(name): \(placeID), \(location.latitude)/\(location.longitude)")
Objective-C
#import "POI.h"
@import GoogleMaps;

@interface POI () <GMSMapViewDelegate>

@end

@implementation POI

- (void)loadView {
GMSCameraPosition *camera = [GMSCameraPosition cameraWithLatitude:47.603
longitude:-122.331
GMSMapView *mapView = [GMSMapView mapWithFrame:CGRectZero camera:camera];
mapView.delegate = self;
self.view = mapView;
NSLog(@"You tapped %@: %@, %f/%f", name, placeID, location.latitude, location.longitude);
_ mapView: GMSMapView,
didTapPOIWithPlaceID placeID: String,
name: String,
location: CLLocationCoordinate2D
) {
infoMarker.snippet = placeID
infoMarker.position = location
infoMarker.title = name
infoMarker.opacity = 0;
infoMarker.infoWindowAnchor.y = 1
infoMarker.map = mapView
mapView.selectedMarker = infoMarker
Objective-C
GMSMarker *infoMarker;

infoMarker.snippet = placeID;
infoMarker.title = name;
infoMarker.opacity = 0;
CGPoint pos = infoMarker.infoWindowAnchor;
pos.y = 1;
infoMarker.infoWindowAnchor = pos;
infoMarker.map = mapView;
mapView.selectedMarker = infoMarker;