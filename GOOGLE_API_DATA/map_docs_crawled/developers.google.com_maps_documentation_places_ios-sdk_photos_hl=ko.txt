Source URL: https://developers.google.com/maps/documentation/places/ios-sdk/photos?hl=ko
Title: 장소 사진

의견 보내기

장소 사진

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

iOS용 Places SDK를 사용하여 애플리케이션에 표시할 장소 사진을 요청할 수 있습니다. 사진 서비스에서 반환되는 사진은 비즈니스 소유자 및 사용자 제공 사진을 비롯한 다양한 소스에서 가져온 것입니다. 장소의 사진을 가져오려면 다음 단계를 따라야 합니다.

[GMSPlacesClient
fetchPlaceFromPlaceId] [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSPlacesClient?hl=ko#-fetchplacefromplaceid:placefields:sessiontoken:callback:]를 호출하여 장소 ID와 콜백이 포함된 문자열을 전달합니다. 이렇게 하면 GMSPlacePhotoMetadataList [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSPlacePhotoMetadataList?hl=ko] 객체로 콜백이 호출됩니다.
GMSPlacePhotoMetadataList [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSPlacePhotoMetadataList?hl=ko] 객체에서 results [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSPlacePhotoMetadataList?hl=ko#results] 속성에 액세스하고 배열에서 로드할 사진을 선택합니다.
이 목록에서 로드할 각 GMSPlacePhotoMetadata [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSPlacePhotoMetadata?hl=ko]에 대해 [GMSPlacesClient
loadPlacePhoto:callback:] [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSPlacesClient?hl=ko#-loadplacephoto:callback:] 또는 [GMSPlacesClient
loadPlacePhoto:constrainedToSize:scale:callback:] [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSPlacesClient?hl=ko#-loadplacephoto:constrainedtosize:scale:callback:]를 호출합니다.
그러면 사용 가능한 UIImage가 포함된 콜백이 호출됩니다. 사진의 최대 너비 또는 높이는 1,600픽셀입니다.

참고: 장소 사진을 표시할 때는 항상 저작자 표시 가이드라인을 따라야 합니다. 자세한 내용은 저작자 표시 [https://developers.google.com/maps/documentation/places/ios-sdk/legacy/photos?hl=ko#attributions]를 참고하세요.
샘플 코드

다음 예시 메서드는 장소 ID를 가져와 반환된 목록의 첫 번째 사진을 가져옵니다. 이 메서드를 자체 앱에서 만들 메서드의 템플릿으로 사용할 수 있습니다.

Swift
self.lblText?.attributedText = photoMetadata.attributions;
Objective-C
GMSPlaceField fields = (GMSPlaceFieldPhotos);

NSString *placeId = @"INSERT_PLACE_ID_HERE";

[_placesClient fetchPlaceFromPlaceID:placeId placeFields:fields sessionToken:nil callback:^(GMSPlace * _Nullable place, NSError * _Nullable error) {
if (error != nil) {
NSLog(@"An error occurred %@", [error localizedDescription]);
return;
GMSPlacePhotoMetadata *photoMetadata = [place photos][0];
[self->_placesClient loadPlacePhoto:photoMetadata callback:^(UIImage * _Nullable photo, NSError * _Nullable error) {
if (error != nil) {
NSLog(@"Error loading photo metadata: %@", [error localizedDescription]);
return;
self->lblText.attributedText = photoMetadata.attributions;