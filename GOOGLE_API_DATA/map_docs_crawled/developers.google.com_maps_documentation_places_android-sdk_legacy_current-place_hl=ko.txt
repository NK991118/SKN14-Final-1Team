Source URL: https://developers.google.com/maps/documentation/places/android-sdk/legacy/current-place?hl=ko
Title: 현재 장소

의견 보내기

현재 장소

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

유럽 경제 지역 (EEA) 개발자

청구서 수신 주소가 유럽 경제 지역에 있는 경우 2025년 7월 8일부터 서비스 사용 시 Google Maps Platform EEA 서비스 약관 [https://cloud.google.com/terms/maps-platform/eea?hl=ko]이 적용됩니다. 기능은 리전에 따라 다릅니다.
자세히 알아보기 [https://developers.google.com/maps/comms/eea/faq?hl=ko]

Android용 Places SDK를 사용하면 현재 보고된 기기 위치에서 장소를 찾을 수 있습니다. 장소의 예로는 지역 비즈니스, 관심 장소, 지리적 위치가 있습니다.

참고: 안내형 실습 튜토리얼을 진행하려면 현재 위치 튜토리얼 [https://developers.google.com/maps/documentation/android-sdk/current-place-tutorial?hl=ko]을 참고하세요.

권한

라이브러리를 사용하기 위해 앱의 매니페스트에서 추가 권한을 선언할 필요가 없습니다. 라이브러리는 매니페스트에서 사용하는 모든 권한을 선언하기 때문입니다. 그러나 앱에서 PlacesClient.findCurrentPlace() [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#findCurrentPlace(com.google.android.libraries.places.api.net.FindCurrentPlaceRequest)]를 사용하는 경우 런타임에 위치 정보 액세스 권한을 요청 [https://developer.android.com/training/location/permissions?hl=ko]해야 합니다.

앱이 PlacesClient.findCurrentPlace()를 사용하지 않는 경우 매니페스트에 다음을 추가하여 라이브러리에서 도입된 ACCESS_FINE_LOCATION 및 ACCESS_COARSE_LOCATION 권한을 명시적으로 삭제합니다.

<manifest ... xmlns:tools="http://schemas.android.com/tools">
...
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" tools:node="remove"/>
<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" tools:node="remove"/>
...
</manifest>

권한 [https://developer.android.com/guide/topics/permissions/overview?hl=ko]에 관해 자세히 알아보고 시작하려면 EasyPermissions [https://github.com/googlesamples/easypermissions]를 사용하는 것이 좋습니다.

현재 위치 가져오기

기기가 현재 위치한 지역 비즈니스 또는 기타 장소를 찾으려면 다음 단계를 따르세요.

ContextCompat.checkSelfPermission [https://developer.android.com/reference/android/support/v4/content/ContextCompat.html?hl=ko#checkSelfPermission(android.content.Context,%20java.lang.String)]를 호출하여 사용자가 기기 위치에 액세스할 수 있는 권한을 부여했는지 확인합니다. 또한 앱에는 사용자에게 권한을 요청하고 결과를 처리하는 코드가 포함되어야 합니다.
자세한 내용은 앱 권한 요청 [https://developer.android.com/training/permissions/requesting?hl=ko]을 참고하세요.
앱에서 요청해야 하는 장소 데이터 유형을 지정하는 Place.Field의 List를 전달하여 FindCurrentPlaceRequest [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/net/FindCurrentPlaceRequest?hl=ko]를 만듭니다.
이전 단계에서 만든 FindCurrentPlaceRequest를 전달하여 PlacesClient.findCurrentPlace() [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#findCurrentPlace(com.google.android.libraries.places.api.net.FindCurrentPlaceRequest)]를 호출합니다.
FindCurrentPlaceResponse [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/net/FindCurrentPlaceResponse?hl=ko]에서 PlaceLikelihood [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/model/PlaceLikelihood?hl=ko] 목록을 가져옵니다.

참고: PlacesClient.fetchPlace() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#fetchPlace(com.google.android.libraries.places.api.net.FetchPlaceRequest)]는 모든 장소 세부정보를 지원하지만 PlacesClient.findCurrentPlace() [https://developers.google.com/maps/documentation/places/android-sdk/legacy/reference/com/google/android/libraries/places/api/net/PlacesClient?hl=ko#findCurrentPlace(com.google.android.libraries.places.api.net.FindCurrentPlaceRequest)]는 장소 세부정보의 하위 집합만 지원합니다. findCurrentPlace()에서 지원되지 않는 필드 목록은 Android용 Places SDK 필드 지원 [https://developers.google.com/maps/documentation/places/android-sdk/legacy/place-data-fields?hl=ko#places-sdk-for-android-fields-support]을 참고하세요.

필드는 장소 검색 결과에 해당하며 기본, 연락처, 분위기 등 세 결제 카테고리로 분류됩니다. 기본 필드에는 기본 요율로 청구되며 추가 요금이 발생하지 않습니다. 연락처 및 분위기 필드에는 더 높은 요율로 청구됩니다. 장소 데이터 요청에 대해 요금이 청구되는 방법에 대한 자세한 내용은 사용량 및 결제 [https://developers.google.com/maps/documentation/places/android-sdk/usage-and-billing?hl=ko]를 참고하세요.

API는 Task [https://developers.google.com/android/reference/com/google/android/gms/tasks/Task?hl=ko]에 FindCurrentPlaceResponse [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/net/FindCurrentPlaceResponse?hl=ko]를 반환합니다.
FindCurrentPlaceResponse에는 기기가 있을 가능성이 높은 장소를 나타내는 PlaceLikelihood [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/model/PlaceLikelihood?hl=ko] 객체 목록이 포함되어 있습니다. 각 장소의 결과에는 장소가 올바른 장소일 가능성을 나타내는 표시가 포함됩니다. 지정된 기기 위치에 해당하는 알려진 장소가 없는 경우 목록이 비어 있을 수 있습니다.

PlaceLikelihood.getPlace() [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/model/PlaceLikelihood?hl=ko#getPlace()]를 호출하여 Place [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/model/Place?hl=ko] 객체를 가져오고 PlaceLikelihood.getLikelihood() [https://developers.google.com/maps/documentation/places/android-sdk/reference/com/google/android/libraries/places/api/model/PlaceLikelihood?hl=ko#getLikelihood()]를 호출하여 장소의 가능성 등급을 가져올 수 있습니다. 값이 클수록 장소가 가장 일치할 가능성이 높습니다.

다음 코드 샘플은 기기가 있을 가능성이 가장 높은 장소 목록을 검색하고 각 장소의 이름과 가능성을 기록합니다.

Kotlin
PackageManager.PERMISSION_GRANTED) {

val placeResponse = placesClient.findCurrentPlace(request)
placeResponse.addOnCompleteListener { task ->
if (task.isSuccessful) {
val response = task.result
for (placeLikelihood: PlaceLikelihood in response?.placeLikelihoods ?: emptyList()) {
Log.i(
TAG,
"Place '${placeLikelihood.place.name}' has likelihood: ${placeLikelihood.likelihood}"
if (exception is ApiException) {
Log.e(TAG, "Place not found: ${exception.statusCode}")
List<Place.Field> placeFields = Collections.singletonList(Place.Field.NAME);

FindCurrentPlaceRequest request = FindCurrentPlaceRequest.newInstance(placeFields);

Task<FindCurrentPlaceResponse> placeResponse = placesClient.findCurrentPlace(request);
placeResponse.addOnCompleteListener(task -> {
if (task.isSuccessful()){
FindCurrentPlaceResponse response = task.getResult();
for (PlaceLikelihood placeLikelihood : response.getPlaceLikelihoods()) {
Log.i(TAG, String.format("Place '%s' has likelihood: %f",
placeLikelihood.getPlace().getName(),
placeLikelihood.getLikelihood()));
Exception exception = task.getException();
if (exception instanceof ApiException) {
ApiException apiException = (ApiException) exception;
Log.e(TAG, "Place not found: " + apiException.getStatusCode());