Source URL: https://developers.google.com/maps/documentation/android-sdk/examples/my-location?hl=ko
Title: 내 위치 표시

의견 보내기

내 위치 표시

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 예시에서는 내 위치 레이어를 사용 설정하는 방법을 보여주고 내 위치 버튼을 활용하여 기기의 현재 위치를 파란색 점으로 지도에 표시합니다.

자세한 내용은 문서 [https://developers.google.com/maps/documentation/android-sdk/location?hl=ko#the_my_location_layer]를 참고하세요.

시작하기

샘플 코드를 사용하기 전에 개발 환경을 구성해야 합니다.
자세한 내용은 Android용 Maps SDK 코드 샘플 [https://developers.google.com/maps/documentation/android-sdk/examples?hl=ko]을 참고하세요.

코드 보기

Kotlin

class MyLocationDemoActivity : AppCompatActivity(),
OnMyLocationButtonClickListener,
OnMyLocationClickListener, OnMapReadyCallback,
OnRequestPermissionsResultCallback {
/**
* Flag indicating whether a requested permission has been denied after returning in
* [.onRequestPermissionsResult].
*/
private var permissionDenied = false
private lateinit var map: GoogleMap
override fun onCreate(savedInstanceState: Bundle?) {
super.onCreate(savedInstanceState)
setContentView(R.layout.my_location_demo)
val mapFragment =
supportFragmentManager.findFragmentById(R.id.map) as SupportMapFragment?
mapFragment?.getMapAsync(this)
googleMap.setOnMyLocationButtonClickListener(this)
googleMap.setOnMyLocationClickListener(this)
enableMyLocation()
this,
Manifest.permission.ACCESS_FINE_LOCATION
) == PackageManager.PERMISSION_GRANTED || ContextCompat.checkSelfPermission(
this,
Manifest.permission.ACCESS_COARSE_LOCATION
) == PackageManager.PERMISSION_GRANTED
) {
map.isMyLocationEnabled = true
return
this,
Manifest.permission.ACCESS_FINE_LOCATION
) || ActivityCompat.shouldShowRequestPermissionRationale(
this,
Manifest.permission.ACCESS_COARSE_LOCATION
) {
PermissionUtils.RationaleDialog.newInstance(
LOCATION_PERMISSION_REQUEST_CODE, true
).show(supportFragmentManager, "dialog")
return
ActivityCompat.requestPermissions(
this,
arrayOf(
Manifest.permission.ACCESS_FINE_LOCATION,
Manifest.permission.ACCESS_COARSE_LOCATION
),
LOCATION_PERMISSION_REQUEST_CODE
Toast.makeText(this, "MyLocation button clicked", Toast.LENGTH_SHORT)
.show()
requestCode: Int,
permissions: Array<String>,
grantResults: IntArray
) {
if (requestCode != LOCATION_PERMISSION_REQUEST_CODE) {
super.onRequestPermissionsResult(
requestCode,
permissions,
grantResults
return
permissions,
grantResults,
Manifest.permission.ACCESS_FINE_LOCATION
) || isPermissionGranted(
permissions,
grantResults,
Manifest.permission.ACCESS_COARSE_LOCATION
) {
if (permissionDenied) {
permissionDenied = false

public class MyLocationDemoActivity extends AppCompatActivity
implements
OnMyLocationButtonClickListener,
OnMyLocationClickListener,
OnMapReadyCallback,
ActivityCompat.OnRequestPermissionsResultCallback {

/**
* Request code for location permission request.
* @see #onRequestPermissionsResult(int, String[], int[])
*/
private static final int LOCATION_PERMISSION_REQUEST_CODE = 1;

/**
* Flag indicating whether a requested permission has been denied after returning in {@link
* #onRequestPermissionsResult(int, String[], int[])}.
*/
private boolean permissionDenied = false;

private GoogleMap map;

@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.my_location_demo);

SupportMapFragment mapFragment =
(SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);
mapFragment.getMapAsync(this);
map.setOnMyLocationButtonClickListener(this);
map.setOnMyLocationClickListener(this);
enableMyLocation();
== PackageManager.PERMISSION_GRANTED
|| ContextCompat.checkSelfPermission(this, permission.ACCESS_COARSE_LOCATION)
== PackageManager.PERMISSION_GRANTED) {
map.setMyLocationEnabled(true);
return;
PermissionUtils.requestLocationPermissions(this, LOCATION_PERMISSION_REQUEST_CODE, true);
Toast.makeText(this, "MyLocation button clicked", Toast.LENGTH_SHORT).show();
Toast.makeText(this, "Current location:\n" + location, Toast.LENGTH_LONG).show();
@NonNull int[] grantResults) {
if (requestCode != LOCATION_PERMISSION_REQUEST_CODE) {
super.onRequestPermissionsResult(requestCode, permissions, grantResults);
return;
Manifest.permission.ACCESS_FINE_LOCATION) || PermissionUtils
.isPermissionGranted(permissions, grantResults,
Manifest.permission.ACCESS_COARSE_LOCATION)) {
if (permissionDenied) {
permissionDenied = false;
PermissionUtils.PermissionDeniedDialog
.newInstance(true).show(getSupportFragmentManager(), "dialog");
Android 스튜디오에서 File > New > Import Project를 선택합니다.
저장소를 저장한 위치로 이동하여 Kotlin 또는 Java를 위한 프로젝트 디렉터리를 선택합니다.

Kotlin: PATH-REPO/android-samples/ApiDemos/kotlin
Java: PATH-REPO/android-samples/ApiDemos/java

열기를 선택합니다. Android 스튜디오에서 Gradle 빌드 도구를 사용하여 프로젝트를 빌드합니다.
프로젝트의 local.properties 파일과 동일한 디렉터리에서 빈 secrets.properties 파일을 만듭니다. 자세한 내용은 프로젝트에 직접 생성한 API 키 추가하기 [https://developers.google.com/maps/documentation/android-sdk/config?hl=ko#step_3_add_your_api_key_to_the_project]를 참고하세요.
다음 문자열을 secrets.properties에 추가합니다(YOUR_API_KEY는 API 키의 값으로 변경).
MAPS_API_KEY=YOUR_API_KEY
앱을 실행합니다.

의견 보내기