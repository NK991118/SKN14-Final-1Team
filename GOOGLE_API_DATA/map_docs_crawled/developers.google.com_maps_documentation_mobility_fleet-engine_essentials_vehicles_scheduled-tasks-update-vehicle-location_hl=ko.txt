Source URL: https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/vehicles/scheduled-tasks-update-vehicle-location?hl=ko
Title: 배송 차량 위치 업데이트

배송 차량 위치 업데이트

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

참고: 차량 요청을 구성하기 전에 소개의 차량 요청 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/vehicles?hl=ko#vehicle_requests]에 있는 요구사항을 읽어보세요.
접근 방식

Fleet Engine의 최적 성능을 위해 차량 위치 업데이트 스트림을 최소 1분마다 한 번, 최대 5초마다 한 번 제공하세요.
다음 방법 중 하나를 사용하여 이러한 업데이트를 제공하세요.

Driver SDK [https://developers.google.com/maps/documentation/mobility/driver-sdk/scheduled?hl=ko] 사용: 가장 간단한 옵션입니다.
맞춤 코드 사용: 위치가 백엔드를 통해 전달되거나 Android 또는 iOS 이외의 기기를 사용하는 경우에 유용합니다. 이 문서에서는 이 접근 방식을 다룹니다.

차량 위치 업데이트를 제공하는 방식과 관계없이 백엔드는 배송 차량이 정류장으로 이동 중일 때와 정류장에 도착했을 때 Fleet Engine을 업데이트해야 합니다. 여기에는 창고 자체가 포함됩니다. Fleet Engine은 이러한 이벤트를 자동으로 감지하지 않습니다.

차량 위치 업데이트 예시

Java gRPC 라이브러리 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/client-libraries-tasks?hl=ko#java]를 사용하여 Fleet Engine에서 차량의 위치를 업데이트하거나 REST를 사용할 수 있습니다.

자바  static final String PROJECT_ID = "my-delivery-co-gcp-project";
static final String VEHICLE_ID = "vehicle-8241890";

DeliveryServiceBlockingStub deliveryService =
DeliveryServiceGrpc.newBlockingStub(channel);

String vehicleName = "providers/" + PROJECT_ID + "/deliveryVehicles/" + VEHICLE_ID;
DeliveryVehicle myDeliveryVehicle = DeliveryVehicle.newBuilder()
.setLastLocation(DeliveryVehicleLocation.newBuilder()
.setSupplementalLocation(LatLng.newBuilder()
.setLatitude(37.3382)
.setLongitude(121.8863))
.setSupplementalLocationTime(now())
.setSupplementalLocationSensor(DeliveryVehicleLocationSensor.CUSTOMER_SUPPLIED_LOCATION)
.setSupplementalLocationAccuracy(DoubleValue.of(15.0)))  // Optional
.build();

UpdateDeliveryVehicleRequest updateDeliveryVehicleRequest =
UpdateDeliveryVehicleRequest.newBuilder()  // No need for the header
.setName(vehicleName)
.setDeliveryVehicle(myDeliveryVehicle)
.setUpdateMask(FieldMask.newBuilder()
.addPaths("last_location"))
.build();

try {
DeliveryVehicle updatedDeliveryVehicle =
deliveryService.updateDeliveryVehicle(updateDeliveryVehicleRequest);
Status s = e.getStatus();
switch (s.getCode()) {
case NOT_FOUND:
break;
case PERMISSION_DENIED:
break;

다음 단계

배송 차량 구하기 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/vehicles/scheduled-tasks-get-vehicle?hl=ko]