Source URL: https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource?hl=ko
Title: GooglePlaces Framework Reference

Send feedback

GooglePlaces Framework Reference

Stay organized with collections

Save and categorize content based on your preferences.

GMSAutocompleteTableDataSource

@interface GMSAutocompleteTableDataSource
: NSObject <UITableViewDataSource, UITableViewDelegate>

GMSAutocompleteTableDataSource provides an interface for providing place autocomplete
predictions to populate a UITableView by implementing the UITableViewDataSource and
UITableViewDelegate protocols.

GMSAutocompleteTableDataSource is designed to be used as the data source for a
UISearchDisplayController.

NOTE: UISearchDisplayController has been deprecated since iOS 8. It is now recommended to use
UISearchController with GMSAutocompleteResultsViewController [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteResultsViewController.html] to display autocomplete results
using the iOS search UI.

Set an instance of GMSAutocompleteTableDataSource as the searchResultsDataSource and
searchResultsDelegate properties of UISearchDisplayController. In your implementation of
shouldReloadTableForSearchString, call sourceTextHasChanged with the current search string.

Use the GMSAutocompleteTableDataSourceDelegate [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Protocols/GMSAutocompleteTableDataSourceDelegate.html] delegate protocol to be notified when a place is
selected from the list. Because autocomplete predictions load asynchronously, it is necessary
to implement didUpdateAutocompletePredictions and call reloadData on the
UISearchDisplayControllerâ€˜s table view.

delegate [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(py)delegate]

Delegate to be notified when a place is selected or picking is cancelled.

Declaration

Swift
@IBOutlet weak var delegate: (any GMSAutocompleteTableDataSourceDelegate [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Protocols/GMSAutocompleteTableDataSourceDelegate.html])? { get set }

Objective-C
@property (nonatomic, weak, nullable) id<GMSAutocompleteTableDataSourceDelegate [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Protocols/GMSAutocompleteTableDataSourceDelegate.html]> delegate;

autocompleteFilter [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(py)autocompleteFilter]

Filter to apply to autocomplete suggestions (can be nil).

Declaration

Swift
Objective-C
@property (nonatomic, strong, nullable) GMSAutocompleteFilter [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteFilter.html] *autocompleteFilter;

tableCellBackgroundColor [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(py)tableCellBackgroundColor]

The background color of table cells.

Declaration

Swift
Objective-C
@property (nonatomic, strong) UIColor *_Nonnull tableCellBackgroundColor;

tableCellSeparatorColor [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(py)tableCellSeparatorColor]

The color of the separator line between table cells.

Declaration

Swift
Objective-C
@property (nonatomic, strong) UIColor *_Nonnull tableCellSeparatorColor;

primaryTextColor [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(py)primaryTextColor]

The color of result name text in autocomplete results

Declaration

Swift
Objective-C
@property (nonatomic, strong) UIColor *_Nonnull primaryTextColor;

primaryTextHighlightColor [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(py)primaryTextHighlightColor]

The color used to highlight matching text in autocomplete results

Declaration

Swift
Objective-C
@property (nonatomic, strong) UIColor *_Nonnull primaryTextHighlightColor;

secondaryTextColor [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(py)secondaryTextColor]

The color of the second row of text in autocomplete results.

Declaration

Swift
Objective-C
@property (nonatomic, strong) UIColor *_Nonnull secondaryTextColor;

tintColor [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(py)tintColor]

The tint color applied to controls in the Autocomplete view.

Declaration

Swift
Objective-C
@property (nonatomic, strong, nullable) UIColor *tintColor;

placeFields [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(py)placeFields]

The GMSPlaceField [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Enums/GMSPlaceField.html] for specifying explicit place details to be requested. Default returns
all available fields.

Declaration

Swift
Objective-C
@property (nonatomic) GMSPlaceField [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Enums/GMSPlaceField.html] placeFields;

placeProperties [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(py)placeProperties]

The GMSPlaceProperty [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Type-Definitions/GMSPlaceProperty.html] for specifying explicit place details to be requested. Default returns
all available properties.

Declaration

Swift
Objective-C
@property (nonatomic, strong) NSArray<NSString *> *_Nonnull placeProperties;

-init [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(im)init]

Initializes a data source.

Declaration

Swift
init()

Objective-C
- (nonnull instancetype)init;

-sourceTextHasChanged: [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(im)sourceTextHasChanged:]

Notify the data source that the source text to autocomplete has changed.

This method should only be called from the main thread. Calling this method from another thread
will result in undefined behavior. Calls to GMSAutocompleteTableDataSourceDelegate [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Protocols/GMSAutocompleteTableDataSourceDelegate.html] methods will
also be called on the main thread.

This method is non-blocking.

Declaration

Swift
func sourceTextHasChanged(_ text: String?)

Objective-C
- (void)sourceTextHasChanged:(nullable NSString *)text;

Parameters
| text | The partial text to autocomplete. |
| --- | --- |

-clearResults [https://developers.google.com/maps/documentation/places/ios-sdk/reference/objc/Classes/GMSAutocompleteTableDataSource#/c:objc(cs)GMSAutocompleteTableDataSource(im)clearResults]

Clear all predictions.

NOTE: This will call the two delegate methods below:

didUpdateAutocompletePredictionsForResultsController:
didRequestAutocompletePredictionsForResultsController:

The implementation of this method is guaranteed to call these synchronously and in-order.

Declaration

Swift
func clearResults()

Objective-C
- (void)clearResults;

Send feedback