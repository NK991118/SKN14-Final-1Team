Source URL: https://developers.google.com/maps/documentation/places/android-sdk/start?hl=ko
Title: Android 스튜디오 프로젝트 설정

의견 보내기

Android 스튜디오 프로젝트 설정

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

알림: Android용 Places SDK 버전 2.0.0 이상은 AndroidX [https://developer.android.com/jetpack/androidx?hl=ko]에 종속됩니다.
이 버전부터 이전 지원 라이브러리는 더 이상 지원되지 않습니다. 호환성을 유지하려면 AndroidX를 사용하도록 프로젝트를 이전해야 합니다.

Android용 Places SDK를 사용하도록 앱을 구성하려면 다음 단계를 따르세요. Android용 Places SDK를 사용하는 모든 앱에 필요합니다.

1단계: Android 스튜디오 설정하기

이 문서에서는 Android 스튜디오 Hedgehog [https://developer.android.com/studio/install.html?hl=ko] 및
Android Gradle 플러그인 [https://developer.android.com/build/releases/gradle-plugin?hl=ko]
버전 8.2를 사용하는 개발 환경을 설명합니다.

참고: 개발 환경에서 다른 버전의 Android 스튜디오 또는 Gradle을 사용하는 경우 이러한 버전에 따라 단계를 수정해야 할 수도 있습니다. Android 스튜디오 및 Gradle 버전에 대한 자세한 내용은 Android Gradle 플러그인 및 Android 스튜디오 호환성 [https://developer.android.com/build/releases/gradle-plugin?hl=ko#android_gradle_plugin_and_android_studio_compatibility]을 참고하세요.

2단계: SDK 설정

Android용 Places SDK 라이브러리는 Google의 Maven 저장소 [https://maven.google.com/?hl=ko]를 통해 사용할 수 있습니다. 앱에
SDK를 추가하려면 다음 지침을 따르세요.

최상위 수준 settings.gradle.kts 파일의 pluginManagement 블록 아래에 Gradle 플러그인 포털 [https://plugins.gradle.org/], Google Maven 저장소 [https://maven.google.com/web/index.html?hl=ko], Maven 중앙 저장소 [https://search.maven.org/artifact]를 포함합니다. pluginManagement 블록은 스크립트의 모든 문 앞에 표시되어야 합니다.

pluginManagement {
repositories {
gradlePluginPortal()
google()
mavenCentral()
repositories {
google()
mavenCentral()
dependencies {
implementation(platform("org.jetbrains.kotlin:kotlin-bom:$kotlin_version"))
implementation("com.google.android.libraries.places:places:3.5.0")
dependencies {

android {
compileSdk 34

defaultConfig {
minSdk 23
android {
compileSdk = 34

defaultConfig {
minSdk = 23
android {
android {
Google 지도 프로젝트에 Android용 Secrets Gradle 플러그인을 설치하려면 다음 단계를 따르세요.

Android 스튜디오에서 최상위 수준 build.gradle.kts 또는 build.gradle 파일을 열고 다음 코드를 buildscript 아래 dependencies 요소에 추가합니다.

Kotlin
buildscript {
dependencies {
classpath("com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:2.0.1")
buildscript {
dependencies {
classpath "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:2.0.1"
plugins {
plugins {

최상위 수준 디렉터리에서 secrets.properties 파일과 동일한 폴더에 local.defaults.properties 파일을 만든 후 다음 코드를 추가합니다.

참고: 아래에 표시된 대로 코드를 입력하세요. DEFAULT_API_KEY를 API 키로 바꾸지 마세요.

PLACES_API_KEY=DEFAULT_API_KEY

이 파일의 목적은 secrets.properties 파일이 없는 경우 빌드에 실패하지 않도록 API 키의 백업 위치를 제공하는 것입니다. 이는 버전 제어 시스템에서 secrets.properties가 빠진 앱을 복제하거나 API 키를 제공하는 secrets.properties 파일을 아직 로컬에서 생성하지 않은 경우 발생할 수 있습니다.

Android 스튜디오에서 모듈 수준 build.gradle.kts 또는 build.gradle 파일을 열고 secrets 속성을 수정합니다. secrets 속성이 없는 경우 추가합니다.

플러그인의 속성을 수정하여 propertiesFileName를 secrets.properties로, defaultPropertiesFileName를 local.defaults.properties로 설정하고 다른 속성을 설정합니다.

Kotlin
secrets {

secrets {

Android용 Places SDK를 사용하는 앱을 실행하려면 Google API를 포함하는 Android 5.0 이상의 Android 기기 또는 Android 에뮬레이터에 앱을 배포해야 합니다.

Android 기기를 사용하려면 하드웨어 기기에서
앱 실행 [https://developer.android.com/studio/run/device.html?hl=ko]의 안내를 따르세요.
Android Emulator를 사용하려면 Android 스튜디오와 함께 제공되는
Android Virtual Device(AVD) Manager [https://developer.android.com/studio/run/managing-avds.html?hl=ko]를 이용해 가상 기기를 만들고 에뮬레이터를 설치하면 됩니다.

참고: Android Emulator를 사용하는 경우
Play 아이콘 이 있고 Play 스토어 열 아래 표시된 기기를 선택해야 합니다.
이 아이콘은 프로필이 CTS [https://source.android.com/compatibility/cts?hl=ko]의 모든 요건을 충족하며 Play 스토어 앱이 포함된 시스템 이미지를 사용할 수 있음을 나타냅니다.

다음 단계

프로젝트가 구성되면 샘플 앱 [https://developers.google.com/maps/documentation/places/android-sdk/examples?hl=ko]을 살펴볼 수 있습니다.

의견 보내기