Source URL: https://developers.google.com/maps/documentation/android-sdk/dds-boundaries/handle-events?hl=ko
Title: 클릭 이벤트 처리

의견 보내기

클릭 이벤트 처리

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/android-sdk/dds-boundaries/handle-events?hl=ko]

iOS [https://developers.google.com/maps/documentation/ios-sdk/dds-boundaries/handle-events?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/dds-boundaries/handle-events?hl=ko]

지형지물 레이어가 사용자 click 이벤트에 응답하여 클릭된 경계의 장소 ID와 지형지물 유형을 가져오도록 할 수 있습니다. 다음 예시 지도에는 국가 레이어의 경계, 선택한 국가와 연결된 클릭된 다각형의 스타일을 지정하는 이벤트 핸들러가 표시됩니다.

클릭 이벤트 핸들러 작성

지형지물 레이어에서 클릭 이벤트가 발생하면 Android용 Maps SDK는 FeatureClickEvent [https://developers.google.com/android/reference/com/google/android/gms/maps/model/FeatureClickEvent?hl=ko] 객체를 이벤트 핸들러에 전달합니다. FeatureClickEvent를 사용하여 클릭의 위도 및 경도 좌표와 클릭의 영향을 받는 기능 목록을 가져옵니다.

지형지물 레이어 이벤트 처리

다음 단계에 따라 지형지물 레이어에서 이벤트를 처리합니다. 이 예에서는 선택한 국가를 나타내는 다각형에 빨간색 채우기를 적용하기 위해 국가 피처 레이어의 클릭 이벤트 핸들러를 정의합니다.

FeatureLayer.setFeatureStyle() [https://developers.google.com/android/reference/com/google/android/gms/maps/model/FeatureLayer?hl=ko#setFeatureStyle(com.google.android.gms.maps.model.FeatureLayer.StyleFactory)]를 호출하면 스타일 팩토리 함수가 지형지물 레이어의 모든 지형지물에 스타일을 설정합니다. 이벤트 핸들러에서 지형지물의 스타일을 업데이트하려면 FeatureLayer.setFeatureStyle()를 호출하여 모든 지형지물에 업데이트된 스타일을 설정해야 합니다.

새 지도 ID와 지도 스타일을 아직 만들지 않았다면 시작하기 [https://developers.google.com/maps/documentation/android/dds-boundaries/start?hl=ko]의 단계에 따라 만드세요. 국가 지형지물 레이어를 사용 설정해야 합니다.
클래스가 FeatureLayer.OnFeatureClickListener [https://developers.google.com/android/reference/com/google/android/gms/maps/model/FeatureLayer.OnFeatureClickListener?hl=ko]을 구현하는지 확인합니다.
FeatureLayer.addOnFeatureClickListener() [https://developers.google.com/android/reference/com/google/android/gms/maps/model/FeatureLayer?hl=ko#addOnFeatureClickListener(com.google.android.gms.maps.model.FeatureLayer.OnFeatureClickListener)]를 호출하여 지형지물 클릭 이벤트의 이벤트 핸들러를 등록합니다.

자바
private FeatureLayer countryLayer;
@Override
public void onMapReady(GoogleMap map) {
.featureType(FeatureType.COUNTRY)
.build());
private var countryLayer: FeatureLayer? = null
override fun onMapReady(googleMap: GoogleMap) {
.featureType(FeatureType.COUNTRY)
.build())
List<String> selectedPlaceIds = getPlaceIds(event.getFeatures());
if (!selectedPlaceIds.isEmpty()) {
FeatureLayer.StyleFactory styleFactory = (Feature feature) -> {
List<String> placeIds = new ArrayList<>();
for (Feature feature : features) {
if (feature instanceof PlaceFeature) {
placeIds.add(((PlaceFeature) feature).getPlaceId());
if (!selectedPlaceIds.isEmpty()) {
val styleFactory = FeatureLayer.StyleFactory { feature: Feature ->