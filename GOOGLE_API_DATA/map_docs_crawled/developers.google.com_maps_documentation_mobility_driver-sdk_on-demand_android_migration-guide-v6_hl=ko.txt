Source URL: https://developers.google.com/maps/documentation/mobility/driver-sdk/on-demand/android/migration-guide-v6?hl=ko
Title: Android Driver SDK 6.0 이전 가이드

Android Driver SDK 6.0 이전 가이드

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

DriverStatusListener 인터페이스로 마이그레이션

드라이버 v5에서는 DriverStatusListener을 위해 StatusListener 인터페이스를 지원 중단한다고 발표했습니다. 올해 StatusListener 인터페이스가 공식적으로 삭제됩니다. 새 인터페이스로의 이전 가이드는 StatusListener 지원 중단 [https://developers.google.com/maps/documentation/mobility/driver-sdk/on-demand/android/migration-guide-v5?hl=ko#statuslistener_deprecation]을 참고하세요.

Kotlin 2.0으로 이전

Android 6.0 이상의 Driver SDK를 사용하는 경우 Kotlin 2.0으로 업그레이드해야 합니다. 이 페이지에서는 새 Kotlin 버전으로의 전환을 용이하게 하는 가이드를 제공합니다.
참고: Driver SDK 5.0 이상에 필요한 Kotlin 1.9로 업그레이드하는 방법에 관한 자세한 내용은 Kotlin 1.9 업그레이드 가이드 [https://developers.google.com/maps/documentation/mobility/driver-sdk/on-demand/android/migration-guide-v5?hl=ko#kotlin_16_to_19_migration]를 참고하세요.
Gradle 및 AGP 호환성

Kotlin 2.0에는 Gradle 및 Android Gradle 플러그인 (AGP) 버전의 최소 및 최대 버전 요구사항 [https://kotlinlang.org/docs/gradle-configure-project.html#apply-the-plugin]이 있습니다. 프로젝트가 Kotlin 2.0의 다음 요구사항을 충족하는지 확인하세요.

드라이버 SDK 6.0 이상의 AGP 최소 버전

드라이버 SDK 6.0과 함께 AGP 7.3 이상을 사용하는 것이 좋습니다.

전체 R8 모드

Driver SDK v6 이하에서는 전체 R8 모드를 지원하지 않습니다. 애플리케이션이 AGP 8.0 이상을 타겟팅하는 경우 전체 R8 모드를 명시적으로 사용 중지해야 합니다.
# settings.gradle
android.enableR8.fullMode=false

Kotlin 버전 호환성

Kotlin은 이전 언어 버전 3개 [https://kotlinlang.org/docs/kotlin-evolution-principles.html#compatibility-options]와의 하위 호환성을 지원합니다.
즉, 이미 드라이버 SDK와 함께 Kotlin 1.7 이상을 사용하고 있다면 모든 호환성 중단 변경사항을 해결하지 않고도 Kotlin 2.0으로 업그레이드할 수 있습니다. 하지만 Kotlin 호환성은 안정적인 언어 기능에만 적용됩니다 [https://kotlinlang.org/docs/components-stability.html#stability-levels-explained].
Kotlin 언어에서 알파, 베타 또는 실험용 기능을 사용하는 경우 업그레이드할 때 추가 변경사항이 필요할 수 있습니다.

Kotlin 호환성 플래그

이전 섹션에서 설명한 대로 Kotlin은 업그레이드 시 최대 3개의 이전 언어 버전을 지원합니다. Kotlin은 호환성을 파괴하는 변경사항을 제한하는 데 도움이 되는 두 가지 플래그를 제공합니다 [https://kotlinlang.org/docs/compatibility-modes.html].

언어 버전 X.Y

이 플래그는 이전 Kotlin 버전의 동작에 대한 호환성이 깨지는 변경사항을 되돌립니다.
예를 들어 Kotlin 1.7을 사용하는 경우 [ -
language-version 1.7]을 지정하면 새로운 호환성 중단 변경사항이 더 이상 적용되지 않습니다.
android {
kotlinOptions {
languageVersion = '1.7'

이 플래그는 종속 다운스트림 코드가 Kotlin 2.0을 통합할 준비가 되기 전에 새 API가 사용되지 않도록 합니다.
android {
kotlinOptions {
apiVersion = '1.7'
Kotlin 호환성 플래그를 사용하는 것 외에도 Kotlin 출시 노트를 검토하고 업그레이드하는 버전에서 유지하려는 동작을 선택하는 것이 좋습니다. Kotlin은 각 버전의 호환성 가이드에서 호환성이 깨지는 변경사항 목록과 원래 동작을 유지하기 위해 설정할 수 있는 플래그를 제공합니다.

1.8 호환성 가이드 [https://kotlinlang.org/docs/compatibility-guide-18.html]
1.9 호환성 가이드 [https://kotlinlang.org/docs/compatibility-guide-19.html]
2.0 호환성 가이드 [https://kotlinlang.org/docs/compatibility-guide-20.html]