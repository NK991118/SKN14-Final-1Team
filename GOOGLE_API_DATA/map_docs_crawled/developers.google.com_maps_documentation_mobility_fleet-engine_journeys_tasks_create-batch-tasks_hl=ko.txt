Source URL: https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/create-batch-tasks?hl=ko
Title: 일괄 작업 만들기

일괄 작업 만들기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 문서에서는 gRPC 또는 REST를 사용하여 서버 환경에서 작업 일괄 처리를 만드는 방법을 보여줍니다. 작업 만들기에 대한 자세한 내용은 다음을 참고하세요.

배송 작업 만들기 [https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/create-shipment-tasks?hl=ko]
다른 유형의 작업 만들기 [https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/create-other-tasks?hl=ko]

태스크를 일괄적으로 생성하기 위한 태스크 필드

일괄적으로 작업을 만들 때 requests의 각 CreateTasksRequest 요소는 단일 작업에 대한 CreateTask 요청과 동일한 검증 규칙을 통과해야 합니다. 단, parent 및 header 필드는 선택사항입니다.
설정된 경우 최상위 수준 BatchCreateTasksRequest의 해당 필드와 동일해야 합니다.

자세한 내용은 gRPC [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rpc/maps.fleetengine.delivery.v1?hl=ko#maps.fleetengine.delivery.v1.DeliveryService] 또는 REST [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rest/v1/providers.tasks/batchCreate?hl=ko]용 BatchCreateTasks의 API 참조 문서를 참고하세요.

필수 일괄 필드

| 필드 | 값 |
| --- | --- |
| 요청 | Array<CreateTasksRequest> |

선택적 일괄 작업 필드

| 필드 | 값 |
| --- | --- |
| 헤더 | DeliveryRequestHeader |

작업 일괄 만들기

다음 예에서는 Java gRPC 라이브러리 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/client-libraries-tasks?hl=ko#java]를 사용하여 픽업 및 배송 작업을 모두 만드는 방법 또는 BatchCreateTask [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rest/v1/providers.tasks/batchCreate?hl=ko]에 HTTP REST 요청을 만드는 방법을 보여줍니다. 올바른 JWT 구문은 JWT 요소 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/set-up-fleet/jwt?hl=ko#jwt-elements]를 참고하세요.

gRPCstatic final String PROJECT_ID = "my-delivery-co-gcp-project";

DeliveryServiceBlockingStub deliveryService =
DeliveryServiceGrpc.newBlockingStub(channel);

Task deliveryTask = Task.newBuilder()
.setType(Task.Type.DELIVERY)
.setState(Task.State.OPEN)
.setTrackingId("delivery-tracking-id")
.setPlannedLocation(               // Grand Indonesia East Mall
LocationInfo.newBuilder().setPoint(
LatLng.newBuilder().setLatitude(-6.195139).setLongitude(106.820826)))
.setTaskDuration(
Duration.newBuilder().setSeconds(2 * 60))
.build();

CreateTaskRequest createDeliveryTaskRequest =
CreateTaskRequest.newBuilder()  // No need for the header or parent fields
.setTaskId("task-8312508")  // Task ID assigned by the Provider
.setTask(deliveryTask)      // Initial state
.build();

Task pickupTask = Task.newBuilder()
.setType(Task.Type.PICKUP)
.setState(Task.State.OPEN)
.setTrackingId("pickup-tracking-id")
.setPlannedLocation(               // Grand Indonesia East Mall
LocationInfo.newBuilder().setPoint(
LatLng.newBuilder().setLatitude(-6.195139).setLongitude(106.820826)))
.setTaskDuration(
Duration.newBuilder().setSeconds(2 * 60))
.build();

CreateTaskRequest createPickupTaskRequest =
CreateTaskRequest.newBuilder()  // No need for the header or parent fields
.setTaskId("task-8241890")  // Task ID assigned by the Provider
.setTask(pickupTask)        // Initial state
.build();

String parent = "providers/" + PROJECT_ID;

BatchCreateTasksRequest batchCreateTasksRequest =
BatchCreateTasksRequest.newBuilder()
.setParent(parent)
.addRequests(createDeliveryTaskRequest)
.addRequests(createPickupTaskRequest)
.build();

BatchCreateTasksResponse createdTasks = deliveryService.batchCreateTasks(
batchCreateTasksRequest);
Status s = e.getStatus();
switch (s.getCode()) {
case ALREADY_EXISTS:
break;
case PERMISSION_DENIED:
break;
REST서버 환경에서 배송 및 수령 작업을 만들려면 BatchCreateTasks에 HTTP REST 호출을 실행하세요.
POST https://fleetengine.googleapis.com/v1/providers/<project_id>/batchCreate
<id>는 작업의 고유 식별자입니다.

요청 헤더에는 값이 Bearer <token>인 Authorization 필드가 포함되어야 합니다. 여기서 <token>은 서비스 계정 역할 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/set-up-fleet/service-accounts?hl=ko] 및 JSON 웹 토큰 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/set-up-fleet/jwt?hl=ko]에 설명된 가이드라인에 따라 서버에서 발급됩니다.

요청 본문에는 BatchCreateTasksRequest 항목이 포함되어야 합니다.

curl 명령어 예시:
# Set $JWT, $PROJECT_ID, $DELIVERY_TRACKING_ID, $DELIVERY_TASK_ID,
# $PICKUP_TRACKING_ID, and $PICKUP_TASK_ID in the local environment
curl -X POST "https://fleetengine.googleapis.com/v1/providers/${PROJECT_ID}/tasks:batchCreate" \
-H "Content-type: application/json" \
-H "Authorization: Bearer ${JWT}" \
--data-binary @- << EOM
"requests" : [
"taskId": "${DELIVERY_TASK_ID}",
"task" : {
"type": "DELIVERY",
"state": "OPEN",
"trackingId": "${DELIVERY_TRACKING_ID}",
"plannedLocation": {
"point": {
"latitude": -6.195139,
"longitude": 106.820826
실험적: 실험적 기능으로, 이제 LocationInfo(gRPC [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rpc/maps.fleetengine.delivery.v1?hl=ko#locationinfo] 또는 REST [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rest/v1/LocationInfo?hl=ko]) 필드에서 LatLng와 함께 또는 LatLng 대신 place (gRPC [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rpc/maps.fleetengine.delivery.v1?hl=ko#maps.fleetengine.delivery.v1.LocationInfo.FIELDS.string.maps.fleetengine.delivery.v1.LocationInfo.place] 또는 REST [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rest/v1/LocationInfo?hl=ko#FIELDS.place])를 사용할 수 있습니다.
다음 단계

태스크 구성 [https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/configure-tasks?hl=ko]
할 일 업데이트하기 [https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/update-tasks?hl=ko]