Source URL: https://developers.google.com/maps/documentation/javascript/markers?hl=ko
Title: 마커(기존)

의견 보내기

마커(기존)

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/android-sdk/marker?hl=ko]

iOS [https://developers.google.com/maps/documentation/ios-sdk/marker?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/markers?hl=ko]

google.maps.Marker(v3.56)는 2024년 2월 21일부터 지원 중단되었습니다. 새 google.maps.marker.AdvancedMarkerElement 클래스로 전환하는 것이 좋습니다. 고급 마커를 사용하면 기존 google.maps.Marker 클래스가 크게 개선됩니다.
google.maps.marker.AdvancedMarkerElement가 포함된 Maps JavaScript API의 최소 버전은 3.53.2입니다. 현재로서는 google.maps.Marker가 지원 중단될 예정이 없습니다.
자세히 알아보기 [https://developers.google.com/maps/documentation/javascript/advanced-markers/migration?hl=ko]

소개

마커는 지도에서 위치를 나타냅니다. 기본적으로 마커는 표준 이미지를 사용합니다. 마커는 맞춤 이미지를 표시할 수 있으며 이 경우 일반적으로 마커를 '아이콘'이라고 합니다. 마커와 아이콘은 Marker [https://developers.google.com/maps/documentation/javascript/reference/marker?hl=ko] 유형의 객체입니다. 마커의 생성자 내에서 또는 마커에서 setIcon()을 호출하여 맞춤 아이콘을 설정할 수 있습니다. 마커 이미지 맞춤설정 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#icons]에 대해 자세히 알아보세요.

넓은 관점에서 마커는 오버레이의 한 유형입니다. 다른 오버레이 유형에 대한 자세한 내용은 지도에서 그리기 [https://developers.google.com/maps/documentation/javascript/overlays?hl=ko]를 참고하세요.

마커는 상호작용이 가능합니다. 예를 들어 마커는 기본적으로 'click' 이벤트를 수신하므로 이벤트 리스너를 추가하여 맞춤 정보가 포함된 정보 창 [https://developers.google.com/maps/documentation/javascript/infowindows?hl=ko#open]을 표시할 수 있습니다. 마커의 draggable 속성을 true로 설정하여 사용자가 지도에서 마커를 이동하도록 허용할 수 있습니다. 드래그 가능한 마커에 대한 자세한 내용은 아래 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#draggable]를 참고하세요.

마커 추가

google.maps.Marker [https://developers.google.com/maps/documentation/javascript/reference/marker?hl=ko] 생성자는 단일 Marker options 객체 리터럴을 가져오고 마커의 초기 속성을 지정합니다.

다음은 마커를 생성할 때 특히 중요하고 일반적으로 설정되는 필드입니다.

position(필수)은 마커의 초기 위치를 나타내는 LatLng를 지정합니다. LatLng를 가져오는 한 가지 방법은 지오코딩 서비스 [https://developers.google.com/maps/documentation/javascript/geocoding?hl=ko]를 사용하는 것입니다.

map(선택사항)은 마커를 배치할 Map을 지정합니다. 마커를 생성할 때 지도를 지정하지 않으면 마커가 생성되지만 지도에 연결되거나 표시되지 않습니다. 마커의 setMap() 메서드를 호출하여 나중에 마커를 추가할 수도 있습니다.

다음 예에서는 오스트레일리아 중앙의 울루루 지도에 간단한 마커를 추가합니다.

TypeScript
function initMap(): void {

new google.maps.Marker({
position: myLatLng,
map,
function initMap() {

마커의 title은 도움말로 표시됩니다.

마커의 생성자에 Marker options를 전달하지 않으려면 생성자의 마지막 인수에서 빈 객체({})를 대신 전달하세요.

예 보기 [https://developers.google.com/maps/documentation/javascript/examples/marker-simple?hl=ko]

마커 제거

지도에서 마커를 제거하려면 null을 인수로 전달하는 setMap() 메서드를 호출하세요.

marker.setMap(null);

위의 메서드는 마커를 삭제하지 않습니다. 지도에서 마커를 제거할 뿐입니다. 마커를 삭제하려면 지도에서 제거한 다음 마커 자체를 null로 설정해야 합니다.

마커 집합을 관리하려면 마커를 보유하는 배열을 만들어야 합니다. 이 배열을 사용하면 마커를 제거해야 할 때 배열의 각 마커에서 setMap()을 차례로 호출할 수 있습니다. 지도에서 마커를 제거한 후 배열의 length를 0으로 설정하여 마커를 삭제할 수 있습니다. 이렇게 하면 마커에 대한 모든 참조가 제거됩니다.

예 보기 [https://developers.google.com/maps/documentation/javascript/examples/marker-remove?hl=ko]

마커 이미지 맞춤설정

기본 Google 지도 압정 아이콘 대신 표시할 이미지 파일 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#simple_icons] 또는 벡터 기반 아이콘 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#symbols]을 지정하여 마커의 시각적 모양을 맞춤설정할 수 있습니다. 마커 라벨 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#marker_labels]이 있는 텍스트를 추가하고, 복잡한 아이콘 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#complex_icons]을 사용하여 클릭 가능한 영역을 정의하고 마커의 스택 순서를 설정할 수 있습니다.

이미지 아이콘이 있는 마커

가장 기본적인 경우 아이콘은 기본 Google 지도 압정 아이콘 대신 사용할 이미지를 나타낼 수 있습니다. 이러한 아이콘을 지정하려면 마커의 icon 속성을 이미지의 URL로 설정하세요. Maps JavaScript API는 아이콘의 크기를 자동으로 지정합니다.

TypeScript

icon: image,
icon: image,

setMarkers(map);

function setMarkers(map: google.maps.Map) {
icon: image,
shape: shape,
zIndex: beach[3],

function setMarkers(map) {
icon: image,
shape: shape,
zIndex: beach[3],
MarkerImage 객체를 Icon 유형으로 변환

Maps JavaScript API 버전 3.10까지는 복잡한 아이콘이 MarkerImage 객체로 정의되었습니다. Icon 객체 리터럴은 버전 3.10에 추가되었으며 버전 3.11부터 MarkerImage를 대체합니다.
Icon 객체 리터럴은 MarkerImage와 동일한 매개변수를 지원하며, 이 객체를 사용하면 생성자를 삭제하고 {}의 이전 매개변수를 래핑하고 각 매개변수의 이름을 추가하여 MarkerImage를 Icon으로 쉽게 변환할 수 있습니다. 예를 들면 다음과 같습니다.

new google.maps.Size(71, 71),
new google.maps.Point(0, 0),
new google.maps.Point(17, 34),
new google.maps.Size(25, 25));

위 내용이 다음과 같이 변환됩니다.

map,
label: `${i + 1}`,
optimized: false,
infoWindow.setContent(marker.getTitle());
infoWindow.open(marker.getMap(), marker);
map,
label: `${i + 1}`,
optimized: false,
infoWindow.setContent(marker.getTitle());
infoWindow.open(marker.getMap(), marker);
DROP은 마커를 처음 지도에 배치할 때 지도 상단에서 최종 위치로 떨어져야 함을 나타냅니다. 마커가 멈추면 애니메이션이 중지되고 animation이 null로 돌아갑니다. 이 유형의 애니메이션은 일반적으로 Marker를 생성하는 동안 지정됩니다.

BOUNCE는 마커가 제자리에서 튀어야 함을 나타냅니다. 튀는 마커는 animation 속성이 명시적으로 null이 될 때까지 계속 튑니다.

기존 마커의 경우 Marker 객체에서 setAnimation()을 호출하여 애니메이션을 시작할 수 있습니다.

TypeScript

marker = new google.maps.Marker({
map,
draggable: true,
animation: google.maps.Animation.DROP,
position: { lat: 59.327, lng: 18.067 },
draggable: true,
animation: google.maps.Animation.DROP,
position: { lat: 59.327, lng: 18.067 },