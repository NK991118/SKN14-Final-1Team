Source URL: https://developers.google.com/maps/documentation/javascript/place-photos?hl=ko
Title: 장소 사진

의견 보내기

장소 사진

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

유럽 경제 지역 (EEA) 개발자

청구서 수신 주소가 유럽 경제 지역에 있는 경우 2025년 7월 8일부터 서비스 사용 시 Google Maps Platform EEA 서비스 약관 [https://cloud.google.com/terms/maps-platform/eea?hl=ko]이 적용됩니다. 기능은 리전에 따라 다릅니다.
자세히 알아보기 [https://developers.google.com/maps/comms/eea/faq?hl=ko]

장소 사진을 사용하면 웹페이지에 고화질 사진 콘텐츠를 추가할 수 있습니다. 장소 데이터베이스에 저장된 수백만 장의 사진에 액세스하고 장소 찾기, 주변 검색, 텍스트 검색, 자동 완성, 장소 세부정보를 사용하여 크기를 조절할 수 있는 이미지를 가져옵니다.

샘플 소스 코드 전체 보기

이 대략적인 사진 캐러셀에는 필수 저자 표시 (사진 왼쪽 상단에 표시됨)를 포함하여 지정된 장소의 사진이 표시됩니다.

TypeScript
async function init() {
const { Place } = await google.maps.importLibrary('places') as google.maps.PlacesLibrary;

summary.textContent = place.editorialSummary as string;

img.addEventListener('click', (event) => {
event.preventDefault();
expandedImage.src = img.src;
expandedImageDiv.innerHTML = '';
expandedImageDiv.appendChild(expandedImage);
attributionLabel = createAttribution(photo.authorAttributions);
expandedImageDiv.appendChild(attributionLabel);
expandedImageDiv.appendChild(img);
attributionLabel = createAttribution(place.photos![0].authorAttributions);
expandedImageDiv.appendChild(attributionLabel);

attributionLabel.classList.add('attribution-label');
attributionLabel.textContent = attribution[0].displayName;
attributionLabel.href = attribution[0].uri;
attributionLabel.target = '_blank;'
return attributionLabel;
async function init() {
const { Place } = await google.maps.importLibrary("places");
summary.textContent = place.editorialSummary;
img.addEventListener("click", (event) => {
event.preventDefault();
expandedImage.src = img.src;
expandedImageDiv.innerHTML = "";
expandedImageDiv.appendChild(expandedImage);
attributionLabel = createAttribution(photo.authorAttributions);
expandedImageDiv.appendChild(attributionLabel);
expandedImageDiv.appendChild(img);
attributionLabel = createAttribution(place.photos[0].authorAttributions);
expandedImageDiv.appendChild(attributionLabel);

attributionLabel.classList.add("attribution-label");
attributionLabel.textContent = attribution[0].displayName;
attributionLabel.href = attribution[0].uri;
attributionLabel.target = "_blank;";
return attributionLabel;
/*
* Always set the map height explicitly to define the size of the div element
* that contains the map.
*/
body {
<html>
<head>
<title>Place Photos</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<div id="container">
<div class="place-overview">
<div id="info">
<div id="heading"></div>
<div id="summary"></div>
</div>
<div id="gallery"></div>
</div>
<div id="expanded-image"></div>
</div>

<!-- prettier-ignore -->
<script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
({key: "AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg", v: "weekly"});</script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/place-photos/docs/index.html#L8-L31]

샘플 사용해 보기

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/place-photos/jsfiddle]

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-place-photos&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]

사진 가져오기

장소의 사진을 가져오려면 fetchFields() 요청 매개변수에 photos 필드를 포함합니다. 결과 장소 인스턴스에는 최대 10개의 Photo [https://developers.google.com/maps/documentation/javascript/reference/place?hl=ko#Photo] 객체 배열이 포함되며 여기에서 이미지와 필요한 저작자 표시 정보에 액세스할 수 있습니다.
getURI()를 호출하여 소스 사진 URI를 반환하고 이미지의 최대 높이 또는 너비를 지정합니다. maxHeight 및 maxWidth 값을 모두 지정하면 사진 서비스에서 원래 가로세로 비율을 유지하면서 이미지를 두 가지 크기 중 더 작은 크기로 조정합니다.

다음 예에서는 사진에 대한 장소 세부정보 요청을 실행하고, 사진 인스턴스에서 getURI()를 호출하여 이미지의 소스 URI를 반환한 다음, 첫 번째 사진 결과를 img 요소에 추가하는 방법을 보여줍니다 (명확성을 위해 저작자 표시는 생략됨).

const { Place } = await google.maps.importLibrary('places');

작성자 저작자 표시

사진을 표시할 때는 사진의 저작자 표시도 표시해야 합니다. AuthorAttribution 클래스를 사용하여 기여 분석을 반환합니다. 저작자 표시는 저자 이름 (displayName), Google 지도 프로필의 URI (uri), 저자 사진의 URI (photoURI)를 포함합니다. 다음 스니펫은 장소 사진의 displayName, uri, photoURI를 반환하는 것을 보여줍니다.