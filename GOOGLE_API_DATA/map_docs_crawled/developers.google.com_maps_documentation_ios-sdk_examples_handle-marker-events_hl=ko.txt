Source URL: https://developers.google.com/maps/documentation/ios-sdk/examples/handle-marker-events?hl=ko
Title: 마커 이벤트 처리

의견 보내기

마커 이벤트 처리

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 예에서는 마커가 두 개 있는 지도를 표시합니다. 마커를 탭하면 카메라가 확대/축소 및 회전하여 선택한 마커에 초점을 맞춥니다.

시작하기

샘플 코드를 사용하기 전에 개발 환경을 구성해야 합니다.
자세한 내용은 iOS용 Maps SDK 코드 샘플 [https://developers.google.com/maps/documentation/ios-sdk/examples?hl=ko]을 참고하세요.

코드 보기

Swift
import GoogleMaps
import UIKit

final class MarkerEventsViewController: UIViewController {

private lazy var mapView: GMSMapView = {
position: CLLocationCoordinate2D(latitude: -37.81969, longitude: 144.966085))

override func loadView() {
melbourneMarker.map = mapView
mapView.delegate = self
view = mapView
CATransaction.begin()
CATransaction.setAnimationDuration(3)
CATransaction.commit()

Objective-C
#import "GoogleMapsDemos/Samples/MarkerEventsViewController.h"

#import <QuartzCore/QuartzCore.h>

#import <GoogleMaps/GoogleMaps.h>

@implementation MarkerEventsViewController {
GMSMapView *_mapView;
GMSMarker *_melbourneMarker;
BOOL _rotating;
GMSCameraPosition *camera = [GMSCameraPosition cameraWithLatitude:-37.81969
longitude:144.966085

GMSMarker *sydneyMarker = [[GMSMarker alloc] init];
sydneyMarker.position = CLLocationCoordinate2DMake(-33.8683, 151.2086);
sydneyMarker.map = _mapView;

_melbourneMarker = [[GMSMarker alloc] init];
_melbourneMarker.position = CLLocationCoordinate2DMake(-37.81969, 144.966085);
_melbourneMarker.map = _mapView;

_mapView.delegate = self;
self.view = _mapView;
[CATransaction setAnimationDuration:3.f];  // 3 second animation
[CATransaction setCompletionBlock:^{
if (_rotating) {  // Animation was interrupted by orientation change.
[CATransaction
[CATransaction commit];

[coordinator
animateAlongsideTransition:nil
completion:^(
id<UIViewControllerTransitionCoordinatorContext> _Nonnull context) {
_rotating = false;
cd maps-sdk-for-ios-samples-main/GoogleMaps-Swift
pod install
open GoogleMapsSwiftDemos.xcworkspace

Objective-C
cd maps-sdk-for-ios-samples-main/GoogleMaps
pod install
open GoogleMapsDemos.xcworkspace

Xcode에서 컴파일 버튼을 눌러 현재 스키마로 앱을 빌드 [https://developer.apple.com/documentation/xcode/building-and-running-an-app]합니다. 빌드 오류가 발생하여 Swift의 SDKConstants.swift 파일 또는 Objective-C의 SDKDemoAPIKey.h 파일에 API 키를 입력하라는 메시지가 표시됩니다.
iOS용 Maps SDK가 사용 설정된 [https://developers.google.com/maps/documentation/ios-sdk/cloud-setup?hl=ko#enabling-apis] 프로젝트에서 API 키를 가져옵니다 [https://developers.google.com/maps/documentation/ios-sdk/get-api-key?hl=ko].
Swift의 경우 SDKConstants.swift 파일을 수정하고 Objective-C의 경우 SDKDemoAPIKey.h 파일을 수정한 후 apiKey 또는 kAPIKey 상수의 정의에 API 키를 붙여넣습니다. 예를 들면 다음과 같습니다.

Swift

static let apiKey = "YOUR_API_KEY"

Objective-C

static NSString *const kAPIKey = @"YOUR_API_KEY";

SDKConstants.swift 파일 (Swift) 또는 SDKDemoAPIKey.h 파일 (Objective-C)에서 다음 줄을 삭제합니다. 이 줄은 사용자 정의 문제를 등록하는 데 사용됩니다.

Swift
#error (Register for API Key and insert here. Then delete this line.)

Objective-C

#error Register for API Key and insert here.

프로젝트를 빌드하고 실행합니다. iOS 시뮬레이터 창이 표시되고 Maps SDK 데모 목록이 표시됩니다.
표시된 옵션 중 하나를 선택하여 iOS용 Maps SDK의 기능을 실험합니다.
GoogleMapsDemos에서 내 위치에 액세스하도록 허용하라는 메시지가 표시되면 허용을 선택합니다.

의견 보내기