Source URL: https://developers.google.com/maps/documentation/javascript/dds-boundaries/dds-use-maps-places-apis?hl=ko
Title: 데이터 기반 경계 스타일 지정과 함께 Places API와 지오코딩 사용

의견 보내기

데이터 기반 경계 스타일 지정과 함께 Places API와 지오코딩 사용

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/android-sdk/dds-boundaries/dds-use-maps-places-apis?hl=ko]

iOS [https://developers.google.com/maps/documentation/ios-sdk/dds-boundaries/dds-use-maps-places-apis?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/dds-boundaries/dds-use-maps-places-apis?hl=ko]

유럽 경제 지역 (EEA) 개발자

청구서 수신 주소가 유럽 경제 지역에 있는 경우 2025년 7월 8일부터
Google Maps Platform EEA 서비스 약관 [https://cloud.google.com/terms/maps-platform/eea?hl=ko]
이 서비스 이용에 적용됩니다. 기능은 리전에 따라 다릅니다.
자세히 알아보기 [https://developers.google.com/maps/comms/eea/faq?hl=ko]

Maps JavaScript API에서 Places API와 Geocoding API를 사용하여 지역을 검색하고 장소에 대한 자세한 정보를 얻을 수 있습니다. Geocoding API 및 Places API는 장소 ID를 가져오기 위한 강력하고 안정적인 대안입니다. 이미 장소 ID를 사용하고 있다면 데이터 기반 경계 스타일 지정과 함께 ID를 쉽게 재사용할 수 있습니다.

다음과 같은 방법으로 Places API 및 Geocoding API를 Maps JavaScript API 앱에 추가합니다.

Maps JavaScript API의 장소 라이브러리 [https://developers.google.com/maps/documentation/javascript/place?hl=ko]를 사용하면 앱에서 장소를 검색할 수 있으며, 여기에는 자동 완성 위젯이 포함됩니다.
Places API [https://developers.google.com/maps/documentation/places/web-service/overview?hl=ko]는 HTTP 요청을 사용하여 장소에 대한 정보를 반환합니다.
지오코딩 서비스 [https://developers.google.com/maps/documentation/javascript/geocoding?hl=ko] 및 지오코더 클래스 [https://developers.google.com/maps/documentation/javascript/reference/geocoder?hl=ko]는 사용자 입력을 받아 동적으로 지오코딩 및 역 지오코딩할 수 있습니다.
Geocoding API [https://developers.google.com/maps/documentation/geocoding?hl=ko]를 사용하면 알려진 정적 주소를 지오코딩할 수 있습니다.

참고: Geocoding API [https://developers.google.com/maps/documentation/geocoding/cloud-setup?hl=ko],
Places API [https://developers.google.com/maps/documentation/places/web-service/cloud-setup?hl=ko],
Places API (신규) [https://developers.google.com/maps/documentation/javascript/place-get-started?hl=ko] (텍스트 검색 (신규)용)를 사용 설정해야 하며,
이러한 API는 Maps JavaScript API와 별도로 요금이 청구됩니다.
Places API 사용

텍스트 검색 (신규)을 사용하여 지역 찾기

텍스트 검색 (신규) [https://developers.google.com/maps/documentation/javascript/place-search?hl=ko#text-search-preview]에서는 includedType을 사용하여 반환할 지역 유형 [https://developers.google.com/maps/documentation/places/web-service/text-search?hl=ko#supported-types]을 지정하여, 지역 데이터를 포함하는 장소 ID를 찾을 수 있습니다. 장소 ID 요청만을 위해 Text Search (New) API를 사용하는 데에는 비용이 청구되지 않습니다. 자세히 알아보기 [https://developers.google.com/maps/documentation/places/web-service/preview-billing?hl=ko#id-textsearch]

다음 지도 예에서는 searchByText 요청을 통해 캘리포니아주의 트리니다드에 대한 장소 ID를 가져온 다음 경계에 스타일 지정을 적용하는 방법을 보여줍니다.

TypeScript
async function findBoundary() {

if (places.length) {
map.setCenter(place.location);

async function findBoundary() {

if (places.length) {
map.setCenter(place.location);

center = {lat: 41.059, lng: -124.151}; // Trinidad, CA

map = new Map(document.getElementById('map') as HTMLElement, {
center: center,
zoom: 15,

findBoundary();

if (places.length) {
map.setCenter(place.location);

center = { lat: 41.059, lng: -124.151 }; // Trinidad, CA
map = new Map(document.getElementById("map"), {
center: center,
zoom: 15,
findBoundary();

if (places.length) {
map.setCenter(place.location);
Place Autocomplete를 사용하여 지역 찾기

Place Autocomplete 위젯 [https://developers.google.com/maps/documentation/javascript/places-autocomplete?hl=ko]은 사용자가 지역을 검색할 수 있는 편리한 방법을 제공합니다. 지역만 반환하도록 Place Autocomplete 위젯을 구성하려면 다음 스니펫과 같이 types를 (regions)로 설정하세요.

Geocoding API 사용

Geocoding API [https://developers.google.com/maps/documentation/geocoding?hl=ko]를 사용하면 주소를 지리 좌표로 변환하거나 반대로 변환할 수 있습니다. 다음은 데이터 기반 경계 스타일 지정과 잘 어울리는 예입니다.

지오코딩을 사용하여 지역의 표시 영역을 가져옵니다.
지오코딩 호출에 구성요소 필터링을 적용하여 행정 구역 1~4, 지역 또는 우편번호에 대한 장소 ID를 가져옵니다.
역 지오코딩을 사용하여 위도/경도 좌표로 장소 ID를 찾거나 특정 위치의 모든 구성요소에 대한 장소 ID를 반환합니다.

지역의 표시 영역 가져오기

지오코딩 서비스는 장소 ID를 가져와 표시 영역을 반환할 수 있습니다. 표시 영역은 map.fitBounds() [https://developers.google.com/maps/documentation/javascript/reference/map?hl=ko#Map.fitBounds] 함수에 전달하여 지도의 경계 다각형으로 확대/축소할 수 있습니다. 다음 예는 지오코딩 서비스를 사용하여 표시 영역을 가져온 다음 map.fitBounds()를 호출하는 방법을 보여줍니다.

...

.geocode({ placeId: placeid })
.then(({ results }) => {
map.fitBounds(results[0].geometry.viewport, 155);

...

.geocode({ latLng })
.then(({ results }) => {
country
locality
postalCode

다음 함수 예는 지오코딩 서비스를 사용하여 locality 유형의 경우에만 지정된 위치의 모든 주소 구성요소를 가져오는 역 지오코딩의 구성요소 제한을 추가하는 방법을 보여줍니다.

...

function getPlaceIdWithRestrictions(latLng) {
geocoder
.geocode({ latLng,
componentRestrictions: {
country: "US",
locality: "chicago",