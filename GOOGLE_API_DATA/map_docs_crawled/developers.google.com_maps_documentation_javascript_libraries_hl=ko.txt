Source URL: https://developers.google.com/maps/documentation/javascript/libraries?hl=ko
Title: 라이브러리

의견 보내기

라이브러리

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

Maps JavaScript API용 JavaScript 코드를 로드하려면 페이지에 다음 형태의 부트스트랩 로더 스크립트를 포함합니다.

<script>
(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
key: "YOUR_API_KEY",
v: "weekly",
Maps JavaScript API는 특별히 요청하기 전에는 로드되지 않는 라이브러리로 구성됩니다. 구성요소를 라이브러리로 분할하면 API가 빠르게 로드 및 파싱될 수 있습니다. 필요한 경우에만 라이브러리 로드 및 파싱 오버헤드가 추가로 발생합니다.

await 연산자를 사용하여 async 함수 내에서 importLibrary()를 호출하여 런타임에 추가 라이브러리를 로드합니다. 예:

const { Map } = await google.maps.importLibrary("maps");

다음 코드 예에서는 Map 및 AdvancedMarkerElement 라이브러리를 모두 로드하는 방법을 보여줍니다.

TypeScript
const { AdvancedMarkerElement } = await google.maps.importLibrary("marker") as google.maps.MarkerLibrary;

const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");