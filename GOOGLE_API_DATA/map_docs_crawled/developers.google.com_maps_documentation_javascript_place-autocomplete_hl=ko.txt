Source URL: https://developers.google.com/maps/documentation/javascript/place-autocomplete?hl=ko
Title: Place Autocomplete

의견 보내기

Place Autocomplete

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 제품 또는 기능은 기존 상태입니다. 기존 단계 및 기존 서비스에서 최신 서비스로 이전하는 방법에 대한 자세한 내용은 기존 제품 및 기능 [https://developers.google.com/maps/legacy?hl=ko]을 참고하세요.

유럽 경제 지역 (EEA) 개발자

청구서 수신 주소가 유럽 경제 지역에 있는 경우 2025년 7월 8일부터
Google Maps Platform EEA 서비스 약관 [https://cloud.google.com/terms/maps-platform/eea?hl=ko]
이 서비스 이용에 적용됩니다. 기능은 리전에 따라 다릅니다.
자세히 알아보기 [https://developers.google.com/maps/comms/eea/faq?hl=ko]

참고: 서버 측 라이브러리
이 페이지에서는 Maps JavaScript API와 함께 사용할 수 있는 클라이언트 측 라이브러리를 설명합니다. 서버에서 Places API 웹 서비스를 사용하려면 Google 지도 서비스용 Node.js 클라이언트 [https://developers.google.com/maps/web-services/client-library?hl=ko]를 참고하세요. 이 링크의 페이지에는 Google 지도 서비스용 Java 클라이언트, Python 클라이언트, Go 클라이언트도 소개되어 있습니다.

소개

자동 완성은 Maps JavaScript API에 포함되어 있는 장소 라이브러리의 기능입니다. 자동 완성을 사용하여 애플리케이션에 Google 지도 검색창의 검색 전 입력 기능을 제공할 수 있습니다.
자동 완성 서비스는 전체 단어 및 하위 문자열을 일치시켜 장소 이름, 주소 및 Plus Code [https://plus.codes/]를 결정할 수 있습니다. 따라서 사용자가 입력할 때 애플리케이션에서 쿼리를 전송하여 즉시 장소 예상 검색어를 제공할 수 있습니다. Places API에 정의된 것처럼 '장소'는 시설, 지리적 위치 또는 유명한 관심 장소가 될 수 있습니다.

시작하기

Maps JavaScript API에서 장소 라이브러리를 사용하려면 먼저 Maps JavaScript API를 위해 설정한 것과 동일한 프로젝트의 Google Cloud 콘솔에서 Places API가 사용 설정되어 있는지 확인해야 합니다.
사용 설정된 API의 목록을 보려면 다음 단계를 따르세요.

Google Cloud 콘솔 [https://console.cloud.google.com/project/_/apiui/apis/enabled?utm_source=Docs_EnabledAPIsView&hl=ko]로 이동합니다.

프로젝트 선택 버튼을 클릭한 후 Maps JavaScript API를 위해 설정한 것과 동일한 프로젝트를 선택하고 열기를 클릭합니다.
대시보드의 API 목록에서 Places API를 찾습니다.
목록에 API가 표시되면 완료된 것입니다. 하지만 이 프로젝트는 기존 상태입니다.
기존 단계 및 기존 서비스에서 최신 서비스로 이전하는 방법에 대한 자세한 내용은 기존 제품 및 기능 [https://developers.google.com/maps/legacy?hl=ko]을 참고하세요.
Places API (New)에서 아직 정식 버전 제품으로 제공되지 않는 Autocomplete [https://developers.google.com/maps/documentation/javascript/place-autocomplete?hl=ko#add-autocomplete] 및 SearchBox [https://developers.google.com/maps/documentation/javascript/place-autocomplete?hl=ko#places-searchbox] 위젯에는 예외가 적용됩니다.

라이브러리 로드
장소 서비스는 기본 Maps JavaScript API 코드와 별도로, 필요한 모든 기능이 포함된 독립 라이브러리입니다. 이 라이브러리에 포함된 기능을 사용하려면 먼저 지도 API 부트스트랩 URL의 libraries 매개변수를 사용하여 로드해야 합니다.

<script async
src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&loading=async&libraries=places&callback=initMap">
</script>

자세한 내용은 라이브러리 개요 [https://developers.google.com/maps/documentation/javascript/libraries?hl=ko]를 참고하세요.

클래스 요약

API는 각각 Autocomplete 및 SearchBox 클래스를 사용하여 추가할 수 있는 두 가지 유형의 자동 완성 위젯을 제공합니다.
또한 AutocompleteService 클래스를 사용하여 자동 완성 결과를 프로그래매틱 방식으로 가져올 수도 있습니다(Maps JavaScript API 참조: AutocompleteService 클래스 [https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service?hl=ko] 참고).

다음은 사용 가능한 클래스의 요약입니다.

Autocomplete [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#Autocomplete]는 웹페이지에 텍스트 입력란을 추가하고 해당 입력란의 문자 입력을 모니터링합니다. 사용자가 텍스트를 입력할 때 자동 완성이 드롭다운 목록 형식으로 장소 예상 검색어를 반환합니다. 사용자가 목록에서 장소를 선택하면 장소에 대한 정보가 자동 완성 객체에 반환되며 애플리케이션에서 정보를 가져올 수 있습니다. 자세한 내용은 아래 [https://developers.google.com/maps/documentation/javascript/legacy/place-autocomplete?hl=ko#add-autocomplete]를 참고하세요.

그림 1: 자동 완성 텍스트 필드 및 선택 목록

그림 2: 완성된 주소 양식

SearchBox [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#SearchBox]는 Autocomplete와 거의 동일한 방식으로 웹페이지에 텍스트 입력란을 추가합니다. 차이점은 다음과 같습니다.주요 차이는 선택 목록에 표시되는 결과에 있습니다. SearchBox는 확장된 예상 검색어 목록을 제공하며 이 목록에는 Places API에서 정의한 장소 및 추천 검색어가 포함될 수 있습니다. 예를 들어 사용자가 'pizza in new'를 입력하는 경우 선택 목록에 'pizza in New York, NY' 및 다양한 피자 매장 이름이 포함될 수 있습니다.
SearchBox는 Autocomplete보다 적은 검색 제한 옵션을 제공합니다. SearchBox의 경우 지정된 LatLngBounds에 편중하여 검색할 수 있습니다. 자동 완성에서는 특정 국가 및 특정 장소 유형으로 검색을 제한할 수 있으며 경계를 설정할 수도 있습니다. 자세한 내용은 아래 [https://developers.google.com/maps/documentation/javascript/legacy/place-autocomplete?hl=ko#places-searchbox]를 참고하세요.

그림 3: 검색어와 예상 검색어를 제공하는 SearchBox
자세한 내용은 아래 [https://developers.google.com/maps/documentation/javascript/legacy/place-autocomplete?hl=ko#places-searchbox]를 참고하세요.

AutocompleteService [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#AutocompleteService] 객체를 만들면 예상 검색어를 프로그래매틱 방식으로 가져올 수 있습니다.  getPlacePredictions()를 호출하여 일치하는 장소를 가져오거나 getQueryPredictions()를 호출하여 일치하는 장소와 추천 검색어를 가져올 수 있습니다.
참고: AutocompleteService는 UI 컨트롤을 추가하지 않습니다.
대신 위의 메서드는 예상 검색어 객체의 배열을 반환합니다. 각 예상 검색어 객체에는 예상 검색어의 텍스트 및 참조 정보, 결과가 사용자 입력과 어떻게 일치하는지에 대한 세부정보가 포함됩니다. 자세한 내용은 아래 [https://developers.google.com/maps/documentation/javascript/legacy/place-autocomplete?hl=ko#place_autocomplete_service]를 참고하세요.

자동 완성 위젯 추가

중요: 이 위젯을 사용하려면 프로젝트에서 Places API (기존)를 사용 설정 [https://console.cloud.google.com/apis/library/places-backend.googleapis.com?hl=ko]해야 합니다. 장소 (신규) 서비스는 미리보기로 제공되는 동등한 위젯 [https://developers.google.com/maps/documentation/javascript/place-autocomplete-new?hl=ko]을 제공합니다.

Autocomplete [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#Autocomplete] 위젯은 웹페이지에 텍스트 입력란을 만들고 UI 선택 목록에 장소의 예상 검색어를 제공하고 getPlace() 요청에 대한 응답에 장소 세부정보를 반환합니다. 선택 목록의 각 항목은 Places API에 의해 정의된 단일 장소에 해당합니다.

Autocomplete 생성자는 다음 두 인수를 사용합니다.

text 유형의 HTML input 요소. 자동 완성 서비스가 모니터링하고 결과를 첨부하는 입력란입니다.
AutocompleteOptions [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#AutocompleteOptions] 인수(선택사항).
다음과 같은 속성을 포함할 수 있습니다.  사용자가 선택한 PlaceResult의 Place Details 응답에 포함될 데이터
fields의 배열. 속성이 설정되어 있지 않거나 ['ALL']이 전달되는 경우 사용 가능한 모든 필드가 반환되고 청구 [https://developers.google.com/maps/documentation/places/web-service/usage-and-billing?hl=ko#autocomplete]됩니다(프로덕션 배포의 경우 권장되지 않습니다). 필드의 목록은 PlaceResult [https://developers.google.com/maps/documentation/javascript/reference/places-service?hl=ko#PlaceResult]를 참고하세요.
지원되는 유형 [https://developers.google.com/maps/documentation/javascript/supported_types?hl=ko#table3]에
나열된 대로 명시적 유형 또는 유형 모음을 지정하는 types의 배열. 유형을 지정하지 않으면 모든 유형이 반환됩니다. bounds는 장소를 검색할 영역을 지정하는 google.maps.LatLngBounds 객체입니다. 검색 결과는 이 경계 안에 포함된 장소에 편중되지만 이 장소만으로 제한되지는 않습니다.
strictBounds는 API가 지정된 bounds로 정의된 지역 내에 있는 장소만 반환해야 하는지 여부를 지정하는 boolean입니다. API는 결과가 사용자 입력과 일치하더라도 이 지역 외부의 결과를 반환하지 않습니다.
참고: 위치 제한은 경로 전체에만 적용됩니다. 위치 제한 외부에 있는 종합적인 결과는 위치 제한과 겹치는 경로를 기반으로 반환될 수도 있습니다.

componentRestrictions를 사용하여 결과를 특정 그룹으로 제한할 수 있습니다. componentRestrictions를 사용하여 최대 5개의 국가로 필터링할 수 있습니다. 국가는 2자리 ISO 3166-1 Alpha-2 호환 국가 코드로 전달해야 합니다. 여러 국가를 하나의 국가 코드 목록으로 전달해야 합니다.

참고: 국가 코드가 포함된 예기치 않은 결과가 반환되면 원하는 국가, 종속 지역, 특별 관심 지역이 포함된 코드를 사용하고 있는지 확인하세요.  코드 정보는 위키백과: ISO 3166 국가 코드 목록 [https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes] 또는 ISO 온라인 탐색 플랫폼 [https://www.iso.org/obp/ui/#search]에서 확인할 수 있습니다.

placeIdOnly는 Autocomplete 위젯이 장소 ID만 가져오도록 하는 데 사용할 수 있습니다. Autocomplete 객체에서 getPlace()를 호출할 때 제공되는 PlaceResult에는 place id, types, name 속성만 설정되어 있습니다. 반환된 장소 ID를 장소, 지오코딩, 경로 또는 거리 행렬 서비스 호출에 사용할 수 있습니다.
참고: name 속성에는 Places Autocomplete 예상 검색어의 description이 포함됩니다. description에 대한 자세한 내용은 AutocompleteService 문서 [https://developers.google.com/maps/documentation/javascript/places-autocomplete?hl=ko#place_autocomplete_service]를 참고하세요.

참고: placeIdOnly는 2019년 1월 15일부로 지원
중단되었으며 2020년 1월 15일에 사용 중지됩니다. 대신

AutocompleteOptions [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#AutocompleteOptions.fields]
인터페이스의
fields 배열인
fields: ['place_id', 'name', 'types']를 사용하세요.

자동 완성 예상 검색어 제한

기본적으로 Place Autocomplete는 사용자 위치 근처의 예상 검색어에 편중된 모든 장소 유형을 표시하며 사용자가 선택한 장소의 사용 가능한 모든 데이터 필드를 가져옵니다. 사용 사례를 기반으로 더 관련성 높은 예상 검색어를 표시하려면 Place Autocomplete 옵션을 설정하세요.

생성 시 옵션 설정

Autocomplete 생성자는 위젯을 만들 때 제약 조건을 설정하기 위해 AutocompleteOptions 매개변수를 사용합니다. 다음 예에서는 bounds, componentRestrictions, types 옵션을 설정하여 establishment 유형의 장소를 요청함으로써, 지역 내의 장소를 우선 검색하도록 하고 미국 내 장소만으로 예상 검색어를 제한합니다. fields 옵션을 설정하여 사용자가 선택한 장소에 대해 반환할 정보를 지정할 수 있습니다.

기존 위젯의 옵션 값을 변경하려면 setOptions()를 호출하세요.

TypeScript

자동 완성을 위한 상세 검색 및 검색 영역 경계 정의

다음과 같은 방식으로 대략적인 위치나 지역에 편중된 자동 완성 결과를 얻을 수 있습니다.

Autocomplete 객체 생성 시 경계 설정
기존 Autocomplete의 경계 변경
지도의 표시 영역에 경계 설정
경계로 검색 제한
특정 국가로 검색 제한

이전 예에서는 생성 시 경계를 설정하는 방법을 보여줍니다. 다음 예에서는 다른 상세 검색 방법을 보여줍니다.

참고: 경계나 지도 표시 영역을 제공하지 않으면 API가 IP 주소에서 사용자의 위치 감지를 시도하고 이 위치에 편향된 결과를 반환합니다. 가능하면 항상 경계를 설정하세요. 그렇지 않으면 각 사용자가 받는 예측이 서로 다를 수 있습니다. 또한 일반적으로 예측을 개선하려면 지도를 화면 이동하거나 확대/축소하여 설정한 적절한 표시 영역이나 개발자가 기기 위치 및 반경을 기반으로 설정한 표시 영역을 제공해야 합니다. 반경을 사용할 수 없는 경우에는 5km가 Place Autocomplete에 적절한 기본값으로 간주됩니다. 반경이 0인 표시 영역(단일 점), 가로가 100m 미만에 불과한 표시 영역 또는 지구 전체 둘레에 해당하는 표시 영역은 설정하지 마세요.

기존 자동 완성의 경계 변경

setBounds()를 호출하여 기존 Autocomplete의 검색 영역을 직사각형 경계로 변경합니다.

TypeScript

index.js [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/places-autocomplete-multiple-countries/docs/index.js#L46-L51]

지도의 표시 영역으로 경계 설정

bindTo()를 사용하면 표시 영역이 변경되는 동안에도 지도의 표시 영역에 편중된 결과를 얻을 수 있습니다.

TypeScript
autocomplete.bindTo("bounds", map);index.ts [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/samples/places-autocomplete/index.ts#L42-L42]

참고: TypeScript 및 Google 지도 사용에 관한 가이드 [https://developers.google.com/maps/documentation/javascript/using-typescript?hl=ko]를 읽어 보세요.

JavaScript

autocomplete.bindTo("bounds", map);
index.js [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/places-autocomplete/docs/index.js#L33-L34]

unbind()를 사용하여 자동 완성 예상 검색어를 지도의 표시 영역에서 바인딩 해제합니다.

TypeScript
autocomplete.unbind("bounds");
autocomplete.setBounds({ east: 180, west: -180, north: 90, south: -90 });index.ts [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/samples/places-autocomplete/index.ts#L114-L115]

참고: TypeScript 및 Google 지도 사용에 관한 가이드 [https://developers.google.com/maps/documentation/javascript/using-typescript?hl=ko]를 읽어 보세요.

JavaScript

autocomplete.unbind("bounds");
autocomplete.setBounds({ east: 180, west: -180, north: 90, south: -90 });index.js [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/places-autocomplete/docs/index.js#L101-L102]

예 보기 [https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete?hl=ko]

현재 경계로 검색 제한

strictBounds 옵션을 설정하여 지도 표시 영역 또는 직사각형 경계를 기반으로 결과를 현재 경계로 제한합니다.

autocomplete.setOptions({ strictBounds: true });

특정 국가로 예상 검색어 제한

componentRestrictions 옵션을 사용하거나 setComponentRestrictions()를 호출하여 자동 완성 검색을 최대 다섯 개의 특정 국가로 제한할 수 있습니다.

TypeScript
autocomplete.setComponentRestrictions({
country: ["us", "pr", "vi", "gu", "mp"],

autocomplete.setComponentRestrictions({
country: ["us", "pr", "vi", "gu", "mp"],

장소 유형 [https://developers.google.com/maps/documentation/javascript/supported_types?hl=ko]의 표 1 [https://developers.google.com/maps/documentation/javascript/supported_types?hl=ko#table1] 또는 표 2 [https://developers.google.com/maps/documentation/javascript/supported_types?hl=ko#table2]에 있는 최대 다섯 개의 값이 포함된 배열. 예:

types: ['hospital', 'pharmacy', 'bakery', 'country']

또는

autocomplete.setTypes(['hospital', 'pharmacy', 'bakery', 'country']);

장소 유형 [https://developers.google.com/maps/documentation/javascript/supported_types?hl=ko]의 표 3 [https://developers.google.com/maps/documentation/javascript/supported_types?hl=ko#table3]에 있는 필터.
표 3의 값 하나만 지정할 수 있습니다.

다음과 같은 경우 요청이 거부됩니다.

여섯 개 이상의 유형을 지정하는 경우
인식할 수 없는 유형을 지정하는 경우
표 1 [https://developers.google.com/maps/documentation/javascript/supported_types?hl=ko#table1] 또는 표 2 [https://developers.google.com/maps/documentation/javascript/supported_types?hl=ko#table2]의 유형을 표 3 [https://developers.google.com/maps/documentation/javascript/supported_types?hl=ko#table3]의 필터와 혼합하는 경우

Place Autocomplete 데모는 여러 장소 유형 간 예상 검색어의 차이를 보여줍니다.

데모 보기 [https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete?hl=ko]

장소 정보 가져오기

사용자가 자동 완성 텍스트 입력란에 첨부된 예상 검색어에서 장소를 선택하면 서비스가 place_changed 이벤트를 실행합니다. 장소 세부정보를 가져오는 방법은 다음과 같습니다.

place_changed 이벤트의 이벤트 핸들러를 만들고 Autocomplete 객체에서 addListener() [https://developers.google.com/maps/documentation/javascript/reference/event?hl=ko#MVCObject.addListener]를 호출하여 핸들러를 추가합니다.
Autocomplete 객체에서 Autocomplete.getPlace() [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#Autocomplete.getPlace]를 호출하여 PlaceResult [https://developers.google.com/maps/documentation/javascript/reference/places-service?hl=ko#PlaceResult] 객체를 가져와 선택된 장소에 대한 추가 정보를 가져옵니다.

기본적으로 사용자가 장소를 선택하면 자동 완성이 선택된 장소의 사용 가능한 모든 데이터 필드를 반환하며 그에 따라 요금이 청구 [https://developers.google.com/maps/billing/understanding-cost-of-use?hl=ko#places-details]됩니다.
반환할 장소 데이터 필드를 지정하려면 Autocomplete.setFields() [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#Autocomplete.setFields]를 사용하세요. 요청할 수 있는 장소 데이터 필드 목록이 포함된 PlaceResult [https://developers.google.com/maps/documentation/javascript/reference/places-service?hl=ko#PlaceResult] 객체에 대해 자세히 알아보세요. 필요하지 않은 데이터에 비용을 지불하지 않으려면 Autocomplete.setFields()를 호출하여 사용할 장소 데이터만 지정하세요.

중요: 세션마다 요금이 부과되므로 자동 완성을 사용하여 장소 ID를 새로고침하지 않는 것이 좋습니다. 대신 getDetails() [https://developers.google.com/maps/documentation/javascript/places?hl=ko#place_details_requests]를 호출하고 place_id 필드만 지정하세요.

name 속성에는 Place Autocomplete 예상 검색어의 description이 포함됩니다. description에 관한 자세한 내용은 Place Autocomplete 문서 [https://developers.google.com/maps/documentation/javascript/places-autocomplete?hl=ko#place_autocomplete_service]를 참고하세요.

주소 양식의 경우 구조화된 형식으로 주소를 가져오는 것이 유용합니다. 선택된 장소의 구조화된 주소를 반환하려면 Autocomplete.setFields() [https://developers.google.com/maps/documentation/javascript/reference/places-widget?hl=ko#Autocomplete.setFields]를 호출하고 address_components 필드를 지정하세요.

다음 예에서는 자동 완성을 사용하여 주소 양식의 필드를 채웁니다.

TypeScript
function fillInAddress() {
break;
break;
break;
break;
break;

case "administrative_area_level_1": {
(document.querySelector("#state") as HTMLInputElement).value =
component.short_name;
break;
break;
postalField.value = postcode;

function fillInAddress() {
break;
break;
break;
break;
case "administrative_area_level_1": {
postalField.value = postcode;
premise
establishment

자리표시자 텍스트 맞춤설정

기본적으로 자동 완성 서비스가 생성한 텍스트 입력란에는 표준 자리표시자 텍스트가 포함됩니다. 텍스트를 수정하려면 input 요소에 placeholder 속성을 설정하세요.

<input id="searchTextField" type="text" size="50" placeholder="Anything you want!">

참고: 기본 자리표시자 텍스트는 자동으로 현지화됩니다. 자리표시자 값을 직접 지정하는 경우 애플리케이션에서 해당 값의 현지화를 처리해야 합니다. Google Maps JavaScript API에서 사용할 언어를 선택하는 방법에 관한 자세한 내용은 현지화 [https://developers.google.com/maps/documentation/javascript/localization?hl=ko]에 관한 문서를 참고하세요.

위젯 모양을 맞춤설정하려면 자동 완성 및 SearchBox 위젯 스타일 지정 [https://developers.google.com/maps/documentation/javascript/legacy/place-autocomplete?hl=ko#style-autocomplete]을 참고하세요.

SearchBox 위젯 추가

중요: 이 위젯을 사용하려면 프로젝트에서 Places API (기존)를 사용 설정 [https://console.cloud.google.com/apis/library/places-backend.googleapis.com?hl=ko]해야 합니다. 장소 (신규) 서비스는 미리보기로 제공되는 동등한 위젯 [https://developers.google.com/maps/documentation/javascript/place-autocomplete-new?hl=ko]을 제공합니다.

기본적으로 사용자가 장소를 선택하면 SearchBox가 선택된 장소의 사용 가능한 모든 데이터 필드를 반환하며 그에 따라 요금이 청구 [https://developers.google.com/maps/billing/understanding-cost-of-use?hl=ko#places-details]됩니다.
특정 필드만 반환하도록 SearchBox 요청을 제한할 수 있는 방법은 없습니다.
필요하지 않은 데이터를 요청하고 비용을 지불하지 않으려면 자동 완성 위젯 [https://developers.google.com/maps/documentation/javascript/legacy/place-autocomplete?hl=ko#add-autocomplete]을 대신 사용하세요.

SearchBox [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#SearchBox]를 사용하면 '의정부 부대찌개' 또는 '홍대 근처 클럽'과 같은 텍스트 기반 지역 검색을 실행할 수 있습니다.
텍스트 입력란에 SearchBox를 연결할 수 있습니다. 그러면 텍스트를 입력할 때 서비스에서 예상 검색어를 드롭다운 선택 목록의 형태로 반환합니다.

SearchBox는 확장된 예상 검색어 목록을 제공하며 이 목록에는 Places API에서 정의한 장소 및 추천 검색어가 포함될 수 있습니다. 예를 들어 사용자가 'pizza in new'를 입력하는 경우 선택 목록에 'pizza in New York, NY' 문구 및 다양한 피자 매장 이름이 포함될 수 있습니다. 사용자가 목록에서 장소를 선택하면 해당 장소에 대한 정보가 SearchBox 객체에 반환되며 애플리케이션에서 정보를 가져올 수 있습니다.

참고: Google 지역 정보 검색창의 예상 검색어를 표시하는 경우에는 'Google 제공'이라는 로고를 포함해야 합니다.
이 로고는 편의를 위해 기본적으로 결과 목록에 포함됩니다.

SearchBox 생성자는 다음 두 인수를 사용합니다.

text 유형의 HTML input 요소. SearchBox 서비스가 모니터링하고 결과를 첨부하는 입력란입니다.
options 인수: bounds 속성을 포함할 수 있습니다. bounds는 장소를 검색할 영역을 지정하는 google.maps.LatLngBounds 객체입니다. 이 경계 안에 포함된 장소에 편중되지만 이 장소만으로 제한되지는 않는 결과가 나옵니다.

다음 코드에서는 경계 매개변수를 사용하여 위도/경도 좌표를 통해 지정된 특정 지리적 영역 내의 장소에 편중된 결과를 얻습니다.

new google.maps.LatLng(-33.8474, 151.2631));

new google.maps.Marker({
map,
icon,
position: place.geometry.location,

if (place.geometry.viewport) {

new google.maps.Marker({
map,
icon,
position: place.geometry.location,
if (place.geometry.viewport) {
AutocompleteService는 다음 메서드를 제공합니다.

getPlacePredictions()는 장소 예상 검색어를 반환합니다.
참고: '장소'는 Places API에 정의된 것처럼 시설, 지리적 위치 또는 유명한 관심 장소가 될 수 있습니다.
getQueryPredictions()는 확장된 예상 검색어 목록을 반환하며 이 목록에는 Places API에서 정의한 장소 및 추천 검색어가 포함될 수 있습니다. 예를 들어 사용자가 'pizza in new'를 입력하는 경우 선택 목록에 'pizza in New York, NY' 문구 및 다양한 피자 매장 이름이 포함될 수 있습니다.

위의 두 메서드 모두 다음과 같은 형식의 예상 검색어 객체 [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#AutocompletePrediction] 배열을 반환합니다.

description은 일치하는 예상 검색어입니다.
distance_meters는 지정된 AutocompletionRequest.origin에서 장소까지의 거리(미터)입니다.
matched_substrings에는 사용자 입력의 요소와 일치하는 description에 있는 하위 문자열의 집합이 포함됩니다. 이 객체는 애플리케이션에서 이러한 하위 문자열을 강조 표시하는 데 유용합니다. 대부분의 경우 쿼리는 description 필드의 하위 문자열로 표시됩니다.

length는 하위 문자열의 길이입니다.
offset은 일치하는 하위 문자열이 표시되는 description 문자열의 시작 부분부터 측정한 문자 오프셋입니다.

place_id는 장소를 고유하게 나타내는 텍스트 식별자입니다. 장소에 관한 정보를 가져오려면 장소 세부정보 요청 [https://developers.google.com/maps/documentation/javascript/places?hl=ko#place_details]의 placeId 필드에 이 식별자를 전달하세요. 장소 ID로 장소를 참조 [https://developers.google.com/maps/documentation/javascript/places?hl=ko#placeid]하는 방법에 대해 자세히 알아보세요.
terms는 쿼리의 요소가 포함된 배열입니다.  장소의 경우 각 요소는 대개 주소의 한 부분을 구성합니다.

offset은 일치하는 하위 문자열이 표시되는 description 문자열의 시작 부분부터 측정한 문자 오프셋입니다.
value는 일치하는 검색어입니다.

아래 예에서는 'pizza near'라는 문구에 대한 쿼리 예상 검색어 요청을 실행하고 결과를 목록으로 표시합니다.

TypeScript
return;
(document.getElementById("results") as HTMLUListElement).appendChild(li);
return;
style.css [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/places-queryprediction/docs/style.css#L7-L6]

HTML
<html>
<head>
<title>Retrieving Autocomplete Predictions</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<p>Query suggestions for 'pizza near Syd':</p>
<ul id="results"></ul>
<!-- Replace Powered By Google image src with self hosted image. https://developers.google.com/maps/documentation/places/web-service/policies#other_attribution_requirements -->
<img
class="powered-by-google"
src="https://storage.googleapis.com/geo-devrel-public-buckets/powered_by_google_on_white.png"
alt="Powered by Google"
/>

<!--
The `defer` attribute causes the script to execute after the full HTML
document has been parsed. For non-blocking uses, avoiding race conditions,
and consistent behavior across browsers, consider loading using Promises. See
https://developers.google.com/maps/documentation/javascript/load-maps-js-api
for more information.
-->
<script
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initService&libraries=places&v=weekly"
defer
></script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/places-queryprediction/docs/index.html#L8-L37]

샘플 사용해 보기

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/places-queryprediction/jsfiddle]

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-places-queryprediction&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]

예 보기 [https://developers.google.com/maps/documentation/javascript/examples/places-queryprediction?hl=ko]

세션 토큰

팁: 앱에서 자동 완성 위젯 [https://developers.google.com/maps/documentation/javascript/places-autocomplete?hl=ko#summary-of-classes]을 사용하는 경우 위젯이 백그라운드에서 세션을 자동으로 처리하므로 세션을 구현할 필요가 없습니다.

AutocompleteService.getPlacePredictions() [https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service?hl=ko#AutocompleteService.getPlacePredictions]는 세션 토큰(구현되는 경우)을 사용하여 결제 목적의 자동 완성 요청을 그룹화할 수 있습니다. 세션 토큰은 사용자 자동 완성 검색의 쿼리 및 선택 단계를 결제 목적의 개별 세션으로 그룹화합니다. 세션은 사용자가 쿼리를 입력하기 시작하면 시작되고 장소를 선택하면 종료됩니다. 세션마다 여러 개의 쿼리가 포함될 수 있으며 하나의 장소가 선택됩니다.
세션이 종료되면 토큰이 더 이상 유효하지 않습니다. 앱에서 각 세션에 대해 새 토큰을 생성해야 합니다. 모든 자동 완성 세션에 세션 토큰을 사용하는 것이 좋습니다. sessionToken 매개변수가 생략되거나 세션 토큰을 재사용하는 경우 세션 토큰이 제공되지 않은 것처럼 세션에 대해 요금이 청구됩니다(각 요청에 대해 별도로 요금이 청구됨).

동일한 세션 토큰을 사용하여 AutocompleteService.getPlacePredictions() 호출의 결과로 생성된 장소에 대해 단일 장소 세부정보 [https://developers.google.com/maps/documentation/javascript/places?hl=ko#place_details] 요청을 할 수 있습니다.
이 경우 자동 완성 요청이 장소 세부정보 요청과 결합되며 호출에 대해 일반 장소 세부정보 요청으로 요금이 청구됩니다. 자동 완성 요청에는
요금이 부과되지 않습니다.

새 세션마다 고유한 세션 토큰을 전달해야 합니다. 둘 이상의 자동 완성 세션에 동일한 토큰을 사용하면 해당 자동 완성 세션이 무효화되며 유효하지 않은 세션의 모든 자동 완성 요청에 대해 요청별 자동 완성 SKU [https://developers.google.com/maps/billing-and-pricing/sku-details?hl=ko#ac-per-request-ess-sku]를 사용하여 개별적으로 요금이 청구됩니다. 세션 토큰에 대해 자세히 알아보세요 [https://developers.google.com/maps/documentation/places/web-service/session-tokens?hl=ko].

다음 예에서는 세션 토큰을 만든 다음 AutocompleteService에 전달합니다(displaySuggestions() 함수는 간결성을 위해 생략했습니다).

새 세션마다 고유한 세션 토큰을 전달해야 합니다. 두 개 이상의 세션에 동일한 토큰을 사용하면 각 요청에 대해 개별적으로 요금이 청구됩니다.

세션 토큰에 대해 자세히 알아보세요 [https://developers.google.com/maps/documentation/places/web-service/session-tokens?hl=ko].

자동 완성 및 SearchBox 위젯 스타일 지정

기본적으로 Autocomplete 및 SearchBox에서 제공하는 UI 요소는 Google 지도에 포함되도록 스타일이 지정됩니다. 자신의 사이트에 맞게 스타일링을 조정할 수도 있습니다. 다음과 같은 CSS 클래스를 사용할 수 있습니다. 아래에 나열된 모든 클래스는 Autocomplete 및 SearchBox 위젯에 모두 적용됩니다.

자동 완성 및 SearchBox 위젯용 CSS 클래스

| CSS 클래스 | 설명 |
| --- | --- |
| pac-container | Place Autocomplete 서비스에서 반환한 예상 검색어 목록이 포함된 시각적 요소. 이 목록은 Autocomplete 또는 SearchBox 위젯 아래 드롭다운 목록으로 표시됩니다. |
| pac-icon | 예상 검색어 목록에서 각 항목의 왼쪽에 표시되는 아이콘. |
| pac-item | Autocomplete 또는 SearchBox 위젯에서 제공하는 예상 검색어 목록의 항목. |
| pac-item:hover | 사용자가 마우스 포인터로 가리키는 항목. |
| pac-item-selected | 사용자가 키보드를 사용하여 선택한 항목. 참고: 선택된 항목은 이 클래스 및 pac-item 클래스의 멤버입니다. |
| pac-item-query | 예상 검색어의 주요 부분인 pac-item 내부의 범위. 지리적 위치의 경우 '시드니'와 같은 장소 이름이나 '10. King Street'와 같은 도로명과 번지가 포함됩니다. 'pizza in New York'과 같은 텍스트 기반 검색의 경우 쿼리의 전체 텍스트가 포함됩니다. 기본적으로 pac-item-query는 검은색으로 지정됩니다. pac-item에 추가 텍스트가 있으면 pac-item-query의 외부에 있으며 pac-item의 스타일을 상속합니다. 기본적으로 색상은 회색으로 지정됩니다. 추가 텍스트는 일반적으로 주소입니다. |
| pac-matched | 사용자의 입력과 일치하는 반환된 예상 검색어의 일부입니다. 기본적으로 일치하는 텍스트는 굵은 텍스트로 강조 표시됩니다. 일치하는 텍스트는 pac-item 내 어디에나 있을 수 있습니다. pac-item-query의 일부일 필요는 없으며 pac-item-query 내부와 pac-item의 나머지 텍스트에 부분적으로 포함될 수 있습니다. |

Place Autocomplete (기존) 최적화

이 섹션에서는 Place Autocomplete (Legacy) 서비스를 최대한 활용하는 데 도움이 되는 권장사항을 설명합니다.

다음은 일반 가이드라인입니다.

작동하는 사용자 인터페이스를 개발하는 가장 빠른 방법은 Maps JavaScript API 장소 자동 완성 (기존) 위젯 [https://developers.google.com/maps/documentation/javascript/places-autocomplete?hl=ko#add-autocomplete], Android용 Places SDK 장소 자동 완성 (기존) 위젯 [https://developers.google.com/maps/documentation/places/android-sdk/autocomplete?hl=ko#add_an_autocomplete_widget] 또는 iOS용 Places SDK 장소 자동 완성 (기존) UI 컨트롤 [https://developers.google.com/maps/documentation/places/ios-sdk/autocomplete?hl=ko#adding_an_autocomplete_ui_control]을 사용하는 것입니다.
처음부터 기본적인 Place Autocomplete (Legacy) 데이터 필드 [https://developers.google.com/maps/documentation/javascript/legacy/place-data-fields?hl=ko]를 이해합니다.

위치 상세 검색 및 위치 제한 필드는 선택사항이지만 자동 완성 성능에 상당한 영향을 미칠 수 있습니다.
API가 오류를 반환하는 경우 오류 처리를 사용하여 앱의 성능이 적절히 저하되도록 합니다.
선택된 항목이 없을 때 앱에서 처리하고 사용자에게 계속할 수 있는 방법을 제공하도록 합니다.

비용 최적화 권장사항

기본 비용 최적화

Place Autocomplete (Legacy) 서비스 사용 비용을 최적화하려면 장소 세부정보 (Legacy) 및 Place Autocomplete (Legacy) 위젯에서 필드 마스크를 사용하여 필요한 장소 데이터 필드 [https://developers.google.com/maps/documentation/javascript/legacy/place-data-fields?hl=ko]만 반환하세요.

고급 비용 최적화

요청당 가격 [https://developers.google.com/maps/billing-and-pricing/sku-details?hl=ko#ac-per-request]에 액세스하고 장소 세부정보 (레거시) 대신 선택된 장소에 대한 Geocoding API 결과 [https://developers.google.com/maps/documentation/geocoding/overview?hl=ko#results]를 요청하려면 Place Autocomplete (레거시)를 프로그래매틱 방식으로 구현해 보세요. Geocoding API와 연결된 요청당 가격은 다음 두 조건이 모두 충족되는 경우 세션당(세션 기반) 가격보다 비용 효과적입니다.

사용자가 선택한 장소의 위도/경도 또는 주소만 필요한 경우 Geocoding API는 장소 세부정보 (기존) 호출보다 낮은 비용으로 이 정보를 제공합니다.
사용자가 평균 네 개 이하의 Place Autocomplete (기존) 예상 검색어 요청 내에서 자동 완성 예상 검색어를 선택하면 요청당 가격이 세션당 가격보다 비용 효과적일 수 있습니다.

요구에 맞는 Place Autocomplete (기존) 구현을 선택하는 데 도움이 필요하면 다음 질문에 대한 답변에 해당하는 탭을 선택하세요.
애플리케이션에 선택된 예상 검색어의 주소 및 위도/경도 이외의 정보가 필요한가요?
[TAB_GROUP_PLACEHOLDER_0]

비용은 Google Maps Platform 가격 목록 [https://developers.google.com/maps/billing-and-pricing/pricing?hl=ko]을 참고하세요.

성능 권장사항

다음 가이드라인에서는 Place Autocomplete (기존) 성능을 최적화하는 방법을 설명합니다.

Place Autocomplete (Legacy) 구현에 국가별 제한사항, 위치 상세 검색 [https://developers.google.com/maps/documentation/places/web-service/autocomplete?hl=ko#location_biasing], (프로그래매틱 구현의 경우) 언어 환경설정을 추가합니다. 위젯은 사용자의 브라우저 또는 휴대기기에서 언어 환경설정을 선택하므로 언어 환경설정이 필요하지 않습니다.

Place Autocomplete (기존)에 지도와 함께 제공된 경우 지도 표시 영역별로 위치를 상세 검색할 수 있습니다.
예상 검색어 중 원하는 결과 주소가 없어 사용자가 Place Autocomplete (Legacy) 예상 검색어 중 하나를 선택하지 않는 경우 원래 사용자 입력을 재사용하여 더 관련성 높은 결과를 얻을 수 있습니다.
사용자가 주소 정보만 입력할 것으로 예상되는 경우 Geocoding API [https://developers.google.com/maps/documentation/geocoding/overview?hl=ko] 호출 시 원래 사용자 입력을 재사용합니다.
사용자가 이름 또는 주소로 특정 장소에 대한 쿼리를 입력할 것으로 예상되는 경우 Find Place (Legacy) 요청 [https://developers.google.com/maps/documentation/places/web-service/search?hl=ko#FindPlaceRequests]을 사용합니다.
특정 지역에서만 결과가 예상되는 경우 위치 상세 검색 [https://developers.google.com/maps/documentation/places/web-service/autocomplete?hl=ko#location_biasing]을 사용합니다.
다음과 같은 경우에는 Geocoding API로 대체하는 것이 가장 좋습니다.
건물 내 특정 단위 또는 아파트 주소와 같은 하위 구역 주소를 입력하는 사용자 예를 들어 체코 주소인 'Stroupežnického 3191/17, Praha'를 바탕으로 Place Autocomplete (기존)에서 부분 예측이 이루어집니다.
사용자가 뉴욕시의 '23-30 29th St, Queens' 또는 하와이 카우아이섬의 '47-380 Kamehameha Hwy, Kaneohe'처럼 도로 구간 접두사가 있는 주소를 입력하는 경우

사용량 한도

할당량
할당량 및 가격 정보는 Places API의 사용량 및 결제 문서 [https://developers.google.com/maps/documentation/places/web-service/usage-and-billing?hl=ko]를 참고하세요.

의견 보내기