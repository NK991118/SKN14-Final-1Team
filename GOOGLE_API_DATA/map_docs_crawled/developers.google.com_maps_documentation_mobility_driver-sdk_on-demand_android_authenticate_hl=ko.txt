Source URL: https://developers.google.com/maps/documentation/mobility/driver-sdk/on-demand/android/authenticate?hl=ko
Title: 승인 토큰 가져오기

승인 토큰 가져오기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

토큰이란 무엇인가요?

Fleet Engine에서는 신뢰도가 낮은 환경(스마트폰 및 브라우저)에서 API 메서드를 호출할 때 JSON 웹 토큰(JWT)을 사용해야 합니다.

JWT는 서버에서 생성되고 서명, 암호화되어 만료되거나 더 이상 유효하지 않을 때까지 후속 서버 상호작용을 위해 클라이언트에 전달됩니다.

주요 세부정보

애플리케이션 기본 사용자 인증 정보 [https://google.aip.dev/auth/4110]를 사용하여 Fleet Engine에 대해 인증하고 승인합니다.
적절한 서비스 계정을 사용하여 JWT에 서명합니다. Fleet Engine 기본사항의 Fleet Engine 서비스 계정 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/set-up-fleet/service-accounts?hl=ko#fleet_engine_service_account_roles] 역할을 참고하세요.

JSON 웹 토큰에 관한 자세한 내용은 Fleet Engine 필수사항의 JSON 웹 토큰 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/set-up-fleet/jwt?hl=ko]을 참고하세요.

클라이언트는 어떻게 토큰을 받나요?

드라이버 또는 소비자가 적절한 승인 사용자 인증 정보를 사용하여 앱에 로그인하면 해당 기기에서 발행된 업데이트는 앱의 권한을 Fleet Engine에 전달하는 적절한 승인 토큰을 사용해야 합니다.

개발자로서 클라이언트 구현은 다음 기능을 제공해야 합니다.

서버에서 JSON 웹 토큰을 가져옵니다.
토큰이 만료될 때까지 재사용하여 토큰 새로고침을 최소화합니다.
토큰이 만료되면 토큰을 새로고침합니다.

AuthTokenFactory 클래스는 위치 업데이트 시간에 승인 토큰을 생성합니다. SDK는 Fleet Engine으로 전송할 업데이트 정보와 함께 토큰을 패키징해야 합니다. SDK를 초기화하기 전에 서버 측 구현에서 토큰을 발급할 수 있는지 확인하세요.

Fleet Engine 서비스에서 예상하는 토큰에 관한 자세한 내용은 Fleet Engine용 JSON 웹 토큰 발급 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/set-up-fleet/issue-jwt?hl=ko]을 참고하세요.

승인 토큰 가져오기의 예

다음은 AuthTokenFactory의 스켈레톤 구현입니다.
class JsonAuthTokenFactory implements AuthTokenFactory {
private String vehicleServiceToken;  // initially null
private long expiryTimeMs = 0;
private String vehicleId;

String vehicleId = requireNonNull(context.getVehicleId());

if (System.currentTimeMillis() > expiryTimeMs || !vehicleId.equals(this.vehicleId)) {
String url = "https://yourauthserver.example/token/" + vehicleId;

try (Reader r = new InputStreamReader(new URL(url).openStream())) {
com.google.gson.JsonObject obj
= com.google.gson.JsonParser.parseReader(r).getAsJsonObject();
vehicleServiceToken = obj.get("VehicleServiceToken").getAsString();
expiryTimeMs = obj.get("TokenExpiryMs").getAsLong();

this.vehicleId = vehicleId;