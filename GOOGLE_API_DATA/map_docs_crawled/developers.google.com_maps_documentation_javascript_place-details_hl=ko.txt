Source URL: https://developers.google.com/maps/documentation/javascript/place-details?hl=ko
Title: 장소 세부정보 (신규)

의견 보내기

장소 세부정보 (신규)

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/places/android-sdk/details-place?hl=ko]

iOS [https://developers.google.com/maps/documentation/places/ios-sdk/details-place?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/place-details?hl=ko]

웹 서비스 [https://developers.google.com/maps/documentation/places/web-service/place-details?hl=ko]

유럽 경제 지역 (EEA) 개발자

청구서 수신 주소가 유럽 경제 지역에 있는 경우 2025년 7월 8일부터
Google Maps Platform EEA 서비스 약관 [https://cloud.google.com/terms/maps-platform/eea?hl=ko]
이 서비스 이용에 적용됩니다. 기능은 리전에 따라 다릅니다.
자세히 알아보기 [https://developers.google.com/maps/comms/eea/faq?hl=ko]

필드 가져오기

기존 Place 객체 또는 장소 ID가 있는 경우 Place.fetchFields() 메서드를 사용하여 해당 장소에 대한 세부정보를 가져옵니다. 반환할 장소 데이터 필드 [https://developers.google.com/maps/documentation/javascript/place-class-data-fields?hl=ko]의 쉼표로 구분된 목록을 제공합니다. 필드 이름을 카멜 표기법으로 지정합니다. 반환된 Place 객체를 사용하여 요청된 필드의 데이터를 가져옵니다.

다음 예에서는 장소 ID를 사용하여 새 Place를 만들고 displayName 및 formattedAddress 필드를 요청하는 Place.fetchFields()를 호출하고, 지도에 마커를 추가하고, 일부 데이터를 콘솔에 로깅합니다.

TypeScript
async function getPlaceDetails() {
const { Place } =  await google.maps.importLibrary("places") as google.maps.PlacesLibrary;
const { AdvancedMarkerElement } = await google.maps.importLibrary("marker") as google.maps.MarkerLibrary;

position: place.location,
const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");
position: place.location,
Map 및 Place는 이 함수 전에 선언되었습니다.

const { Map } = await google.maps.importLibrary("maps");
const { Place } = await google.maps.importLibrary("places");

전체 예 보기 [https://developers.google.com/maps/documentation/javascript/examples/place-class?hl=ko]

의견 보내기