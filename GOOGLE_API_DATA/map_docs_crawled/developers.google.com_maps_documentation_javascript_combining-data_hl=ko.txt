Source URL: https://developers.google.com/maps/documentation/javascript/combining-data?hl=ko
Title: 여러 데이터 소스 결합 및 시각화

의견 보내기

여러 데이터 소스 결합 및 시각화

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

개요

이 튜토리얼에서는 Google 지도에 여러 소스의 데이터를 표시하는 방법을 설명합니다. 예를 들어 아래의 등치지역도에서는 두 개의 서로 다른 소스를 사용하여 미국의 여러 주를 강조표시하고 주별 데이터를 표시합니다.
지도에는 GeoJSON 파일의 데이터를 사용하여 미국의 주 경계를 정의하는 다각형이 표시됩니다. 또한 시뮬레이션된 US Census API 쿼리에서 가져온, 각 주에 해당하는 데이터도 표시됩니다.
컨트롤 드롭다운 메뉴에서 데이터 카테고리를 선택하여 지도의 다각형을 업데이트합니다.
지도의 데이터 상자 컨트롤에서 주 다각형 위로 마우스를 가져가 주별 정보를 확인할 수도 있습니다.

아래 샘플은 이 지도를 만드는 데 필요한 전체 코드를 보여줍니다.

TypeScript

function initMap(): void {
map.data.addListener("mouseover", mouseInToRegion);
map.data.addListener("mouseout", mouseOutOfRegion);

google.maps.event.addDomListener(selectBox, "change", () => {
clearCensusData();
loadCensusData(selectBox.options[selectBox.selectedIndex].value);
"https://storage.googleapis.com/mapsdevsite/json/states.js",

xhr.onload = function () {
censusData.forEach((row: string) => {
(document.getElementById("census-max") as HTMLElement).textContent =
censusMax.toLocaleString();
censusMax = -Number.MAX_VALUE;
map.data.forEach((row) => {
row.setProperty("census_variable", undefined);
(document.getElementById("data-caret") as HTMLElement).style.display = "none";

censusVariable == null ||
isNaN(censusVariable)
) {
showRow = false;

if (feature.getProperty("state") === "hover") {
outlineWeight = zIndex = 2;

(document.getElementById("data-value") as HTMLElement).textContent = e.feature
.getProperty("census_variable")
.toLocaleString();
(document.getElementById("data-box") as HTMLElement).style.display = "block";
(document.getElementById("data-caret") as HTMLElement).style.display =
"block";
(document.getElementById("data-caret") as HTMLElement).style.paddingLeft =
percent + "%";

function initMap() {
map.data.addListener("mouseover", mouseInToRegion);
map.data.addListener("mouseout", mouseOutOfRegion);

loadCensusData(selectBox.options[selectBox.selectedIndex].value);
"https://storage.googleapis.com/mapsdevsite/json/states.js",
xhr.onload = function () {
censusData.forEach((row) => {
censusMax = -Number.MAX_VALUE;
map.data.forEach((row) => {
row.setProperty("census_variable", undefined);

if (feature.getProperty("state") === "hover") {
outlineWeight = zIndex = 2;

html,
body,
<html>
<head>
<title>Mashups with google.maps.Data</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<div id="controls" class="nicebox">
<div>
<select id="census-variable">
<option
value="https://storage.googleapis.com/mapsdevsite/json/DP02_0066PE"
>
Percent of population over 25 that completed high school
</option>
<option
value="https://storage.googleapis.com/mapsdevsite/json/DP05_0017E"
>
Median age
</option>
<option
value="https://storage.googleapis.com/mapsdevsite/json/DP05_0001E"
>
Total population
</option>
<option
value="https://storage.googleapis.com/mapsdevsite/json/DP02_0016E"
>
Average family size
</option>
<option
value="https://storage.googleapis.com/mapsdevsite/json/DP03_0088E"
>
Per-capita income
</option>
</select>
</div>
<div id="legend">
<div id="census-min">min</div>
<div class="color-key"><span id="data-caret">&#x25c6;</span></div>
<div id="census-max">max</div>
</div>
</div>
<div id="data-box" class="nicebox">
<label id="data-label" for="data-value"></label>
<span id="data-value"></span>
</div>
<div id="map"></div>

<!--
The `defer` attribute causes the script to execute after the full HTML
document has been parsed. For non-blocking uses, avoiding race conditions,
and consistent behavior across browsers, consider loading using Promises. See
https://developers.google.com/maps/documentation/javascript/load-maps-js-api
for more information.
-->
<script
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap&v=weekly"
defer
></script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/combining-data/docs/index.html#L8-L70]

샘플 사용해 보기

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/combining-data/jsfiddle]

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-combining-data&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]

시작하기

이 튜토리얼의 코드를 사용하여 자신만의 등치지역도 버전을 개발할 수 있습니다.
이렇게 하려면 텍스트 편집기에서 새 파일을 만들어 index.html로 저장하세요.

이 파일에 추가할 수 있는 코드를 이해하려면 다음 섹션을 읽어보세요.

기본 지도 만들기

이 섹션에서는 기본 지도를 설정하는 코드를 설명합니다. 이 방법은 Maps JavaScript API를 시작할 때 지도를 만든 방법과 비슷합니다.

아래 코드를 index.html 파일에 복사합니다. 이 코드는 Maps JavaScript API를 로드하고 지도를 전체 화면으로 만듭니다.

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<title>Mashups with google.maps.Data</title>
<style>
YOUR_API_KEY를 애플리케이션의 API 키로 바꾸세요. API가 완전히 로드된 후 아래 스크립트 태그의 콜백 매개변수가 HTML 파일의 initMap() 함수를 실행합니다.

<script> defer
src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap"
</script>

지도 컨트롤 만들기 및 스타일 지정

아래 코드는 지도에 다음과 같은 컨트롤을 만듭니다.

5가지 데이터 옵션이 있는 드롭다운 메뉴가 포함된 컨트롤
지도 범례
다각형 위로 마우스를 가져가면 표시되는 주별 데이터를 표시하는 데이터 상자

<div id="controls" class="nicebox">
<div>
<select id="census-variable">
<option value="https://storage.googleapis.com/mapsdevsite/json/DP02_0066PE">Percent of population over 25 that completed high
school</option>
<option value="https://storage.googleapis.com/mapsdevsite/json/DP05_0017E">Median age</option>
<option value="https://storage.googleapis.com/mapsdevsite/json/DP05_0001E">Total population</option>
<option value="https://storage.googleapis.com/mapsdevsite/json/DP02_0016E">Average family size</option>
<option value="https://storage.googleapis.com/mapsdevsite/json/DP03_0088E">Per-capita income</option>
</select>
</div>
<div id="legend">
<div id="census-min">min</div>
<div class="color-key"><span id="data-caret">◆</span></div>
<div id="census-max">max</div>
</div>
</div>
<div id="data-box" class="nicebox">
<label id="data-label" for="data-value"></label>
<span id="data-value"></span>
</div>

지도 컨트롤의 스타일을 지정하려면 style 태그 내에 아래 코드를 사용하세요.

<style>
html, body, #map { height: 100%; margin: 0; padding: 0; overflow: hidden; }
hsl(29, 71%, 51%) 17%,
hsl(54, 74%, 47%) 33%,
hsl(78, 76%, 44%) 50%,
hsl(102, 78%, 41%) 67%,
hsl(127, 81%, 37%) 83%,
hsl(151, 83%, 34%) 100%);
US Census API에서 데이터 가져오기

아래 코드는 미국 인구조사국에 모든 미국 주의 최신 인구조사 데이터를 쿼리하여 JSON 형식으로 수신합니다.

function loadCensusData(variable) {
xhr.onload = function() {
censusData.forEach(function(row) {
.getFeatureById(stateId)
.setProperty('census_variable', censusVariable);

function styleFeature(feature) {

isNaN(feature.getProperty('census_variable'))) {
showRow = false;
map.data.addListener('mouseout', mouseOutOfRegion);

/**
* Responds to the mouse-in event on a map shape (state).
* @param {?google.maps.MapMouseEvent} e
*/
function mouseInToRegion(e) {

아래 행을 initMap 함수 끝에 추가합니다.

지도 컨트롤 드롭다운 메뉴에서 데이터 소스 옵션을 선택하면 지도가 지정된 변수를 US Census Data API [http://www.census.gov/developers/]에 쿼리합니다. 인구조사 데이터를 도형 데이터와 연결하기 위해 코드에서는 idPropertyName [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#Data.GeoJsonOptions]을 인구조사 데이터 및 GeoJson 모두에서 공통 키인 'STATE'로 설정합니다.

추가 정보

이 데모에서는 Census Bureau Data API [http://www.census.gov/developers/]를 사용하지만 인구조사국에서 보증하거나 인구조사국의 인증을 받지 않았습니다.

의견 보내기