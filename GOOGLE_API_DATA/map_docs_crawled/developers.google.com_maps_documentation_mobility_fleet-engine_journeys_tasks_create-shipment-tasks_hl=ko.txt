Source URL: https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/create-shipment-tasks?hl=ko
Title: 배송 작업 만들기

배송 작업 만들기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 문서에서는 Fleet Engine 소개 섹션의 예약된 작업 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/tasks-intro?hl=ko] 소개 가이드와 이 섹션의 예약된 작업이란 무엇인가요? [https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks?hl=ko]를 읽었다고 가정합니다.

예약된 작업용 Fleet Engine은 다음과 같은 다양한 광범위한 작업 카테고리를 제공합니다.

배송 작업: 배송 수령 및 배달을 포함한 운전 작업에 사용합니다.
이용 불가능 작업: 필수 휴식 시간 등 운전자가 이용 불가능한 시간에 사용합니다.
예약된 정지 작업: 건물에 들어가거나 배송 지점을 찾는 시간과 같이 드롭 박스나 고객 위치에서 운전하지 않는 작업에 사용합니다.

이 문서에서는 서버에서 배송 작업을 만드는 방법을 설명합니다. 다른 작업 유형은 다른 작업 유형 만들기 [https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/create-other-tasks?hl=ko]를 참고하세요.

배송 작업 필드

이 섹션에서는 픽업 및 배송 작업 모두에 필요한 작업 필드를 설명합니다.

필수 작업 필드

Fleet Engine에서 만드는 모든 작업에는 필수 필드를 제공해야 하며 선택적 필드를 제공할 수도 있습니다. Fleet Engine은 다른 모든 필드를 무시하고 태스크 생성 요청에서 할당된 deliveryVehicleId를 제공하는 경우 예외를 발생시킵니다. 차량에 작업을 할당하려면 UpdateDeliveryVehicleRequest을 사용합니다. 자세한 내용은 작업 업데이트 [https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/update-tasks?hl=ko]를 참고하세요.

| 필드 | 값 |
| --- | --- |
| type | 작업 유형과 일치하는 유형으로 설정합니다. 다음 중 하나입니다. PICKUP DELIVERY SCHEDULED_STOP UNAVAILABLE |
| state | State.OPEN |
| task_id | 고유한 작업 ID입니다. 배송의 운송장 번호가 아니어야 합니다. 시스템에 작업 ID가 없는 경우 범용 고유 식별자 (UUID)를 생성할 수 있습니다. 자세한 내용은 작업 ID를 참고하세요. |
| tracking_id | PICKUP 또는 DELIVERY 작업만 해당: 배송을 추적하는 데 사용하는 번호 또는 식별자입니다. 배송이 아닌 작업에는 이 필드를 제공하지 마세요. |
| planned_location | PICKUP, DELIVERY 또는 SCHEDULED_STOP 작업만 해당: 작업을 완료할 위치입니다. UNAVAILABLE 작업에는 필요하지 않습니다. |
| task_duration | 태스크를 완료하는 데 필요한 예상 시간입니다. 예를 들어 주차장을 찾거나 인계 장소까지 걸어가는 경우입니다. |

선택적 배송 작업 필드

| 필드 | 값 |
| --- | --- |
| target_time_window | 작업을 완료해야 하는 기간입니다. 이 필드는 라우팅 동작에 영향을 미치지 않습니다. |
| task_tracking_view_config | PICKUP 또는 DELIVERY 작업만 해당: 어떤 상황에서 최종 사용자에게 어떤 데이터 요소가 표시되는지 지정하는 작업 추적 구성입니다. |
| attributes | 맞춤 작업 속성 목록입니다. 각 속성에는 고유한 키가 있어야 합니다. |

배송 상품 수령 작업 만들기

Fleet Engine을 사용하여 배송 상품을 수령하는 운전자의 활동을 추적하려면 배송 상품 수령 작업을 만드세요. 여기에는 작업 유형 속성을 PICKUP로 설정하는 작업이 포함됩니다. 다음 예는 그랜드 인도네시아 이스트 몰에서 배송 상품을 수령하는 경우를 보여줍니다.

다음 예에서는 Java gRPC 라이브러리 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/client-libraries-tasks?hl=ko#java]를 사용하여 배송 상품 수령 작업을 만드는 방법 또는 CreateTask [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rest/v1/providers.tasks/create?hl=ko]에 HTTP REST 요청을 보내는 방법을 보여줍니다.

gRPC  static final String PROJECT_ID = "my-delivery-co-gcp-project";

DeliveryServiceBlockingStub deliveryService =
DeliveryServiceGrpc.newBlockingStub(channel);

String parent = "providers/" + PROJECT_ID;
Task task = Task.newBuilder()
.setType(Task.Type.PICKUP)
.setState(Task.State.OPEN)
.setTrackingId("my-tracking-id")
.setPlannedLocation(               // Grand Indonesia East Mall
LocationInfo.newBuilder().setPoint(
LatLng.newBuilder().setLatitude(-6.195139).setLongitude(106.820826)))
.setTaskDuration(
Duration.newBuilder().setSeconds(2 * 60))
.setTargetTimeWindow(
TimeWindow.newBuilder()
.setStartTime(Timestamp.newBuilder().setSeconds(1680123600))
.setEndTime(Timestamp.newBuilder().setSeconds(1680130800)))
.addAttributes(TaskAttribute.newBuilder().setKey("foo").setStringValue("value"))
.addAttributes(TaskAttribute.newBuilder().setKey("bar").setNumberValue(10))
.addAttributes(TaskAttribute.newBuilder().setKey("baz").setBoolValue(false))
.build();

CreateTaskRequest createTaskRequest =
CreateTaskRequest.newBuilder()  // No need for the header
.setParent(parent)          // Avoid using auto-incrementing IDs for the taskId
.setTaskId("task-8241890")  // Task ID assigned by the Provider
.setTask(task)              // Initial state
.build();

Task createdTask = deliveryService.createTask(createTaskRequest);
Status s = e.getStatus();
switch (s.getCode()) {
case ALREADY_EXISTS:
break;
case PERMISSION_DENIED:
break;
REST서버 환경에서 배송 상품 수령 작업을 만들려면 CreateTask에 HTTP REST 호출을 실행하세요.
POST https://fleetengine.googleapis.com/v1/providers/<project_id>/tasks?taskId=<id>
<id>는 작업의 고유 식별자입니다.

요청 헤더에는 값이 Bearer <token>인 Authorization 필드가 포함되어야 합니다. 여기서 <token>은 서비스 계정 역할 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/set-up-fleet/service-accounts?hl=ko] 및 JSON 웹 토큰 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/set-up-fleet/jwt?hl=ko]에 설명된 가이드라인에 따라 서버에서 발급됩니다.

요청 본문에는 배송 작업 필드 [https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/create-shipment-tasks?hl=ko#shipment_task_fields]에 설명된 적절한 필드가 포함된 Task 항목이 있어야 합니다.

curl 명령어 예시:
# Set $JWT, $PROJECT_ID, $TRACKING_ID, and $TASK_ID in the local
# environment
curl -X POST "https://fleetengine.googleapis.com/v1/providers/${PROJECT_ID}/tasks?taskId=${TASK_ID}" \
-H "Content-type: application/json" \
-H "Authorization: Bearer ${JWT}" \
--data-binary @- << EOM
"type": "PICKUP",
"state": "OPEN",
"trackingId": "${TRACKING_ID}",
"plannedLocation": {
"point": {
"latitude": -6.195139,
"longitude": 106.820826
실험적: 실험적 기능으로, 이제 LocationInfo(gRPC [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rpc/maps.fleetengine.delivery.v1?hl=ko#locationinfo] 또는 REST [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rest/v1/LocationInfo?hl=ko]) 필드에서 LatLng와 함께 또는 LatLng 대신 place (gRPC [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rpc/maps.fleetengine.delivery.v1?hl=ko#maps.fleetengine.delivery.v1.LocationInfo.FIELDS.string.maps.fleetengine.delivery.v1.LocationInfo.place] 또는 REST [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rest/v1/LocationInfo?hl=ko#FIELDS.place])를 사용할 수 있습니다.
배송 배송 작업 만들기

Fleet Engine을 사용하여 배송 상품을 배송하는 운전자의 활동을 추적하려면 배송 상품 배송 작업을 만드세요. 여기에는 작업 유형 속성을 DELIVERY로 설정하는 작업이 포함됩니다. 다음 예에서는 Grand Indonesia East Mall로 배송되는 상품을 보여줍니다.

다음 예에서는 Java gRPC 라이브러리 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/client-libraries-tasks?hl=ko#java]를 사용하여 배송 상품 수령 작업을 만드는 방법 또는 CreateTask [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rest/v1/providers.tasks/create?hl=ko]에 HTTP REST 요청을 보내는 방법을 보여줍니다.

gRPC  static final String PROJECT_ID = "my-delivery-co-gcp-project";

DeliveryServiceBlockingStub deliveryService =
DeliveryServiceGrpc.newBlockingStub(channel);

String parent = "providers/" + PROJECT_ID;
Task task = Task.newBuilder()
.setType(Task.Type.DELIVERY)
.setState(Task.State.OPEN)
.setTrackingId("my-tracking-id")
.setPlannedLocation(               // Grand Indonesia East Mall
LocationInfo.newBuilder().setPoint(
LatLng.newBuilder().setLatitude(-6.195139).setLongitude(106.820826)))
.setTaskDuration(
Duration.newBuilder().setSeconds(2 * 60))
.setTargetTimeWindow(
TimeWindow.newBuilder()
.setStartTime(Timestamp.newBuilder().setSeconds(1680123600))
.setEndTime(Timestamp.newBuilder().setSeconds(1680130800)))
.addAttributes(TaskAttribute.newBuilder().setKey("foo").setStringValue("value"))
.addAttributes(TaskAttribute.newBuilder().setKey("bar").setNumberValue(10))
.addAttributes(TaskAttribute.newBuilder().setKey("baz").setBoolValue(false))
.build();

CreateTaskRequest createTaskRequest =
CreateTaskRequest.newBuilder()  // No need for the header
.setParent(parent)          // Avoid using auto-incrementing IDs for the taskId
.setTaskId("task-8241890")  // Task ID assigned by the Provider
.setTask(task)              // Initial state
.build();

Task createdTask = deliveryService.createTask(createTaskRequest);
Status s = e.getStatus();
switch (s.getCode()) {
case ALREADY_EXISTS:
break;
case PERMISSION_DENIED:
break;
REST서버 환경에서 배송 상품 수령 작업을 만들려면 CreateTask에 HTTP REST 호출을 실행하세요.
POST https://fleetengine.googleapis.com/v1/providers/<project_id>/tasks?taskId=<id>
<id>는 작업의 고유 식별자입니다.

요청 헤더에는 값이 Bearer <token>인 Authorization 필드가 포함되어야 합니다. 여기서 <token>은 서비스 계정 역할 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/set-up-fleet/service-accounts?hl=ko] 및 JSON 웹 토큰 [https://developers.google.com/maps/documentation/mobility/fleet-engine/essentials/set-up-fleet/jwt?hl=ko]에 설명된 가이드라인에 따라 서버에서 발급됩니다.

요청 본문에는 Task 항목이 포함되어야 합니다.

curl 명령어 예시:
# Set $JWT, $PROJECT_ID, $TRACKING_ID, and $TASK_ID in the local
# environment
curl -X POST "https://fleetengine.googleapis.com/v1/providers/${PROJECT_ID}/tasks?taskId=${TASK_ID}" \
-H "Content-type: application/json" \
-H "Authorization: Bearer ${JWT}" \
--data-binary @- << EOM
"type": "DELIVERY",
"state": "OPEN",
"trackingId": "${TRACKING_ID}",
"plannedLocation": {
"point": {
"latitude": -6.195139,
"longitude": 106.820826
```
실험적: 실험적 기능으로, 이제 LocationInfo(gRPC [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rpc/maps.fleetengine.delivery.v1?hl=ko#locationinfo] 또는 REST [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rest/v1/LocationInfo?hl=ko]) 필드에서 LatLng와 함께 또는 LatLng 대신 place (gRPC [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rpc/maps.fleetengine.delivery.v1?hl=ko#maps.fleetengine.delivery.v1.LocationInfo.FIELDS.string.maps.fleetengine.delivery.v1.LocationInfo.place] 또는 REST [https://developers.google.com/maps/documentation/mobility/fleet-engine/reference/tasks/rest/v1/LocationInfo?hl=ko#FIELDS.place])를 사용할 수 있습니다.
다음 단계

다른 유형의 작업 만들기 [https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/create-other-tasks?hl=ko]
할 일 업데이트하기 [https://developers.google.com/maps/documentation/mobility/fleet-engine/journeys/tasks/update-tasks?hl=ko]