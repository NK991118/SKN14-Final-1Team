[
  {
    "question": "Gmail API 인증은 어떻게 설정하나요?",
    "answer": "Gmail API 인증 설정 단계:\n\n1. Google Cloud Console에서 프로젝트 생성\n2. Gmail API 활성화\n3. OAuth 2.0 클라이언트 ID 생성\n4. 필요한 스코프 설정:\n   - gmail.readonly: 읽기 전용\n   - gmail.send: 이메일 전송\n   - gmail.modify: 이메일 수정\n\n예제 코드:\n```python\nfrom google.auth.transport.requests import Request\nfrom google.oauth2.credentials import Credentials\nfrom google_auth_oauthlib.flow import InstalledAppFlow\n\nSCOPES = ['https://www.googleapis.com/auth/gmail.send']\n\ncreds = None\nif os.path.exists('token.json'):\n    creds = Credentials.from_authorized_user_file('token.json', SCOPES)\n\nif not creds or not creds.valid:\n    flow = InstalledAppFlow.from_client_secrets_file('credentials.json', SCOPES)\n    creds = flow.run_local_server(port=0)\n```"
  },
  {
    "question": "첨부파일이 있는 이메일을 보내려면?",
    "answer": "첨부파일 포함 이메일 전송:\n\n```python\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\nfrom email.mime.base import MIMEBase\nfrom email import encoders\n\nmessage = MIMEMultipart()\nmessage['to'] = 'recipient@example.com'\nmessage['subject'] = '첨부파일 테스트'\n\n# 본문 추가\nmessage.attach(MIMEText('첨부파일을 확인해주세요.', 'plain'))\n\n# 파일 첨부\nwith open('document.pdf', 'rb') as file:\n    part = MIMEBase('application', 'octet-stream')\n    part.set_payload(file.read())\n    encoders.encode_base64(part)\n    part.add_header('Content-Disposition', f'attachment; filename=\"document.pdf\"')\n    message.attach(part)\n\n# base64 인코딩 후 전송\nraw = base64.urlsafe_b64encode(message.as_bytes()).decode()\nservice.users().messages().send(userId='me', body={'raw': raw}).execute()\n```"
  }
]