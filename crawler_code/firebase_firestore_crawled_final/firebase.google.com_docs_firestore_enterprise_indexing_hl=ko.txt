Source URL: https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko
Title: 색인 관리
bookmark_border

이제 MongoDB 호환성을 갖춘 Cloud Firestore Enterprise 버전을 사용할 수 있습니다. 자세히 알아보기 [https://firebase.google.com/docs/firestore/enterprise/mongodb-compatibility-overview?hl=ko]

의견 보내기

색인 관리

bookmark_borderbookmark

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 페이지의 내용시작하기 전에 [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#before_you_begin]색인 만들기 [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#create_an_index]색인 삭제 [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#delete_an_index]색인 빌드 시간 [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#index_build_time]장기 실행 작업 관리 [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#manage_long-running_operations]모든 장기 실행 작업 나열 [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#list_all_long-running_operations]작업 상태 확인 [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#check_operation_status]완료 시간 예상 [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#estimating_the_completion_time]

| Cloud Firestore Enterprise 버전에만 해당합니다. |
| --- |

이 페이지에서는 색인을 관리하는 방법을 설명합니다. 색인에 대해 자세히 알아보려면 색인 개요 [https://firebase.google.com/docs/firestore/enterprise/index-overview?hl=ko]를 참조하세요.

시작하기 전에

MongoDB 호환성을 갖춘 Cloud Firestore에서 색인을 만들려면 먼저 다음 역할 중 하나가 할당되어야 합니다.

roles/datastore.owner
roles/datastore.indexAdmin
roles/editor
roles/owner

역할을 부여하려면 단일 역할 부여 [https://cloud.google.com/iam/docs/granting-changing-revoking-access?hl=ko#single-role]를 참조하세요.
Cloud Firestore 역할 및 관련 권한에 대한 자세한 내용은 사전 정의된 역할 [https://firebase.google.com/docs/firestore/enterprise/security/iam?hl=ko]을 참조하세요.

커스텀 역할을 정의한 경우 다음 권한을 모두 할당하여 색인을 만듭니다.

datastore.indexes.create
datastore.indexes.delete
datastore.indexes.get
datastore.indexes.list
datastore.indexes.update

색인 만들기

색인을 만들려면 다음 단계를 완료하세요.

--- 탭: MongoDB API [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#mongodb-api] ---
createIndex() [https://www.mongodb.com/docs/manual/reference/method/db.collection.createIndex/] 메서드를 사용하여 색인을 만듭니다. 예를 들면 다음과 같습니다.
db.restaurants.createIndex({"cuisine" : 1})

db.restaurants.createIndex({"cuisine" : 1}, {sparse: true})

db.runCommand()를 사용한 색인 생성도 최대 하나의 색인으로 지원됩니다.
db.runCommand({"createIndexes":"restaurant", "index": [{"key": {"cuisine":1}, {"name": "cuisine_index"}]})

유의해야 할 제한사항은 다음과 같습니다.
요청당 하나의 색인만 만들 수 있습니다. db.collection.createIndexes()는 지원되지 않습니다.
MongoDB API를 사용한 색인 생성의 감사 로그 [https://firebase.google.com/docs/firestore/enterprise/audit-logging?hl=ko]는 google.firestore.admin.v1.FirestoreAdmin.CreateIndex라는 메서드 이름을 사용합니다.
지원되는 색인 옵션은 색인 및 색인 속성 [https://firebase.google.com/docs/firestore/enterprise/supported-features-80?hl=ko#indexes_and_index_properties]을 참조하세요.

--- 탭: Firebase 콘솔 [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#firebase-%EC%BD%98%EC%86%94] ---
Firebase Console에서 Firestore 데이터베이스 페이지로 이동합니다.
Firestore 데이터베이스로 이동 [https://console.firebase.google.com/project/_/firestore/databases/-default-/data/?hl=ko]
데이터베이스 목록에서 데이터베이스를 선택합니다.
색인 탭에서 색인 만들기를 클릭합니다.
컬렉션 ID를 입력합니다.
필드 경로를 하나 이상 추가하고 각 필드의 색인 옵션을 선택합니다.
필드 존재 옵션(비희소 또는 희소)을 선택합니다.
원하는 경우 멀티 키 색인 [https://firebase.google.com/docs/firestore/enterprise/index-overview?hl=ko#multikey] 옵션을 설정할 수 있습니다.
만들기를 클릭합니다.
새 색인이 색인 목록에 표시되고 MongoDB 호환성을 갖춘 Cloud Firestore에서 색인 생성을 시작합니다. 색인이 생성되면 색인 옆에 녹색 체크표시가 나타납니다. 색인이 생성되지 않으면 색인 빌드 오류 [https://firebase.google.com/docs/firestore/enterprise/index-overview?hl=ko#index-building-errors]에서 가능한 원인을 확인하세요.

--- 탭: gcloud CLI [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#gcloud-cli] ---
색인을 만들려면 gcloud firestore indexes composite create [https://cloud.google.com/sdk/gcloud/reference/firestore/indexes/composite/create?hl=ko] 명령어를 사용합니다. api-scope를 mongodb-compatible-api로 설정합니다.
gcloud firestore indexes composite create \
--database='
DATABASE_ID' \
--collection-group=
COLLECTION \
--field-config=
FIELD_CONFIGURATION \
--query-scope=collection-group \
--density=dense \
--api-scope=mongodb-compatible-api
다음을 바꿉니다.
DATABASE_ID: 데이터베이스 ID
COLLECTION: 컬렉션 이름
FIELD_CONFIGURATION: 필드 구성. 각 필드에 --field-config=field-path=를 추가합니다. 예를 들면 다음과 같습니다.
--field-config=field-path=user-id,order=descending \
--field-config=field-path=score,order=descending

이러한 필드 구성에 대한 자세한 내용은 --field-config [https://cloud.google.com/sdk/gcloud/reference/firestore/indexes/composite/create?hl=ko#--field-config]를 참조하세요.
희소 색인을 만들려면 --density=sparse-any를 설정합니다.
멀티 키 색인을 만들려면 --multikey 플래그를 추가합니다.
고유 색인을 만들려면 --unique 플래그를 추가합니다.

--- 탭: Terraform [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#terraform] ---
google_firestore_index [https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/firestore_index] 리소스를 사용하고 api_scope를 MONGODB_COMPATIBLE_API로, query_scope를 COLLECTION_GROUP으로 설정합니다.
resource "google_firestore_index" "index" {
database    = "
DATABASE_ID"
collection  = "
COLLECTION"
api_scope   = "MONGODB_COMPATIBLE_API"
query_scope = "COLLECTION_GROUP"

// You can include multiple field blocks
fields {
field_path = "
FIELD_PATH"
order      = "
ORDER"
}

// Optional
multikey = true
density  = "
DENSITY"
}
다음을 바꿉니다.
DATABASE_ID: 선택한 데이터베이스의 데이터베이스 ID
COLLECTION: 색인을 생성할 컬렉션의 이름
FIELD_PATH: 색인을 생성할 필드의 이름
ORDER: ASCENDING 또는 DESCENDING 중 하나
DENSITY: SPARSE_ANY 또는 DENSE 중 하나

색인 삭제

색인을 삭제하려면 다음 단계를 완료하세요.

--- 탭: MongoDB API [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#mongodb-api] ---
dropIndex() [https://www.mongodb.com/docs/manual/reference/method/db.collection.dropIndex/] 메서드를 사용하여 색인을 삭제합니다. 예를 들면 다음과 같습니다.
색인 이름을 사용하여 색인 삭제
db.restaurants.dropIndex("cuisine_index")
색인 정의를 사용하여 색인 삭제
db.restaurants.dropIndex({"cuisine" : 1})

--- 탭: Firebase 콘솔 [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#firebase-%EC%BD%98%EC%86%94] ---
Firebase Console에서 Firestore 데이터베이스 페이지로 이동합니다.
Firestore 데이터베이스로 이동 [https://console.firebase.google.com/project/_/firestore/databases/-default-/data/?hl=ko]
데이터베이스 목록에서 데이터베이스를 선택합니다.
색인 탭을 클릭합니다.
색인 목록에서 삭제할 색인의 더보기 버튼 more_vert에서 삭제를 선택합니다.
색인 삭제를 클릭합니다.

--- 탭: gcloud CLI [https://firebase.google.com/docs/firestore/enterprise/indexing?hl=ko#gcloud-cli] ---
색인 이름을 찾으려면 gcloud firestore indexes composite list [https://cloud.google.com/sdk/gcloud/reference/firestore/indexes/composite/list?hl=ko] 명령어를 사용합니다.
gcloud firestore indexes composite list \
--database='
DATABASE_ID'
DATABASE_ID를 데이터베이스 ID로 바꿉니다.
색인을 삭제하려면 gcloud firestore indexes composite delete [https://cloud.google.com/sdk/gcloud/reference/firestore/indexes/composite/delete?hl=ko] 명령어를 사용합니다.
gcloud firestore indexes composite delete
INDEX_NAME \
--database='
DATABASE_ID'
다음을 바꿉니다.
INDEX_NAME: 색인 이름
DATABASE_ID: 데이터베이스 ID

색인 빌드 시간

색인을 빌드하려면 MongoDB 호환성을 갖춘 Cloud Firestore가 색인을 만든 다음 색인 항목을 기존 데이터로 백필해야 합니다. 색인을 만드는 데 필요한 시간은 다음에 따라 결정됩니다.

색인의 최소 빌드 시간은 비어 있는 데이터베이스인 경우에도 몇 분 정도 걸립니다.
색인 항목을 백필하는 데 필요한 시간은 새 색인에 속하는 기존 데이터의 양에 따라 다릅니다. 색인 정의와 일치하는 필드 값이 많을수록 색인 항목을 백필하는 데 시간이 오래 걸립니다.

장기 실행 작업 관리

색인 빌드는 장기 실행 작업입니다. 다음 섹션에서는 색인의 장기 실행 작업을 사용하는 방법을 설명합니다.
핵심 용어: MongoDB 호환성을 갖춘 Cloud Firestore는 완료하는 데 시간이 오래 걸릴 수 있는 몇 가지 관리 작업을 지원합니다. 이러한 작업을 장기 실행 작업이라고 합니다. MongoDB 호환성을 갖춘 Cloud Firestore에는 장기 실행 작업을 실행하고 관리하는 기능이 포함되어 있습니다. 지원되는 장기 실행 작업에는 색인 빌드 및 내보내기 작업이 포함됩니다.
색인 생성을 시작하면 MongoDB 호환성을 갖춘 Cloud Firestore에서 작업에 고유한 이름을 할당합니다. 작업 이름은 다음 예시와 같이 projects/PROJECT_ID/databases/DATABASE_ID/operations/로 시작합니다.

projects/PROJECT_ID/databases/DATABASE_ID/operations/ASA1MTAwNDQxNAgadGx1YWZlZAcSeWx0aGdpbi1zYm9qLW5pbWRhEgopEg

describe 명령어에 작업 이름을 지정할 때 프리픽스는 제외할 수 있습니다.

모든 장기 실행 작업 나열

장기 실행 작업을 나열하려면 gcloud firestore operations list [https://cloud.google.com/sdk/gcloud/reference/firestore/operations/list?hl=ko] 명령어를 사용합니다. 이 명령어는 진행 중인 작업과 최근에 완료된 작업을 나열합니다.
작업은 완료 후 며칠 동안 나열됩니다.

gcloud firestore operations list

작업 상태 확인

장기 실행 작업을 모두 나열하는 대신 단일 작업의 세부정보를 나열할 수 있습니다.

gcloud firestore operations describe operation-name

완료 시간 예상

작업이 실행되면 state 필드 [https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1?hl=ko#state] 값을 통해 작업의 전체 상태를 확인할 수 있습니다.

또한 장기 실행 작업 상태를 요청하면 workEstimated 및 workCompleted 측정항목이 반환됩니다. workEstimated는 작업에서 처리할 것으로 예상되는 총 문서 수를 나타냅니다. workCompleted는 현재까지 처리된 문서 수를 나타냅니다. 작업이 완료되면 workCompleted에 실제로 처리된 총 문서 수가 반영되며 이는 workEstimated 값과 다를 수 있습니다.

작업 진행 상황을 추정하려면 workCompleted를 workEstimated로 나눕니다.
참고: 이 예상치는 통계 수집 지연으로 인해 부정확할 수 있습니다.
다음은 색인 생성 진행 상황의 예시입니다.

{
"operations": [
{
"name": "projects/project-id/operations/AyAyMDBiM2U5NTgwZDAtZGIyYi0zYjc0LTIzYWEtZjg1ZGdWFmZWQHEjF0c2Flc3UtcmV4ZWRuaS1uaW1kYRUKSBI",
"metadata": {
"@type": "type.googleapis.com/google.firestore.admin.v1.IndexOperationMetadata",
"common": {
"operationType": "CREATE_INDEX",
"startTime": "2020-06-23T16:52:25.697539Z",
"state": "PROCESSING"
},
"progressDocuments": {
"workCompleted": "219327",
"workEstimated": "2198182"
}
},
},
...

작업이 완료되면 작업 설명에 "done": true [https://cloud.google.com/firestore/docs/reference/rpc/google.longrunning?hl=ko#operation]가 포함됩니다. 작업 결과는 state 필드 [https://cloud.google.com/firestore/docs/reference/rpc/google.firestore.admin.v1?hl=ko#state]의 값을 참조하세요. 응답에 done 필드가 설정되지 않으면 작업이 완료되지 않은 것입니다.

의견 보내기