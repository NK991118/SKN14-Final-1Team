Source URL: https://firebase.google.com/docs/firestore/manage-data/add-data?hl=ko
Title: Cloud Firestore에 데이터 추가

이제 MongoDB 호환성을 갖춘 Cloud Firestore Enterprise 버전을 사용할 수 있습니다. 자세히 알아보기 [https://firebase.google.com/docs/firestore/enterprise/mongodb-compatibility-overview?hl=ko]

의견 보내기

Cloud Firestore에 데이터 추가

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 페이지의 내용개요시작하기 전에Cloud Firestore 초기화문서 설정데이터 유형커스텀 객체문서 추가문서 업데이트서버 타임스탬프중첩된 객체의 필드 업데이트배열 요소 업데이트숫자 값 늘리기

이 문서에서는 Cloud Firestore에서 개별 문서를 설정, 추가 또는 업데이트하는 방법을 설명합니다. 데이터를 일괄 쓰기하려면 트랜잭션 및 일괄 쓰기 [https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko]를 참조하세요.

개요

다음 방법 중 하나로 Cloud Firestore에 데이터를 쓸 수 있습니다.

문서 식별자를 명시적으로 지정하여 컬렉션 내의 문서 데이터를 설정합니다.
컬렉션에 새 문서를 추가합니다. 이 경우 Cloud Firestore에서 자동으로 문서 식별자를 생성합니다.
자동으로 생성된 식별자로 빈 문서를 만들고 나중에 데이터를 할당합니다.

참고: 코드 샘플에서는 여러 언어를 다루지만 샘플을 설명하는 텍스트는 웹 메서드 이름을 참조합니다.시작하기 전에

데이터를 설정, 추가 또는 업데이트하도록 Cloud Firestore를 초기화하려면 다음 단계를 완료해야 합니다.

Cloud Firestore 데이터베이스 만들기 자세한 내용은 Cloud Firestore 시작하기 [https://firebase.google.com/docs/firestore/quickstart?hl=ko]를 참조하세요.
웹 또는 모바일 클라이언트 라이브러리를 사용하는 경우 보안 규칙으로 인증합니다. 자세한 내용은 보안 규칙 시작하기 [https://firebase.google.com/docs/firestore/manage-data/firestore/docs/security/get-started?hl=ko]를 참조하세요.
서버 클라이언트 라이브러리 또는 REST API를 사용하는 경우 Identity and Access Management(IAM)로 인증합니다. 자세한 내용은 서버 클라이언트 라이브러리의 보안 [https://firebase.google.com/firestore/docs/security/iam?hl=ko]을 참조하세요.

Cloud Firestore 초기화

Cloud Firestore의 인스턴스를 초기화합니다.

Web

import { initializeApp } from "firebase/app";
import { getFirestore } from "firebase/firestore";

// TODO: Replace the following with your app's Firebase project configuration
// See: https://support.google.com/firebase/answer/7015592
const firebaseConfig = {
FIREBASE_CONFIGURATION
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);

// Initialize Cloud Firestore and get a reference to the service
const db = getFirestore(app);

FIREBASE_CONFIGURATION을 웹 앱의 firebaseConfig [https://support.google.com/firebase/answer/7015592?hl=ko]로 바꿉니다.

기기의 연결이 끊겨도 데이터를 유지하려면 오프라인 데이터 사용 설정 [https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko] 문서를 참조하세요.

Web

import firebase from "firebase/app";
import "firebase/firestore";

// TODO: Replace the following with your app's Firebase project configuration
// See: https://support.google.com/firebase/answer/7015592
const firebaseConfig = {
FIREBASE_CONFIGURATION
};

// Initialize Firebase
firebase.initializeApp(firebaseConfig);

// Initialize Cloud Firestore and get a reference to the service
const db = firebase.firestore();

FIREBASE_CONFIGURATION을 웹 앱의 firebaseConfig [https://support.google.com/firebase/answer/7015592?hl=ko]로 바꿉니다.

기기의 연결이 끊겨도 데이터를 유지하려면 오프라인 데이터 사용 설정 [https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko] 문서를 참조하세요.

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

import FirebaseCore
import FirebaseFirestore
FirebaseApp.configure()

let db = Firestore.firestore()AppDelegate.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/AppDelegate.swift#L31-L33]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

@import FirebaseCore;
@import FirebaseFirestore;

// Use Firebase library to configure APIs
[FIRApp configure];

FIRFirestore *defaultFirestore = [FIRFirestore firestore];AppDelegate.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/AppDelegate.m#L32-L32]

Kotlin
// Access a Cloud Firestore instance from your Activity
val db = Firebase.firestoreDocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L108-L108]

Java
// Access a Cloud Firestore instance from your Activity
FirebaseFirestore db = FirebaseFirestore.getInstance();DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L130-L130]

Dart
db = FirebaseFirestore.instance;

자바

Cloud Firestore SDK는 환경에 따라 다양한 방식으로 초기화됩니다. 가장 일반적인 방법은 아래와 같습니다. 전체 참조를 보려면 Admin SDK 초기화 [https://firebase.google.com/docs/admin/setup?hl=ko#initialize-sdk]를 참조하세요.

Google Cloud에서 초기화import com.google.auth.oauth2.GoogleCredentials;
import com.google.cloud.firestore.Firestore;

import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;

// Use the application default credentials
GoogleCredentials credentials = GoogleCredentials.getApplicationDefault();
FirebaseOptions options = new FirebaseOptions.Builder()
.setCredentials(credentials)
.setProjectId(projectId)
.build();
FirebaseApp.initializeApp(options);

Firestore db = FirestoreClient.getFirestore();

자체 서버에서 초기화
자체 서버에서 Firebase Admin SDK를 사용하려면 서비스 계정 [https://cloud.google.com/compute/docs/authentication?hl=ko]을 사용합니다.

Google Cloud 콘솔에서 IAM 및 관리자 > 서비스 계정 [https://console.cloud.google.com/iam-admin/serviceaccounts?hl=ko]으로 이동합니다. 새 비공개 키를 생성하고 JSON 파일을 저장합니다. 그런 다음 이 파일을 사용하여 SDK를 초기화합니다.

import com.google.auth.oauth2.GoogleCredentials;
import com.google.cloud.firestore.Firestore;

import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;

// Use a service account
InputStream serviceAccount = new FileInputStream("path/to/serviceAccount.json");
GoogleCredentials credentials = GoogleCredentials.fromStream(serviceAccount);
FirebaseOptions options = new FirebaseOptions.Builder()
.setCredentials(credentials)
.build();
FirebaseApp.initializeApp(options);

Firestore db = FirestoreClient.getFirestore();

Python

Cloud Firestore SDK는 환경에 따라 다양한 방식으로 초기화됩니다. 가장 일반적인 방법은 아래와 같습니다. 전체 참조를 보려면 Admin SDK 초기화 [https://firebase.google.com/docs/admin/setup?hl=ko#initialize-sdk]를 참조하세요.

Google Cloud에서 초기화import firebase_admin
from firebase_admin import firestore

# Application Default credentials are automatically created.
app = firebase_admin.initialize_app()
db = firestore.client()firestore.py [https://github.com/firebase/firebase-admin-python/blob/3d3ef0c9b5f99044c92072b241f470d2dc9fe9d2/snippets/firestore/firestore.py#L20-L25]

기존 애플리케이션 기본 사용자 인증 정보를 사용하여 SDK를 초기화할 수도 있습니다.
import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore

# Use the application default credentials.
cred = credentials.ApplicationDefault()

firebase_admin.initialize_app(cred)
db = firestore.client()firestore.py [https://github.com/firebase/firebase-admin-python/blob/3d3ef0c9b5f99044c92072b241f470d2dc9fe9d2/snippets/firestore/firestore.py#L30-L38]

자체 서버에서 초기화
자체 서버에서 Firebase Admin SDK를 사용하려면 서비스 계정 [https://cloud.google.com/compute/docs/authentication?hl=ko]을 사용합니다.

Google Cloud 콘솔에서 IAM 및 관리자 > 서비스 계정 [https://console.cloud.google.com/iam-admin/serviceaccounts?hl=ko]으로 이동합니다. 새 비공개 키를 생성하고 JSON 파일을 저장합니다. 그런 다음 이 파일을 사용하여 SDK를 초기화합니다.

import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore

# Use a service account.
cred = credentials.Certificate('path/to/serviceAccount.json')

app = firebase_admin.initialize_app(cred)

db = firestore.client()firestore.py [https://github.com/firebase/firebase-admin-python/blob/3d3ef0c9b5f99044c92072b241f470d2dc9fe9d2/snippets/firestore/firestore.py#L43-L52]

Python

Cloud Firestore SDK는 환경에 따라 다양한 방식으로 초기화됩니다. 가장 일반적인 방법은 아래와 같습니다. 전체 참조를 보려면 Admin SDK 초기화 [https://firebase.google.com/docs/admin/setup?hl=ko#initialize-sdk]를 참조하세요.

Google Cloud에서 초기화import firebase_admin
from firebase_admin import firestore_async

# Application Default credentials are automatically created.
app = firebase_admin.initialize_app()
db = firestore_async.client()firestore_async.py [https://github.com/firebase/firebase-admin-python/blob/3d3ef0c9b5f99044c92072b241f470d2dc9fe9d2/snippets/firestore/firestore_async.py#L22-L27]

기존 애플리케이션 기본 사용자 인증 정보를 사용하여 SDK를 초기화할 수도 있습니다.
import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore_async

# Use the application default credentials.
cred = credentials.ApplicationDefault()

firebase_admin.initialize_app(cred)
db = firestore_async.client()firestore_async.py [https://github.com/firebase/firebase-admin-python/blob/3d3ef0c9b5f99044c92072b241f470d2dc9fe9d2/snippets/firestore/firestore_async.py#L32-L40]

자체 서버에서 초기화
자체 서버에서 Firebase Admin SDK를 사용하려면 서비스 계정 [https://cloud.google.com/compute/docs/authentication?hl=ko]을 사용합니다.

Google Cloud 콘솔에서 IAM 및 관리자 > 서비스 계정 [https://console.cloud.google.com/iam-admin/serviceaccounts?hl=ko]으로 이동합니다. 새 비공개 키를 생성하고 JSON 파일을 저장합니다. 그런 다음 이 파일을 사용하여 SDK를 초기화합니다.

import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore_async

# Use a service account.
cred = credentials.Certificate('path/to/serviceAccount.json')

app = firebase_admin.initialize_app(cred)

db = firestore_async.client()firestore_async.py [https://github.com/firebase/firebase-admin-python/blob/3d3ef0c9b5f99044c92072b241f470d2dc9fe9d2/snippets/firestore/firestore_async.py#L45-L54]

C++
// Make sure the call to `Create()` happens some time before you call Firestore::GetInstance().
App::Create();
Firestore* db = Firestore::GetInstance();AppDelegate.mm [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/ios/firestore-snippets-cpp/AppDelegate.mm#L34-L36]

Node.js

Cloud Firestore SDK는 환경에 따라 다양한 방식으로 초기화됩니다. 가장 일반적인 방법은 아래와 같습니다. 전체 참조를 보려면 Admin SDK 초기화 [https://firebase.google.com/docs/admin/setup?hl=ko#initialize-sdk]를 참조하세요.

Cloud Functions에서 초기화const { initializeApp, applicationDefault, cert } = require('firebase-admin/app');
const { getFirestore, Timestamp, FieldValue, Filter } = require('firebase-admin/firestore');
initializeApp();

const db = getFirestore();
index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L45-L48]

Google Cloud에서 초기화const { initializeApp, applicationDefault, cert } = require('firebase-admin/app');
const { getFirestore, Timestamp, FieldValue, Filter } = require('firebase-admin/firestore');
initializeApp({
credential: applicationDefault()
});

const db = getFirestore();index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L30-L35]

자체 서버에서 초기화
자체 서버(또는 다른 Node.js 환경)에서 Firebase Admin SDK를 사용하려면 서비스 계정 [https://cloud.google.com/compute/docs/authentication?hl=ko]을 사용합니다.

Google Cloud 콘솔에서 IAM 및 관리자 > 서비스 계정 [https://console.cloud.google.com/iam-admin/serviceaccounts?hl=ko]으로 이동합니다. 새 비공개 키를 생성하고 JSON 파일을 저장합니다. 그런 다음 이 파일을 사용하여 SDK를 초기화합니다.

const { initializeApp, applicationDefault, cert } = require('firebase-admin/app');
const { getFirestore, Timestamp, FieldValue, Filter } = require('firebase-admin/firestore');
const serviceAccount = require('./path/to/serviceAccountKey.json');

initializeApp({
credential: cert(serviceAccount)
});

const db = getFirestore();
index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L55-L63]

Go

Cloud Firestore SDK는 환경에 따라 다양한 방식으로 초기화됩니다. 가장 일반적인 방법은 아래와 같습니다. 전체 참조를 보려면 Admin SDK 초기화 [https://firebase.google.com/docs/admin/setup?hl=ko#initialize-sdk]를 참조하세요.

Google Cloud에서 초기화import (
"log"

firebase "firebase.google.com/go"
"google.golang.org/api/option"
)

// Use the application default credentials
ctx := context.Background()
conf := &firebase.Config{ProjectID: projectID}
app, err := firebase.NewApp(ctx, conf)
if err != nil {
log.Fatalln(err)
}

client, err := app.Firestore(ctx)
if err != nil {
log.Fatalln(err)
}
defer client.Close()

자체 서버에서 초기화
자체 서버에서 Firebase Admin SDK를 사용하려면 서비스 계정 [https://cloud.google.com/compute/docs/authentication?hl=ko]을 사용합니다.

Google Cloud 콘솔에서 IAM 및 관리자 > 서비스 계정 [https://console.cloud.google.com/iam-admin/serviceaccounts?hl=ko]으로 이동합니다. 새 비공개 키를 생성하고 JSON 파일을 저장합니다. 그런 다음 이 파일을 사용하여 SDK를 초기화합니다.

import (
"log"

firebase "firebase.google.com/go"
"google.golang.org/api/option"
)

// Use a service account
ctx := context.Background()
sa := option.WithCredentialsFile("path/to/serviceAccount.json")
app, err := firebase.NewApp(ctx, nil, sa)
if err != nil {
log.Fatalln(err)
}

client, err := app.Firestore(ctx)
if err != nil {
log.Fatalln(err)
}
defer client.Close()

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

use Google\Cloud\Firestore\FirestoreClient;

/**
* Initialize Cloud Firestore with default project ID.
*/
function setup_client_create(string $projectId = null)
{
// Create the Cloud Firestore client
if (empty($projectId)) {
// The `projectId` parameter is optional and represents which project the
// client will act on behalf of. If not supplied, the client falls back to
// the default project inferred from the environment.
$db = new FirestoreClient();
printf('Created Cloud Firestore client with default project ID.' . PHP_EOL);
} else {
$db = new FirestoreClient([
'projectId' => $projectId,
]);
printf('Created Cloud Firestore client with project ID: %s' . PHP_EOL, $projectId);
}
}setup_client_create.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/setup_client_create.php#L27-L47]

Unity
using Firebase.Firestore;
using Firebase.Extensions;
FirebaseFirestore db = FirebaseFirestore.DefaultInstance;

C#

C#

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

FirestoreDb db = FirestoreDb.Create(project);
Console.WriteLine("Created Cloud Firestore client with project ID: {0}", project);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/Quickstart/Program.cs#L37-L38]

Ruby

require "google/cloud/firestore"

# The `project_id` parameter is optional and represents which project the
# client will act on behalf of. If not supplied, the client falls back to the
# default project inferred from the environment.
firestore = Google::Cloud::Firestore.new project_id: project_id

puts "Created Cloud Firestore client with given project ID."quickstart.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/quickstart.rb#L19-L26]

문서 설정

단일 문서를 만들거나 덮어쓰려면 다음 언어별 set() 메서드를 사용합니다.

Web
setDoc() 메서드를 사용합니다.
import { doc, setDoc } from "firebase/firestore";

// Add a new document in collection "cities"
await setDoc(doc(db, "cities", "LA"), {
name: "Los Angeles",
state: "CA",
country: "USA"
});set_document.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/set_document.js#L8-L15]

Web
set() 메서드를 사용합니다.
// Add a new document in collection "cities"
db.collection("cities").doc("LA").set({
name: "Los Angeles",
state: "CA",
country: "USA"
})
.then(() => {
console.log("Document successfully written!");
})
.catch((error) => {
console.error("Error writing document: ", error);
});test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L221-L232]

Swift
setData() 메서드를 사용합니다.

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

// Add a new document in collection "cities"
do {
try await db.collection("cities").document("LA").setData([
"name": "Los Angeles",
"state": "CA",
"country": "USA"
])
print("Document successfully written!")
} catch {
print("Error writing document: \(error)")
}ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L255-L265]

Objective-C
setData: 메서드를 사용합니다.

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

// Add a new document in collection "cities"
[[[self.db collectionWithPath:@"cities"] documentWithPath:@"LA"] setData:@{
@"name": @"Los Angeles",
@"state": @"CA",
@"country": @"USA"
} completion:^(NSError * _Nullable error) {
if (error != nil) {
NSLog(@"Error writing document: %@", error);
} else {
NSLog(@"Document successfully written!");
}
}];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L198-L209]

Kotlin
set() 메서드를 사용합니다.
val city = hashMapOf(
"name" to "Los Angeles",
"state" to "CA",
"country" to "USA",
)

db.collection("cities").document("LA")
.set(city)
.addOnSuccessListener { Log.d(TAG, "DocumentSnapshot successfully written!") }
.addOnFailureListener { e -> Log.w(TAG, "Error writing document", e) }DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L251-L260]

Java
set() 메서드를 사용합니다.
Map<String, Object> city = new HashMap<>();
city.put("name", "Los Angeles");
city.put("state", "CA");
city.put("country", "USA");

db.collection("cities").document("LA")
.set(city)
.addOnSuccessListener(new OnSuccessListener<Void>() {
@Override
public void onSuccess(Void aVoid) {
Log.d(TAG, "DocumentSnapshot successfully written!");
}
})
.addOnFailureListener(new OnFailureListener() {
@Override
public void onFailure(@NonNull Exception e) {
Log.w(TAG, "Error writing document", e);
}
});DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L336-L354]

Dart
set() 메서드를 사용합니다.
final city = <String, String>{
"name": "Los Angeles",
"state": "CA",
"country": "USA"
};

db
.collection("cities")
.doc("LA")
.set(city)
.onError((e, _) => print("Error writing document: $e"));firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L132-L142]

자바
set() 메서드를 사용합니다.

// Create a Map to store the data we want to set
Map<String, Object> docData = new HashMap<>();
docData.put("name", "Los Angeles");
docData.put("state", "CA");
docData.put("country", "USA");
docData.put("regions", Arrays.asList("west_coast", "socal"));
// Add a new document (asynchronously) in collection "cities" with id "LA"
ApiFuture<WriteResult> future = db.collection("cities").document("LA").set(docData);
// ...
// future.get() blocks on response
System.out.println("Update time : " + future.get().getUpdateTime());ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L58-L68]

Python
set() 메서드를 사용합니다.

data = {"name": "Los Angeles", "state": "CA", "country": "USA"}

# Add a new doc in collection 'cities' with ID 'LA'
db.collection("cities").document("LA").set(data)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L69-L72]

Python
set() 메서드를 사용합니다.

data = {"name": "Los Angeles", "state": "CA", "country": "USA"}

# Add a new doc in collection 'cities' with ID 'LA'
await db.collection("cities").document("LA").set(data)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L65-L68]

C++
Set() 메서드를 사용합니다.
// Add a new document in collection 'cities'
db->Collection("cities")
.Document("LA")
.Set({{"name", FieldValue::String("Los Angeles")},
{"state", FieldValue::String("CA")},
{"country", FieldValue::String("USA")}})
.OnCompletion([](const Future<void>& future) {
if (future.error() == Error::kErrorOk) {
std::cout << "DocumentSnapshot successfully written!" << std::endl;
} else {
std::cout << "Error writing document: " << future.error_message()
<< std::endl;
}
});snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L154-L167]

Node.js
set() 메서드를 사용합니다.

const data = {
name: 'Los Angeles',
state: 'CA',
country: 'USA'
};

// Add a new document in collection "cities" with ID 'LA'
const res = await db.collection('cities').doc('LA').set(data);index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L157-L164]

Go
Set() 메서드를 사용합니다.

import (
"context"
"log"

"cloud.google.com/go/firestore"
)

func addDocAsMap(ctx context.Context, client *firestore.Client) error {
_, err := client.Collection("cities").Doc("LA").Set(ctx, map[string]interface{}{
"name":    "Los Angeles",
"state":   "CA",
"country": "USA",
})
if err != nil {
// Handle any errors in an appropriate way, such as returning them.
log.Printf("An error has occurred: %s", err)
}

return err
}
save_data_set_from_map.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/save_data_set_from_map.go#L18-L39]

PHP
set() 메서드를 사용합니다.

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$data = [
'name' => 'Los Angeles',
'state' => 'CA',
'country' => 'USA'
];
$db->collection('samples/php/cities')->document('LA')->set($data);data_set_from_map.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/data_set_from_map.php#L40-L45]

Unity
SetAsync() 메서드를 사용합니다.
DocumentReference docRef = db.Collection("cities").Document("LA");
Dictionary<string, object> city = new Dictionary<string, object>
{
{ "Name", "Los Angeles" },
{ "State", "CA" },
{ "Country", "USA" }
};
docRef.SetAsync(city).ContinueWithOnMainThread(task => {
Debug.Log("Added data to the LA document in the cities collection.");
});

C#
SetAsync() 메서드를 사용합니다.

DocumentReference docRef = db.Collection("cities").Document("LA");
Dictionary<string, object> city = new Dictionary<string, object>
{
{ "name", "Los Angeles" },
{ "state", "CA" },
{ "country", "USA" }
};
await docRef.SetAsync(city);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L46-L53]

Ruby
set() 메서드를 사용합니다.

city_ref = firestore.doc "#{collection_path}/LA"

data = {
name:    "Los Angeles",
state:   "CA",
country: "USA"
}

city_ref.set dataadd_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/add_data.rb#L24-L32]

문서가 없으면 새로 만듭니다. 문서가 있으면 새로 제공한 데이터로 내용을 덮어쓰지만, 다음과 같이 데이터를 기존 문서와 병합하도록 지정한 경우는 예외입니다.

Web
import { doc, setDoc } from "firebase/firestore";

const cityRef = doc(db, 'cities', 'BJ');
setDoc(cityRef, { capital: true }, { merge: true });set_with_merge.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/set_with_merge.js#L8-L11]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
var cityRef = db.collection('cities').doc('BJ');

var setWithMerge = cityRef.set({
capital: true
}, { merge: true });test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L318-L322]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

// Update one field, creating the document if it does not exist.
db.collection("cities").document("BJ").setData([ "capital": true ], merge: true)ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L392-L393]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

// Write to the document reference, merging data with existing
// if the document already exists
[[[self.db collectionWithPath:@"cities"] documentWithPath:@"BJ"]
setData:@{ @"capital": @YES }
merge:YES
completion:^(NSError * _Nullable error) {
// ...
}];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L323-L330]

Kotlin
// Update one field, creating the document if it does not already exist.
val data = hashMapOf("capital" to true)

db.collection("cities").document("BJ")
.set(data, SetOptions.merge())DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L394-L398]

Java
// Update one field, creating the document if it does not already exist.
Map<String, Object> data = new HashMap<>();
data.put("capital", true);

db.collection("cities").document("BJ")
.set(data, SetOptions.merge());DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L503-L508]

Dart
// Update one field, creating the document if it does not already exist.
final data = {"capital": true};

db.collection("cities").doc("BJ").set(data, SetOptions(merge: true));firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L148-L151]

자바

// asynchronously update doc, create the document if missing
Map<String, Object> update = new HashMap<>();
update.put("capital", true);

ApiFuture<WriteResult> writeResult =
db.collection("cities").document("BJ").set(update, SetOptions.merge());
// ...
System.out.println("Update time : " + writeResult.get().getUpdateTime());ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L206-L213]

Python

city_ref = db.collection("cities").document("BJ")

city_ref.set({"capital": True}, merge=True)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L360-L362]

Python

city_ref = db.collection("cities").document("BJ")

await city_ref.set({"capital": True}, merge=True)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L354-L356]

C++
db->Collection("cities").Document("BJ").Set(
{{"capital", FieldValue::Boolean(true)}}, SetOptions::Merge());snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L175-L176]

Node.js

const cityRef = db.collection('cities').doc('BJ');

const res = await cityRef.set({
capital: true
}, { merge: true });index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L294-L298]

Go

import (
"context"
"log"

"cloud.google.com/go/firestore"
)

func updateDocCreateIfMissing(ctx context.Context, client *firestore.Client) error {
_, err := client.Collection("cities").Doc("BJ").Set(ctx, map[string]interface{}{
"capital": true,
}, firestore.MergeAll)

if err != nil {
// Handle any errors in an appropriate way, such as returning them.
log.Printf("An error has occurred: %s", err)
}

return err
}
save_data_set_doc_upsert.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/save_data_set_doc_upsert.go#L18-L38]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$cityRef = $db->collection('samples/php/cities')->document('BJ');
$cityRef->set([
'capital' => true
], ['merge' => true]);data_set_doc_upsert.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/data_set_doc_upsert.php#L40-L43]

Unity
DocumentReference docRef = db.Collection("cities").Document("LA");
Dictionary<string, object> update = new Dictionary<string, object>
{
{ "capital", false }
};
docRef.SetAsync(update, SetOptions.MergeAll);

C#

DocumentReference docRef = db.Collection("cities").Document("LA");
Dictionary<string, object> update = new Dictionary<string, object>
{
{ "capital", false }
};
await docRef.SetAsync(update, SetOptions.MergeAll);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L62-L67]

Ruby

city_ref = firestore.doc "#{collection_path}/LA"
city_ref.set({ capital: false }, merge: true)add_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/add_data.rb#L43-L44]

문서가 있는지 확실하지 않은 경우 전체 문서를 실수로 덮어쓰지 않도록 새 데이터를 기존 문서와 병합하는 옵션을 전달하세요. 맵이 포함된 문서의 경우 빈 맵이 있는 필드를 사용해 집합을 지정하면 대상 문서의 맵 필드를 덮어씁니다.

데이터 유형

Cloud Firestore를 사용하면 문서 안에 문자열, 불리언, 숫자, 날짜, null, 중첩 배열, 객체를 비롯하여 다양한 데이터 유형을 쓸 수 있습니다. Cloud Firestore는 코드에서 사용하는 숫자 유형과 관계없이 숫자를 항상 배정밀도 부동 소수점으로 저장합니다.

Web
import { doc, setDoc, Timestamp } from "firebase/firestore";

const docData = {
stringExample: "Hello world!",
booleanExample: true,
numberExample: 3.14159265,
dateExample: Timestamp.fromDate(new Date("December 10, 1815")),
arrayExample: [5, true, "hello"],
nullExample: null,
objectExample: {
a: 5,
b: {
nested: "foo"
}
}
};
await setDoc(doc(db, "data", "one"), docData);data_types.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/data_types.js#L8-L24]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
var docData = {
stringExample: "Hello world!",
booleanExample: true,
numberExample: 3.14159265,
dateExample: firebase.firestore.Timestamp.fromDate(new Date("December 10, 1815")),
arrayExample: [5, true, "hello"],
nullExample: null,
objectExample: {
a: 5,
b: {
nested: "foo"
}
}
};
db.collection("data").doc("one").set(docData).then(() => {
console.log("Document successfully written!");
});test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L296-L312]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

let docData: [String: Any] = [
"stringExample": "Hello world!",
"booleanExample": true,
"numberExample": 3.14159265,
"dateExample": Timestamp(date: Date()),
"arrayExample": [5, true, "hello"],
"nullExample": NSNull(),
"objectExample": [
"a": 5,
"b": [
"nested": "foo"
]
]
]
do {
try await db.collection("data").document("one").setData(docData)
print("Document successfully written!")
} catch {
print("Error writing document: \(error)")
}ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L287-L306]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

NSDictionary *docData = @{
@"stringExample": @"Hello world!",
@"booleanExample": @YES,
@"numberExample": @3.14,
@"dateExample": [FIRTimestamp timestampWithDate:[NSDate date]],
@"arrayExample": @[@5, @YES, @"hello"],
@"nullExample": [NSNull null],
@"objectExample": @{
@"a": @5,
@"b": @{
@"nested": @"foo"
}
}
};

[[[self.db collectionWithPath:@"data"] documentWithPath:@"one"] setData:docData
completion:^(NSError * _Nullable error) {
if (error != nil) {
NSLog(@"Error writing document: %@", error);
} else {
NSLog(@"Document successfully written!");
}
}];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L215-L237]

Kotlin
val docData = hashMapOf(
"stringExample" to "Hello world!",
"booleanExample" to true,
"numberExample" to 3.14159265,
"dateExample" to Timestamp(Date()),
"listExample" to arrayListOf(1, 2, 3),
"nullExample" to null,
)

val nestedData = hashMapOf(
"a" to 5,
"b" to true,
)

docData["objectExample"] = nestedData

db.collection("data").document("one")
.set(docData)
.addOnSuccessListener { Log.d(TAG, "DocumentSnapshot successfully written!") }
.addOnFailureListener { e -> Log.w(TAG, "Error writing document", e) }DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L272-L291]

Java
Map<String, Object> docData = new HashMap<>();
docData.put("stringExample", "Hello world!");
docData.put("booleanExample", true);
docData.put("numberExample", 3.14159265);
docData.put("dateExample", new Timestamp(new Date()));
docData.put("listExample", Arrays.asList(1, 2, 3));
docData.put("nullExample", null);

Map<String, Object> nestedData = new HashMap<>();
nestedData.put("a", 5);
nestedData.put("b", true);

docData.put("objectExample", nestedData);

db.collection("data").document("one")
.set(docData)
.addOnSuccessListener(new OnSuccessListener<Void>() {
@Override
public void onSuccess(Void aVoid) {
Log.d(TAG, "DocumentSnapshot successfully written!");
}
})
.addOnFailureListener(new OnFailureListener() {
@Override
public void onFailure(@NonNull Exception e) {
Log.w(TAG, "Error writing document", e);
}
});DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L366-L393]

Dart
final docData = {
"stringExample": "Hello world!",
"booleanExample": true,
"numberExample": 3.14159265,
"dateExample": Timestamp.now(),
"listExample": [1, 2, 3],
"nullExample": null
};

final nestedData = {
"a": 5,
"b": true,
};

docData["objectExample"] = nestedData;

db
.collection("data")
.doc("one")
.set(docData)
.onError((e, _) => print("Error writing document: $e"));firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L157-L177]

자바

Map<String, Object> docData = new HashMap<>();
docData.put("stringExample", "Hello, World");
docData.put("booleanExample", false);
docData.put("numberExample", 3.14159265);
docData.put("nullExample", null);

ArrayList<Object> arrayExample = new ArrayList<>();
Collections.addAll(arrayExample, 5L, true, "hello");
docData.put("arrayExample", arrayExample);

Map<String, Object> objectExample = new HashMap<>();
objectExample.put("a", 5L);
objectExample.put("b", true);

docData.put("objectExample", objectExample);

ApiFuture<WriteResult> future = db.collection("data").document("one").set(docData);
System.out.println("Update time : " + future.get().getUpdateTime());ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L80-L97]

Python

data = {
"stringExample": "Hello, World!",
"booleanExample": True,
"numberExample": 3.14159265,
"dateExample": datetime.datetime.now(tz=datetime.timezone.utc),
"arrayExample": [5, True, "hello"],
"nullExample": None,
"objectExample": {"a": 5, "b": True},
}

db.collection("data").document("one").set(data)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L79-L89]

Python

data = {
"stringExample": "Hello, World!",
"booleanExample": True,
"numberExample": 3.14159265,
"dateExample": datetime.datetime.now(tz=datetime.timezone.utc),
"arrayExample": [5, True, "hello"],
"nullExample": None,
"objectExample": {"a": 5, "b": True},
}

await db.collection("data").document("one").set(data)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L75-L85]

C++
MapFieldValue doc_data{
{"stringExample", FieldValue::String("Hello world!")},
{"booleanExample", FieldValue::Boolean(true)},
{"numberExample", FieldValue::Double(3.14159265)},
{"dateExample", FieldValue::Timestamp(Timestamp::Now())},
{"arrayExample", FieldValue::Array({FieldValue::Integer(1),
FieldValue::Integer(2),
FieldValue::Integer(3)})},
{"nullExample", FieldValue::Null()},
{"objectExample",
FieldValue::Map(
{{"a", FieldValue::Integer(5)},
{"b", FieldValue::Map(
{{"nested", FieldValue::String("foo")}})}})},
};

db->Collection("data").Document("one").Set(doc_data).OnCompletion(
[](const Future<void>& future) {
if (future.error() == Error::kErrorOk) {
std::cout << "DocumentSnapshot successfully written!" << std::endl;
} else {
std::cout << "Error writing document: " << future.error_message()
<< std::endl;
}
});snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L193-L217]

Node.js

const data = {
stringExample: 'Hello, World!',
booleanExample: true,
numberExample: 3.14159265,
dateExample: Timestamp.fromDate(new Date('December 10, 1815')),
arrayExample: [5, true, 'hello'],
nullExample: null,
objectExample: {
a: 5,
b: true
}
};

const res = await db.collection('data').doc('one').set(data);index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L172-L185]

Go

import (
"context"
"log"
"time"

"cloud.google.com/go/firestore"
)

func addDocDataTypes(ctx context.Context, client *firestore.Client) error {
doc := make(map[string]interface{})
doc["stringExample"] = "Hello world!"
doc["booleanExample"] = true
doc["numberExample"] = 3.14159265
doc["dateExample"] = time.Now()
doc["arrayExample"] = []interface{}{5, true, "hello"}
doc["nullExample"] = nil
doc["objectExample"] = map[string]interface{}{
"a": 5,
"b": true,
}

_, err := client.Collection("data").Doc("one").Set(ctx, doc)
if err != nil {
// Handle any errors in an appropriate way, such as returning them.
log.Printf("An error has occurred: %s", err)
}

return err
}
save_data_set_from_map_nested.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/save_data_set_from_map_nested.go#L18-L48]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$data = [
'stringExample' => 'Hello World',
'booleanExample' => true,
'numberExample' => 3.14159265,
'dateExample' => new Timestamp(new DateTime()),
'arrayExample' => array(5, true, 'hello'),
'nullExample' => null,
'objectExample' => ['a' => 5, 'b' => true],
'documentReferenceExample' => $db->collection('samples/php/data')->document('two'),
];
$db->collection('samples/php/data')->document('one')->set($data);
printf('Set multiple data-type data for the one document in the data collection.' . PHP_EOL);data_set_from_map_nested.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/data_set_from_map_nested.php#L44-L55]

Unity
DocumentReference docRef = db.Collection("data").Document("one");
Dictionary<string, object> docData = new Dictionary<string, object>
{
{ "stringExample", "Hello World" },
{ "booleanExample", false },
{ "numberExample", 3.14159265 },
{ "nullExample", null },
{ "arrayExample", new List<object>() { 5, true, "Hello" } },
{ "objectExample", new Dictionary<string, object>
{
{ "a", 5 },
{ "b", true },
}
},
};

docRef.SetAsync(docData);

C#

DocumentReference docRef = db.Collection("data").Document("one");
Dictionary<string, object> docData = new Dictionary<string, object>
{
{ "stringExample", "Hello World" },
{ "booleanExample", false },
{ "numberExample", 3.14159265 },
{ "nullExample", null },
{ "arrayExample", new object[] { 5, true, "Hello" } },
{ "objectExample", new Dictionary<string, object>
{
{ "a", 5 },
{ "b", true},
}
}
};

await docRef.SetAsync(docData);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L76-L92]

Ruby

doc_ref = firestore.doc "#{collection_path}/one"

data = {
stringExample:  "Hello, World!",
booleanExample: true,
numberExample:  3.14159265,
dateExample:    DateTime.now,
arrayExample:   [5, true, "hello"],
nullExample:    nil,
objectExample:  {
a: 5,
b: true
}
}

doc_ref.set dataadd_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/add_data.rb#L55-L70]

커스텀 객체

Map 또는 Dictionary 객체를 사용하여 문서를 표현하기가 불편한 경우가 많으므로 Cloud Firestore는 커스텀 클래스를 사용하여 문서를 작성하는 방식도 지원합니다. Cloud Firestore에서 객체를 지원되는 데이터 유형으로 변환합니다.

커스텀 클래스를 사용하면 앞의 예시를 다음과 같이 다시 작성할 수 있습니다.

Web
class City {
constructor (name, state, country ) {
this.name = name;
this.state = state;
this.country = country;
}
toString() {
return this.name + ', ' + this.state + ', ' + this.country;
}
}

// Firestore data converter
const cityConverter = {
toFirestore: (city) => {
return {
name: city.name,
state: city.state,
country: city.country
};
},
fromFirestore: (snapshot, options) => {
const data = snapshot.data(options);
return new City(data.name, data.state, data.country);
}
};city_custom_object.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/city_custom_object.js#L8-L32]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
class City {
constructor (name, state, country ) {
this.name = name;
this.state = state;
this.country = country;
}
toString() {
return this.name + ', ' + this.state + ', ' + this.country;
}
}

// Firestore data converter
var cityConverter = {
toFirestore: function(city) {
return {
name: city.name,
state: city.state,
country: city.country
};
},
fromFirestore: function(snapshot, options){
const data = snapshot.data(options);
return new City(data.name, data.state, data.country);
}
};test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L7-L31]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

public struct City: Codable {

let name: String
let state: String?
let country: String?
let isCapital: Bool?
let population: Int64?

enum CodingKeys: String, CodingKey {
case name
case state
case country
case isCapital = "capital"
case population
}

}ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L1449-L1465]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

// This isn't supported in Objective-C.

Kotlin
data class City(
val name: String? = null,
val state: String? = null,
val country: String? = null,
@field:JvmField // use this annotation if your Boolean field is prefixed with 'is'
val isCapital: Boolean? = null,
val population: Long? = null,
val regions: List<String>? = null,
)DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L238-L246]

Java

각 커스텀 클래스에는 인수를 취하지 않는 public 생성자가 있어야 합니다. 또한 각 속성의 public getter가 클래스에 포함되어야 합니다.

public class City {

private String name;
private String state;
private String country;
private boolean capital;
private long population;
private List<String> regions;

public City() {}

public City(String name, String state, String country, boolean capital, long population, List<String> regions) {
// ...
}

public String getName() {
return name;
}

public String getState() {
return state;
}

public String getCountry() {
return country;
}

public boolean isCapital() {
return capital;
}

public long getPopulation() {
return population;
}

public List<String> getRegions() {
return regions;
}

}DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L284-L331]

Dart
class City {
final String? name;
final String? state;
final String? country;
final bool? capital;
final int? population;
final List<String>? regions;

City({
this.name,
this.state,
this.country,
this.capital,
this.population,
this.regions,
});

factory City.fromFirestore(
DocumentSnapshot<Map<String, dynamic>> snapshot,
SnapshotOptions? options,
) {
final data = snapshot.data();
return City(
name: data?['name'],
state: data?['state'],
country: data?['country'],
capital: data?['capital'],
population: data?['population'],
regions:
data?['regions'] is Iterable ? List.from(data?['regions']) : null,
);
}

Map<String, dynamic> toFirestore() {
return {
if (name != null) "name": name,
if (state != null) "state": state,
if (country != null) "country": country,
if (capital != null) "capital": capital,
if (population != null) "population": population,
if (regions != null) "regions": regions,
};
}
}firestore_add_data_custom_objects_snippet.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/model/firestore_add_data_custom_objects_snippet.dart#L18-L61]

자바

public City() {
// Must have a public no-argument constructor
}

// Initialize all fields of a city
public City(
String name,
String state,
String country,
Boolean capital,
Long population,
List<String> regions) {
this.name = name;
this.state = state;
this.country = country;
this.capital = capital;
this.population = population;
this.regions = regions;
}
City.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/model/City.java#L33-L52]

Python

class City:
def __init__(self, name, state, country, capital=False, population=0, regions=[]):
self.name = name
self.state = state
self.country = country
self.capital = capital
self.population = population
self.regions = regions

@staticmethod
def from_dict(source):
# ...

def to_dict(self):
# ...

def __repr__(self):
return f"City(\
name={self.name}, \
country={self.country}, \
population={self.population}, \
capital={self.capital}, \
regions={self.regions}\
)"

snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L94-L145]

Python

class City:
def __init__(self, name, state, country, capital=False, population=0, regions=[]):
self.name = name
self.state = state
self.country = country
self.capital = capital
self.population = population
self.regions = regions

@staticmethod
def from_dict(source):
# ...

def to_dict(self):
# ...

def __repr__(self):
return f"City(\
name={self.name}, \
country={self.country}, \
population={self.population}, \
capital={self.capital}, \
regions={self.regions}\
)"

snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L90-L141]

C++
// This is not yet supported.

Node.js
// Node.js uses JavaScript objects

Go

// City represents a city.
type City struct {
Name       string   `firestore:"name,omitempty"`
State      string   `firestore:"state,omitempty"`
Country    string   `firestore:"country,omitempty"`
Capital    bool     `firestore:"capital,omitempty"`
Population int64    `firestore:"population,omitempty"`
Density    int64    `firestore:"density,omitempty"`
Regions    []string `firestore:"regions,omitempty"`
}
custom_type_definition.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/custom_type_definition.go#L18-L29]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

class City
{
/** @var string */
public $name;
/** @var string */
public $state;
/** @var string */
public $country;
/** @var bool */
public $capital;
/** @var int */
public $population;
/** @var array<string> */
public $regions;

/**
* @param array<string> $regions
*/
public function __construct(
string $name,
string $state,
string $country,
bool $capital = false,
int $population = 0,
array $regions = []
) {
$this->name = $name;
$this->state = $state;
$this->country = $country;
$this->capital = $capital;
$this->population = $population;
$this->regions = $regions;
}

/**
* @param array<mixed> $source
*/
public static function fromArray(array $source): City
{
// implementation of fromArray is excluded for brevity
# ...
}

/**
* @return array<mixed>
*/
public function toArray(): array
{
// implementation of toArray is excluded for brevity
# ...
}

public function __toString()
{
// implementation of __toString is excluded for brevity
# ...
}
}
City.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/City.php#L27-L126]

Unity
[FirestoreData]
public class City
{
[FirestoreProperty]
public string Name { get; set; }

[FirestoreProperty]
public string State { get; set; }

[FirestoreProperty]
public string Country { get; set; }

[FirestoreProperty]
public bool Capital { get; set; }

[FirestoreProperty]
public long Population { get; set; }
}

C#

[FirestoreData]
public class City
{
[FirestoreProperty]
public string Name { get; set; }

[FirestoreProperty]
public string State { get; set; }

[FirestoreProperty]
public string Country { get; set; }

[FirestoreProperty]
public bool Capital { get; set; }

[FirestoreProperty]
public long Population { get; set; }
}Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L98-L115]

Ruby
// This isn't supported in Ruby

Web
import { doc, setDoc } from "firebase/firestore";

// Set with cityConverter
const ref = doc(db, "cities", "LA").withConverter(cityConverter);
await setDoc(ref, new City("Los Angeles", "CA", "USA"));set_custom_object.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/set_custom_object.js#L8-L12]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
// Set with cityConverter
db.collection("cities").doc("LA")
.withConverter(cityConverter)
.set(new City("Los Angeles", "CA", "USA"));test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L240-L243]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

let city = City(name: "Los Angeles",
state: "CA",
country: "USA",
isCapital: false,
population: 5000000)

do {
try db.collection("cities").document("LA").setData(from: city)
} catch let error {
print("Error writing city to Firestore: \(error)")
}ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L271-L281]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

// This isn't supported in Objective-C.

Kotlin
val city = City(
"Los Angeles",
"CA",
"USA",
false,
5000000L,
listOf("west_coast", "socal"),
)
db.collection("cities").document("LA").set(city)DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L297-L305]

Java
City city = new City("Los Angeles", "CA", "USA",
false, 5000000L, Arrays.asList("west_coast", "sorcal"));
db.collection("cities").document("LA").set(city);DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L399-L401]

Dart
final city = City(
name: "Los Angeles",
state: "CA",
country: "USA",
capital: false,
population: 5000000,
regions: ["west_coast", "socal"],
);
final docRef = db
.collection("cities")
.withConverter(
fromFirestore: City.fromFirestore,
toFirestore: (City city, options) => city.toFirestore(),
)
.doc("LA");
await docRef.set(city);firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L183-L198]

자바

City city =
new City("Los Angeles", "CA", "USA", false, 3900000L, Arrays.asList("west_coast", "socal"));
ApiFuture<WriteResult> future = db.collection("cities").document("LA").set(city);
// block on response if required
System.out.println("Update time : " + future.get().getUpdateTime());ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L110-L114]

Python

city = City(name="Los Angeles", state="CA", country="USA")
db.collection("cities").document("LA").set(city.to_dict())snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L178-L179]

Python

city = City(name="Los Angeles", state="CA", country="USA")
await db.collection("cities").document("LA").set(city.to_dict())snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L174-L175]

C++
// This is not yet supported.

Node.js
// Node.js uses JavaScript objects

Go

import (
"context"
"log"

"cloud.google.com/go/firestore"
)

func addDocAsEntity(ctx context.Context, client *firestore.Client) error {
city := City{
Name:    "Los Angeles",
Country: "USA",
}
_, err := client.Collection("cities").Doc("LA").Set(ctx, city)
if err != nil {
// Handle any errors in an appropriate way, such as returning them.
log.Printf("An error has occurred: %s", err)
}

return err
}
save_data_set_from_custom_type.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/save_data_set_from_custom_type.go#L18-L39]

PHP
// This isn't supported in PHP.

Unity
DocumentReference docRef = db.Collection("cities").Document("LA");
City city = new City
{
Name = "Los Angeles",
State = "CA",
Country = "USA",
Capital = false,
Population = 3900000L
};
docRef.SetAsync(city);

C#

DocumentReference docRef = db.Collection("cities").Document("LA");
City city = new City
{
Name = "Los Angeles",
State = "CA",
Country = "USA",
Capital = false,
Population = 3900000L
};
await docRef.SetAsync(city);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L122-L131]

Ruby
// This isn't supported in Ruby.

문서 추가

set()을 사용하여 문서를 만들 때는 다음 예시와 같이 만들 문서의 ID를 지정해야 합니다.

Web
import { doc, setDoc } from "firebase/firestore";

await setDoc(doc(db, "cities", "new-city-id"), data);cities_document_set.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/cities_document_set.js#L8-L10]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
db.collection("cities").doc("new-city-id").set(data);test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L430-L430]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

db.collection("cities").document("new-city-id").setData(data)ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L314-L314]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

[[[self.db collectionWithPath:@"cities"] documentWithPath:@"new-city-id"]
setData:data];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L244-L245]

Kotlin
db.collection("cities").document("new-city-id").set(data)DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L266-L266]

Java
db.collection("cities").document("new-city-id").set(data);DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L360-L360]

Dart
db.collection("cities").doc("new-city-id").set({"name": "Chicago"});firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L204-L204]

자바

db.collection("cities").document("new-city-id").set(data);ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L123-L123]

Python

db.collection("cities").document("new-city-id").set(data)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L187-L187]

Python

await db.collection("cities").document("new-city-id").set(data)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L183-L183]

C++
db->Collection("cities").Document("SF").Set({/*some data*/});snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L228-L228]

Node.js

await db.collection('cities').doc('new-city-id').set(data);index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L209-L209]

Go

import (
"context"
"log"

"cloud.google.com/go/firestore"
)

func addDocWithID(ctx context.Context, client *firestore.Client) error {
var data = make(map[string]interface{})

_, err := client.Collection("cities").Doc("new-city-id").Set(ctx, data)
if err != nil {
// Handle any errors in an appropriate way, such as returning them.
log.Printf("An error has occurred: %s", err)
}

return err
}
save_data_set_id_specified.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/save_data_set_id_specified.go#L18-L37]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$db->collection('samples/php/cities')->document('new-city-id')->set($data);data_set_id_specified.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/data_set_id_specified.php#L44-L44]

Unity
db.Collection("cities").Document("new-city-id").SetAsync(city);

C#

await db.Collection("cities").Document("new-city-id").SetAsync(city);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L145-L145]

Ruby

city_ref = firestore.doc "#{collection_path}/new-city-id"
city_ref.set dataadd_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/add_data.rb#L86-L87]

문서에 유의미한 ID가 없는 경우 Cloud Firestore에서 ID를 자동으로 생성할 수 있습니다. 다음과 같은 언어별 add() 메서드를 호출할 수 있습니다.

Web
addDoc() 메서드를 사용합니다.
import { collection, addDoc } from "firebase/firestore";

// Add a new document with a generated id.
const docRef = await addDoc(collection(db, "cities"), {
name: "Tokyo",
country: "Japan"
});
console.log("Document written with ID: ", docRef.id);add_document.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/add_document.js#L8-L15]

Web
add() 메서드를 사용합니다.
// Add a new document with a generated id.
db.collection("cities").add({
name: "Tokyo",
country: "Japan"
})
.then((docRef) => {
console.log("Document written with ID: ", docRef.id);
})
.catch((error) => {
console.error("Error adding document: ", error);
});test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L438-L448]

Swift
addDocument() 메서드를 사용합니다.

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

// Add a new document with a generated id.
do {
let ref = try await db.collection("cities").addDocument(data: [
"name": "Tokyo",
"country": "Japan"
])
print("Document added with ID: \(ref.documentID)")
} catch {
print("Error adding document: \(error)")
}ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L320-L329]

Objective-C
addDocumentWithData: 메서드를 사용합니다.

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

// Add a new document with a generated id.
__block FIRDocumentReference *ref =
[[self.db collectionWithPath:@"cities"] addDocumentWithData:@{
@"name": @"Tokyo",
@"country": @"Japan"
} completion:^(NSError * _Nullable error) {
if (error != nil) {
NSLog(@"Error adding document: %@", error);
} else {
NSLog(@"Document added with ID: %@", ref.documentID);
}
}];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L251-L262]

Kotlin
add() 메서드를 사용합니다.
// Add a new document with a generated id.
val data = hashMapOf(
"name" to "Tokyo",
"country" to "Japan",
)

db.collection("cities")
.add(data)
.addOnSuccessListener { documentReference ->
Log.d(TAG, "DocumentSnapshot written with ID: ${documentReference.id}")
}
.addOnFailureListener { e ->
Log.w(TAG, "Error adding document", e)
}DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L311-L324]

Java
add() 메서드를 사용합니다.
// Add a new document with a generated id.
Map<String, Object> data = new HashMap<>();
data.put("name", "Tokyo");
data.put("country", "Japan");

db.collection("cities")
.add(data)
.addOnSuccessListener(new OnSuccessListener<DocumentReference>() {
@Override
public void onSuccess(DocumentReference documentReference) {
Log.d(TAG, "DocumentSnapshot written with ID: " + documentReference.getId());
}
})
.addOnFailureListener(new OnFailureListener() {
@Override
public void onFailure(@NonNull Exception e) {
Log.w(TAG, "Error adding document", e);
}
});DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L407-L425]

Dart
add() 메서드를 사용합니다.
// Add a new document with a generated id.
final data = {"name": "Tokyo", "country": "Japan"};

db.collection("cities").add(data).then((documentSnapshot) =>
print("Added Data with ID: ${documentSnapshot.id}"));firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L210-L214]

자바
add() 메서드를 사용합니다.

// Add document data with auto-generated id.
Map<String, Object> data = new HashMap<>();
data.put("name", "Tokyo");
data.put("country", "Japan");
ApiFuture<DocumentReference> addedDocRef = db.collection("cities").add(data);
System.out.println("Added document with ID: " + addedDocRef.get().getId());ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L135-L140]

Python
add() 메서드를 사용합니다.

city = {"name": "Tokyo", "country": "Japan"}
update_time, city_ref = db.collection("cities").add(city)
print(f"Added document with id {city_ref.id}")snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L194-L196]

Python
add() 메서드를 사용합니다.

city = City(name="Tokyo", state=None, country="Japan")
await db.collection("cities").add(city.to_dict())snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L190-L191]

C++
Add() 메서드를 사용합니다.
db->Collection("cities").Add({/*some data*/});snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L235-L235]

Node.js
add() 메서드를 사용합니다.

// Add a new document with a generated id.
const res = await db.collection('cities').add({
name: 'Tokyo',
country: 'Japan'
});

console.log('Added document with ID: ', res.id);index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L193-L199]

Go
Add() 메서드를 사용합니다.

import (
"context"
"log"

"cloud.google.com/go/firestore"
)

func addDocWithoutID(ctx context.Context, client *firestore.Client) error {
_, _, err := client.Collection("cities").Add(ctx, map[string]interface{}{
"name":    "Tokyo",
"country": "Japan",
})
if err != nil {
// Handle any errors in an appropriate way, such as returning them.
log.Printf("An error has occurred: %s", err)
}

return err
}
save_data_set_id_random_collection.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/save_data_set_id_random_collection.go#L18-L38]

PHP
add() 메서드를 사용합니다.

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$data = [
'name' => 'Tokyo',
'country' => 'Japan'
];
$addedDocRef = $db->collection('samples/php/cities')->add($data);
printf('Added document with ID: %s' . PHP_EOL, $addedDocRef->id());data_set_id_random_collection.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/data_set_id_random_collection.php#L40-L45]

Unity
AddAsync() 메서드를 사용합니다.
Dictionary<string, object> city = new Dictionary<string, object>
{
{ "Name", "Tokyo" },
{ "Country", "Japan" }
};
db.Collection("cities").AddAsync(city).ContinueWithOnMainThread(task => {
DocumentReference addedDocRef = task.Result;
Debug.Log(String.Format("Added document with ID: {0}.", addedDocRef.Id));
});

C#
AddAsync() 메서드를 사용합니다.

Dictionary<string, object> city = new Dictionary<string, object>
{
{ "Name", "Tokyo" },
{ "Country", "Japan" }
};
DocumentReference addedDocRef = await db.Collection("cities").AddAsync(city);
Console.WriteLine("Added document with ID: {0}.", addedDocRef.Id);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L154-L160]

Ruby
add() 메서드를 사용합니다.

data = {
name:    "Tokyo",
country: "Japan"
}

cities_ref = firestore.col collection_path

added_doc_ref = cities_ref.add data
puts "Added document with ID: #{added_doc_ref.document_id}."add_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/add_data.rb#L98-L106]

중요: Firebase 실시간 데이터베이스의 '푸시 ID'와 달리, Cloud Firestore에서 자동으로 생성한 ID에서는 자동 정렬을 지원하지 않습니다.
생성일에 따라 문서를 정렬하려면 타임스탬프를 문서의 필드로 저장해야 합니다.
경우에 따라서는 자동 생성 ID를 사용하여 문서 참조를 만든 후 참조를 사용하는 방법이 유용할 수 있습니다. 이 사용 사례의 경우 doc()를 호출하면 됩니다.

Web
import { collection, doc, setDoc } from "firebase/firestore";

// Add a new document with a generated id
const newCityRef = doc(collection(db, "cities"));

// later...
await setDoc(newCityRef, data);new_document.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/new_document.js#L8-L14]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
// Add a new document with a generated id.
var newCityRef = db.collection("cities").doc();

// later...
newCityRef.set(data);test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L456-L460]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

let newCityRef = db.collection("cities").document()

// later...
newCityRef.setData([
// ...
])ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L335-L342]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

FIRDocumentReference *newCityRef = [[self.db collectionWithPath:@"cities"] documentWithAutoID];
// later...
[newCityRef setData:@{ /* ... */ }];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L268-L270]

Kotlin
val data = HashMap<String, Any>()

val newCityRef = db.collection("cities").document()

// Later...
newCityRef.set(data)DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L330-L335]

Java
Map<String, Object> data = new HashMap<>();

DocumentReference newCityRef = db.collection("cities").document();

// Later...
newCityRef.set(data);DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L431-L436]

Dart
// Add a new document with a generated id.
final data = <String, dynamic>{};

final newCityRef = db.collection("cities").doc();

// Later...
newCityRef.set(data);
firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L220-L227]

자바

// Add document data after generating an id.
DocumentReference addedDocRef = db.collection("cities").document();
System.out.println("Added document with ID: " + addedDocRef.getId());

// later...
ApiFuture<WriteResult> writeResult = addedDocRef.set(data);ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L155-L160]

Python

new_city_ref = db.collection("cities").document()

# later...
new_city_ref.set(
{
# ...
}
)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L203-L210]

Python

new_city_ref = db.collection("cities").document()

# later...
await new_city_ref.set(
{
# ...
}
)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L198-L205]

C++
DocumentReference new_city_ref = db->Collection("cities").Document();snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L243-L243]

Node.js

const newCityRef = db.collection('cities').doc();

// Later...
const res = await newCityRef.set({
// ...
});index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L215-L220]

Go

import (
"context"
"log"

"cloud.google.com/go/firestore"
)

func addDocAfterAutoGeneratedID(ctx context.Context, client *firestore.Client) error {
data := City{
Name:    "Sydney",
Country: "Australia",
}

ref := client.Collection("cities").NewDoc()

// later...
_, err := ref.Set(ctx, data)
if err != nil {
// Handle any errors in an appropriate way, such as returning them.
log.Printf("An error has occurred: %s", err)
}

return err
}
save_data_set_id_random_document_ref.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/save_data_set_id_random_document_ref.go#L18-L43]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$addedDocRef = $db->collection('samples/php/cities')->newDocument();
printf('Added document with ID: %s' . PHP_EOL, $addedDocRef->id());
$addedDocRef->set($data);data_set_id_random_document_ref.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/data_set_id_random_document_ref.php#L44-L46]

Unity
DocumentReference addedDocRef = db.Collection("cities").Document();
Debug.Log(String.Format("Added document with ID: {0}.", addedDocRef.Id));
addedDocRef.SetAsync(city).ContinueWithOnMainThread(task => {
Debug.Log(String.Format(
"Added data to the {0} document in the cities collection.", addedDocRef.Id));
});

C#

DocumentReference addedDocRef = db.Collection("cities").Document();
Console.WriteLine("Added document with ID: {0}.", addedDocRef.Id);
await addedDocRef.SetAsync(city);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L173-L175]

Ruby

cities_ref = firestore.col collection_path

added_doc_ref = cities_ref.doc
puts "Added document with ID: #{added_doc_ref.document_id}."

added_doc_ref.set dataadd_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/add_data.rb#L121-L126]

백엔드에서 .add(...)와 .doc().set(...)는 동일하므로 두 가지 옵션 중 하나를 선택하면 됩니다.

문서 업데이트

전체 문서를 덮어쓰지 않고 문서의 일부 필드를 업데이트하려면 다음과 같은 언어별 update() 메서드를 사용합니다.

Web
updateDoc() 메서드를 사용합니다.
import { doc, updateDoc } from "firebase/firestore";

const washingtonRef = doc(db, "cities", "DC");

// Set the "capital" field of the city 'DC'
await updateDoc(washingtonRef, {
capital: true
});update_document.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/update_document.js#L8-L15]

Web
update() 메서드를 사용합니다.
var washingtonRef = db.collection("cities").doc("DC");

// Set the "capital" field of the city 'DC'
return washingtonRef.update({
capital: true
})
.then(() => {
console.log("Document successfully updated!");
})
.catch((error) => {
// The document probably doesn't exist.
console.error("Error updating document: ", error);
});test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L467-L479]

Swift
updateData() 메서드를 사용합니다.

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

let washingtonRef = db.collection("cities").document("DC")

// Set the "capital" field of the city 'DC'
do {
try await washingtonRef.updateData([
"capital": true
])
print("Document successfully updated")
} catch {
print("Error updating document: \(error)")
}ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L348-L358]

Objective-C
updateData: 메서드를 사용합니다.

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

FIRDocumentReference *washingtonRef =
[[self.db collectionWithPath:@"cities"] documentWithPath:@"DC"];
// Set the "capital" field of the city
[washingtonRef updateData:@{
@"capital": @YES
} completion:^(NSError * _Nullable error) {
if (error != nil) {
NSLog(@"Error updating document: %@", error);
} else {
NSLog(@"Document successfully updated");
}
}];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L276-L287]

Kotlin
update() 메서드를 사용합니다.
val washingtonRef = db.collection("cities").document("DC")

// Set the "isCapital" field of the city 'DC'
washingtonRef
.update("capital", true)
.addOnSuccessListener { Log.d(TAG, "DocumentSnapshot successfully updated!") }
.addOnFailureListener { e -> Log.w(TAG, "Error updating document", e) }DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L341-L347]

Java
update() 메서드를 사용합니다.
DocumentReference washingtonRef = db.collection("cities").document("DC");

// Set the "isCapital" field of the city 'DC'
washingtonRef
.update("capital", true)
.addOnSuccessListener(new OnSuccessListener<Void>() {
@Override
public void onSuccess(Void aVoid) {
Log.d(TAG, "DocumentSnapshot successfully updated!");
}
})
.addOnFailureListener(new OnFailureListener() {
@Override
public void onFailure(@NonNull Exception e) {
Log.w(TAG, "Error updating document", e);
}
});DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L442-L458]

Dart
update() 메서드를 사용합니다.
final washingtonRef = db.collection("cites").doc("DC");
washingtonRef.update({"capital": true}).then(
(value) => print("DocumentSnapshot successfully updated!"),
onError: (e) => print("Error updating document $e"));firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L233-L236]

자바
update() 메서드를 사용합니다.

// Update an existing document
DocumentReference docRef = db.collection("cities").document("DC");

// (async) Update one field
ApiFuture<WriteResult> future = docRef.update("capital", true);

// ...
WriteResult result = future.get();
System.out.println("Write result: " + result);ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L172-L180]

Python
update() 메서드를 사용합니다.

city_ref = db.collection("cities").document("DC")

# Set the capital field
city_ref.update({"capital": True})snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L318-L321]

Python
update() 메서드를 사용합니다.

city_ref = db.collection("cities").document("DC")

# Set the capital field
await city_ref.update({"capital": True})snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L312-L315]

C++
Update() 메서드를 사용합니다.
DocumentReference washington_ref = db->Collection("cities").Document("DC");
// Set the "capital" field of the city "DC".
washington_ref.Update({{"capital", FieldValue::Boolean(true)}});snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L258-L260]

Node.js
update() 메서드를 사용합니다.

const cityRef = db.collection('cities').doc('DC');

// Set the 'capital' field of the city
const res = await cityRef.update({capital: true});index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L227-L230]

Go
Update() 메서드를 사용합니다.

import (
"context"
"log"

"cloud.google.com/go/firestore"
)

func updateDoc(ctx context.Context, client *firestore.Client) error {
// ...

_, err := client.Collection("cities").Doc("DC").Update(ctx, []firestore.Update{
{
Path:  "capital",
Value: true,
},
})
if err != nil {
// Handle any errors in an appropriate way, such as returning them.
log.Printf("An error has occurred: %s", err)
}

return err
}
save_data_set_field.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/save_data_set_field.go#L18-L51]

PHP
update() 메서드를 사용합니다.

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$cityRef = $db->collection('samples/php/cities')->document('DC');
$cityRef->update([
['path' => 'capital', 'value' => true]
]);data_set_field.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/data_set_field.php#L40-L43]

Unity
UpdateAsync() 메서드를 사용합니다.
DocumentReference cityRef = db.Collection("cities").Document("new-city-id");
Dictionary<string, object> updates = new Dictionary<string, object>
{
{ "Capital", false }
};

cityRef.UpdateAsync(updates).ContinueWithOnMainThread(task => {
Debug.Log(
"Updated the Capital field of the new-city-id document in the cities collection.");
});
// You can also update a single field with: cityRef.UpdateAsync("Capital", false);

C#
UpdateAsync() 메서드를 사용합니다.

DocumentReference cityRef = db.Collection("cities").Document("new-city-id");
Dictionary<string, object> updates = new Dictionary<string, object>
{
{ "Capital", false }
};
await cityRef.UpdateAsync(updates);

// You can also update a single field with: await cityRef.UpdateAsync("Capital", false);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L184-L191]

Ruby
update() 메서드를 사용합니다.

city_ref = firestore.doc "#{collection_path}/DC"
city_ref.update({ capital: true })add_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/add_data.rb#L145-L146]

서버 타임스탬프

문서의 필드를 서버 업데이트 수신 시점을 추적하는 서버 타임스탬프로 설정할 수 있습니다.

Web
import { updateDoc, serverTimestamp } from "firebase/firestore";

const docRef = doc(db, 'objects', 'some-id');

// Update the timestamp field with the value from the server
const updateTimestamp = await updateDoc(docRef, {
timestamp: serverTimestamp()
});update_with_server_timestamp.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/update_with_server_timestamp.js#L8-L15]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
var docRef = db.collection('objects').doc('some-id');

// Update the timestamp field with the value from the server
var updateTimestamp = docRef.update({
timestamp: firebase.firestore.FieldValue.serverTimestamp()
});test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L773-L778]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

do {
try await db.collection("objects").document("some-id").updateData([
"lastUpdated": FieldValue.serverTimestamp(),
])
print("Document successfully updated")
} catch {
print("Error updating document: \(error)")
}ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L481-L488]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

[[[self.db collectionWithPath:@"objects"] documentWithPath:@"some-id"] updateData:@{
@"lastUpdated": [FIRFieldValue fieldValueForServerTimestamp]
} completion:^(NSError * _Nullable error) {
if (error != nil) {
NSLog(@"Error updating document: %@", error);
} else {
NSLog(@"Document successfully updated");
}
}];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L428-L436]

Kotlin
// If you're using custom Kotlin objects in Android, add an @ServerTimestamp
// annotation to a Date field for your custom object classes. This indicates
// that the Date field should be treated as a server timestamp by the object mapper.
val docRef = db.collection("objects").document("some-id")

// Update the timestamp field with the value from the server
val updates = hashMapOf<String, Any>(
"timestamp" to FieldValue.serverTimestamp(),
)

docRef.update(updates).addOnCompleteListener { }DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L1089-L1096]

Java
// If you're using custom Java objects in Android, add an @ServerTimestamp
// annotation to a Date field for your custom object classes. This indicates
// that the Date field should be treated as a server timestamp by the object mapper.
DocumentReference docRef = db.collection("objects").document("some-id");

// Update the timestamp field with the value from the server
Map<String,Object> updates = new HashMap<>();
updates.put("timestamp", FieldValue.serverTimestamp());

docRef.update(updates).addOnCompleteListener(new OnCompleteListener<Void>() {
// ...
// ...DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L1303-L1314]

Dart
final docRef = db.collection("objects").doc("some-id");
final updates = <String, dynamic>{
"timestamp": FieldValue.serverTimestamp(),
};

docRef.update(updates).then(
(value) => print("DocumentSnapshot successfully updated!"),
onError: (e) => print("Error updating document $e"));firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L242-L249]

자바

DocumentReference docRef = db.collection("objects").document("some-id");
// Update the timestamp field with the value from the server
ApiFuture<WriteResult> writeResult = docRef.update("timestamp", FieldValue.serverTimestamp());
System.out.println("Update time : " + writeResult.get());ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L255-L258]

Python

city_ref = db.collection("objects").document("some-id")
city_ref.update({"timestamp": firestore.SERVER_TIMESTAMP})snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L387-L388]

Python

city_ref = db.collection("objects").document("some-id")
await city_ref.update({"timestamp": firestore.SERVER_TIMESTAMP})snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L381-L382]

C++
DocumentReference doc_ref = db->Collection("objects").Document("some-id");
doc_ref.Update({{"timestamp", FieldValue::ServerTimestamp()}})
.OnCompletion([](const Future<void>& future) {
// ...
});snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L266-L270]

Node.js

// Create a document reference
const docRef = db.collection('objects').doc('some-id');

// Update the timestamp field with the value from the server
const res = await docRef.update({
timestamp: FieldValue.serverTimestamp()
});index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L309-L315]

Go

import (
"context"
"log"

"cloud.google.com/go/firestore"
)

func updateDocServerTimestamp(ctx context.Context, client *firestore.Client) error {
// ...

_, err := client.Collection("objects").Doc("some-id").Set(ctx, map[string]interface{}{
"timestamp": firestore.ServerTimestamp,
}, firestore.MergeAll)
if err != nil {
// Handle any errors in an appropriate way, such as returning them.
log.Printf("An error has occurred: %s", err)
}

return err
}
save_data_set_server_timestamp.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/save_data_set_server_timestamp.go#L18-L47]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$docRef = $db->collection('samples/php/objects')->document('some-id');
$docRef->update([
['path' => 'timestamp', 'value' => FieldValue::serverTimestamp()]
]);data_set_server_timestamp.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/data_set_server_timestamp.php#L45-L48]

Unity
DocumentReference cityRef = db.Collection("cities").Document("new-city-id");
cityRef.UpdateAsync("Timestamp", FieldValue.ServerTimestamp)
.ContinueWithOnMainThread(task => {
Debug.Log(
"Updated the Timestamp field of the new-city-id document in the cities "
+ "collection.");
});

C#

DocumentReference cityRef = db.Collection("cities").Document("new-city-id");
await cityRef.UpdateAsync("Timestamp", Timestamp.GetCurrentTimestamp());Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L233-L234]

Ruby

city_ref = firestore.doc "#{collection_path}/new-city-id"
city_ref.update({ timestamp: firestore.field_server_time })add_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/add_data.rb#L218-L219]

트랜잭션 [https://firebase.google.com/docs/firestore/manage-data/transactions?hl=ko] 안의 여러 타임스탬프 필드를 업데이트할 때 각 필드는 동일한 서버 타임스탬프 값을 수신합니다.

중첩된 객체의 필드 업데이트

문서에 중첩된 객체가 있으면 update()를 호출할 때 점 표기법을 사용하여 문서 내 중첩 필드를 참조할 수 있습니다.

Web
import { doc, setDoc, updateDoc } from "firebase/firestore";

// Create an initial document to update.
const frankDocRef = doc(db, "users", "frank");
await setDoc(frankDocRef, {
name: "Frank",
favorites: { food: "Pizza", color: "Blue", subject: "recess" },
age: 12
});

// To update age and favorite color:
await updateDoc(frankDocRef, {
"age": 13,
"favorites.color": "Red"
});update_document_nested.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/update_document_nested.js#L8-L22]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
// Create an initial document to update.
var frankDocRef = db.collection("users").doc("frank");
frankDocRef.set({
name: "Frank",
favorites: { food: "Pizza", color: "Blue", subject: "recess" },
age: 12
});

// To update age and favorite color:
db.collection("users").doc("frank").update({
"age": 13,
"favorites.color": "Red"
})
.then(() => {
console.log("Document successfully updated!");
});test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L329-L344]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

// Create an initial document to update.
let frankDocRef = db.collection("users").document("frank")
do {
try await frankDocRef.setData([
"name": "Frank",
"favorites": [ "food": "Pizza", "color": "Blue", "subject": "recess" ],
"age": 12
])

// To update age and favorite color:
try await frankDocRef.updateData([
"age": 13,
"favorites.color": "Red"
])
print("Document successfully updated")
} catch {
print("Error updating document: \(error)")
}ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L399-L416]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

// Create an initial document to update.
FIRDocumentReference *frankDocRef =
[[self.db collectionWithPath:@"users"] documentWithPath:@"frank"];
[frankDocRef setData:@{
@"name": @"Frank",
@"favorites": @{
@"food": @"Pizza",
@"color": @"Blue",
@"subject": @"recess"
},
@"age": @12
}];
// To update age and favorite color:
[frankDocRef updateData:@{
@"age": @13,
@"favorites.color": @"Red",
} completion:^(NSError * _Nullable error) {
if (error != nil) {
NSLog(@"Error updating document: %@", error);
} else {
NSLog(@"Document successfully updated");
}
}];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L336-L358]

Kotlin
// Assume the document contains:
// {
//   name: "Frank",
//   favorites: { food: "Pizza", color: "Blue", subject: "recess" }
//   age: 12
// }
//
// To update age and favorite color:
db.collection("users").document("frank")
.update(
mapOf(
"age" to 13,
"favorites.color" to "Red",
),
)DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L374-L388]

Java
// Assume the document contains:
// {
//   name: "Frank",
//   favorites: { food: "Pizza", color: "Blue", subject: "recess" }
//   age: 12
// }
//
// To update age and favorite color:
db.collection("users").document("frank")
.update(
"age", 13,
"favorites.color", "Red"
);DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L485-L497]

Dart
// Assume the document contains:
// {
//   name: "Frank",
//   favorites: { food: "Pizza", color: "Blue", subject: "recess" }
//   age: 12
// }
db
.collection("users")
.doc("frank")
.update({"age": 13, "favorites.color": "Red"});firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L255-L264]

자바

// Create an initial document to update
DocumentReference frankDocRef = db.collection("users").document("frank");
Map<String, Object> initialData = new HashMap<>();
initialData.put("name", "Frank");
initialData.put("age", 12);

Map<String, Object> favorites = new HashMap<>();
favorites.put("food", "Pizza");
favorites.put("color", "Blue");
favorites.put("subject", "Recess");
initialData.put("favorites", favorites);

ApiFuture<WriteResult> initialResult = frankDocRef.set(initialData);
// Confirm that data has been successfully saved by blocking on the operation
initialResult.get();

// Update age and favorite color
Map<String, Object> updates = new HashMap<>();
updates.put("age", 13);
updates.put("favorites.color", "Red");

// Async update document
ApiFuture<WriteResult> writeResult = frankDocRef.update(updates);
// ...
System.out.println("Update time : " + writeResult.get().getUpdateTime());ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L221-L245]

Python

# Create an initial document to update
frank_ref = db.collection("users").document("frank")
frank_ref.set(
{
"name": "Frank",
"favorites": {"food": "Pizza", "color": "Blue", "subject": "Recess"},
"age": 12,
}
)

# Update age and favorite color
frank_ref.update({"age": 13, "favorites.color": "Red"})snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L369-L380]

Python

# Create an initial document to update
frank_ref = db.collection("users").document("frank")
await frank_ref.set(
{
"name": "Frank",
"favorites": {"food": "Pizza", "color": "Blue", "subject": "Recess"},
"age": 12,
}
)

# Update age and favorite color
await frank_ref.update({"age": 13, "favorites.color": "Red"})snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L363-L374]

C++
// Assume the document contains:
// {
//   name: "Frank",
//   favorites: { food: "Pizza", color: "Blue", subject: "recess" }
//   age: 12
// }
//
// To update age and favorite color:
db->Collection("users").Document("frank").Update({
{"age", FieldValue::Integer(13)},
{"favorites.color", FieldValue::String("red")},
});snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L282-L293]

Node.js

const initialData = {
name: 'Frank',
age: 12,
favorites: {
food: 'Pizza',
color: 'Blue',
subject: 'recess'
}
};

// ...
const res = await db.collection('users').doc('Frank').update({
age: 13,
'favorites.color': 'Red'
});index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L338-L354]

Go

import (
"context"
"log"

"cloud.google.com/go/firestore"
)

func updateDocNested(ctx context.Context, client *firestore.Client) error {
initialData := map[string]interface{}{
"name": "Frank",
"age":  12,
"favorites": map[string]interface{}{
"food":    "Pizza",
"color":   "Blue",
"subject": "recess",
},
}

// ...

_, err := client.Collection("users").Doc("frank").Set(ctx, map[string]interface{}{
"age": 13,
"favorites": map[string]interface{}{
"color": "Red",
},
}, firestore.MergeAll)
if err != nil {
// Handle any errors in an appropriate way, such as returning them.
log.Printf("An error has occurred: %s", err)
}

return err
}
save_data_set_nested_fields.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/save_data_set_nested_fields.go#L18-L57]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

// Create an initial document to update
$frankRef = $db->collection('samples/php/users')->document('frank');
$frankRef->set([
'first' => 'Frank',
'last' => 'Franklin',
'favorites' => ['food' => 'Pizza', 'color' => 'Blue', 'subject' => 'Recess'],
'age' => 12
]);

// Update age and favorite color
$frankRef->update([
['path' => 'age', 'value' => 13],
['path' => 'favorites.color', 'value' => 'Red']
]);data_set_nested_fields.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/data_set_nested_fields.php#L40-L53]

Unity
DocumentReference frankDocRef = db.Collection("users").Document("frank");
Dictionary<string, object> initialData = new Dictionary<string, object>
{
{ "Name", "Frank" },
{ "Age", 12 }
};

Dictionary<string, object> favorites = new Dictionary<string, object>
{
{ "Food", "Pizza" },
{ "Color", "Blue" },
{ "Subject", "Recess" },
};
initialData.Add("Favorites", favorites);
frankDocRef.SetAsync(initialData).ContinueWithOnMainThread(task => {

// Update age and favorite color
Dictionary<string, object> updates = new Dictionary<string, object>
{
{ "Age", 13 },
{ "Favorites.Color", "Red" },
};

// Asynchronously update the document
return frankDocRef.UpdateAsync(updates);
}).ContinueWithOnMainThread(task => {
Debug.Log(
"Updated the age and favorite color fields of the Frank document in "
+ "the users collection.");
});

C#

DocumentReference frankDocRef = db.Collection("users").Document("frank");
Dictionary<string, object> initialData = new Dictionary<string, object>
{
{ "Name", "Frank" },
{ "Age", 12 }
};

Dictionary<string, object> favorites = new Dictionary<string, object>
{
{ "Food", "Pizza" },
{ "Color", "Blue" },
{ "Subject", "Recess" },
};
initialData.Add("Favorites", favorites);
await frankDocRef.SetAsync(initialData);

// Update age and favorite color
Dictionary<string, object> updates = new Dictionary<string, object>
{
{ "Age", 13 },
{ "Favorites.Color", "Red" },
};

// Asynchronously update the document
await frankDocRef.UpdateAsync(updates);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L200-L224]

Ruby

# Create an initial document to update
frank_ref = firestore.doc "#{collection_path}/frank"
frank_ref.set(
{
name:      "Frank",
favorites: {
food:    "Pizza",
color:   "Blue",
subject: "Recess"
},
age:       12
}
)

# Update age and favorite color
frank_ref.update({ age: 13, "favorites.color": "Red" })add_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/add_data.rb#L183-L198]

점 표기법을 사용하면 다른 중첩 필드를 덮어쓰지 않고 단일 중첩 필드를 업데이트할 수 있습니다. 점 표기법을 사용하지 않고 중첩 필드를 업데이트하면 다음 예시와 같이 전체 맵 필드를 덮어씁니다.

웹
// Create our initial doc
db.collection("users").doc("frank").set({
name: "Frank",
favorites: {
food: "Pizza",
color: "Blue",
subject: "Recess"
},
age: 12
}).then(function() {
console.log("Frank created");
});

// Update the doc without using dot notation.
// Notice the map value for favorites.
db.collection("users").doc("frank").update({
favorites: {
food: "Ice Cream"
}
}).then(function() {
console.log("Frank food updated");
});

/*
Ending State, favorite.color and favorite.subject are no longer present:
/users
/frank
{
name: "Frank",
favorites: {
food: "Ice Cream",
},
age: 12
}
*/

배열 요소 업데이트

문서에 배열 필드가 포함되어 있으면 arrayUnion() 및 arrayRemove()를 사용해 요소를 추가하거나 삭제할 수 있습니다. arrayUnion()은 배열에 없는 요소만 추가하고, arrayRemove()는 제공된 각 요소의 모든 인스턴스를 삭제합니다.

Web
import { doc, updateDoc, arrayUnion, arrayRemove } from "firebase/firestore";

const washingtonRef = doc(db, "cities", "DC");

// Atomically add a new region to the "regions" array field.
await updateDoc(washingtonRef, {
regions: arrayUnion("greater_virginia")
});

// Atomically remove a region from the "regions" array field.
await updateDoc(washingtonRef, {
regions: arrayRemove("east_coast")
});update_document_array.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/update_document_array.js#L8-L20]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
var washingtonRef = db.collection("cities").doc("DC");

// Atomically add a new region to the "regions" array field.
washingtonRef.update({
regions: firebase.firestore.FieldValue.arrayUnion("greater_virginia")
});

// Atomically remove a region from the "regions" array field.
washingtonRef.update({
regions: firebase.firestore.FieldValue.arrayRemove("east_coast")
});test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L485-L495]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

let washingtonRef = db.collection("cities").document("DC")

// Atomically add a new region to the "regions" array field.
washingtonRef.updateData([
"regions": FieldValue.arrayUnion(["greater_virginia"])
])

// Atomically remove a region from the "regions" array field.
washingtonRef.updateData([
"regions": FieldValue.arrayRemove(["east_coast"])
])ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L364-L374]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

FIRDocumentReference *washingtonRef =
[[self.db collectionWithPath:@"cities"] documentWithPath:@"DC"];

// Atomically add a new region to the "regions" array field.
[washingtonRef updateData:@{
@"regions": [FIRFieldValue fieldValueForArrayUnion:@[@"greater_virginia"]]
}];

// Atomically remove a new region to the "regions" array field.
[washingtonRef updateData:@{
@"regions": [FIRFieldValue fieldValueForArrayRemove:@[@"east_coast"]]
}];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L293-L304]

Kotlin
val washingtonRef = db.collection("cities").document("DC")

// Atomically add a new region to the "regions" array field.
washingtonRef.update("regions", FieldValue.arrayUnion("greater_virginia"))

// Atomically remove a region from the "regions" array field.
washingtonRef.update("regions", FieldValue.arrayRemove("east_coast"))DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L353-L359]

Java
DocumentReference washingtonRef = db.collection("cities").document("DC");

// Atomically add a new region to the "regions" array field.
washingtonRef.update("regions", FieldValue.arrayUnion("greater_virginia"));

// Atomically remove a region from the "regions" array field.
washingtonRef.update("regions", FieldValue.arrayRemove("east_coast"));DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L464-L470]

Dart
final washingtonRef = db.collection("cities").doc("DC");

// Atomically add a new region to the "regions" array field.
washingtonRef.update({
"regions": FieldValue.arrayUnion(["greater_virginia"]),
});

// Atomically remove a region from the "regions" array field.
washingtonRef.update({
"regions": FieldValue.arrayRemove(["east_coast"]),
});firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L270-L280]

자바

DocumentReference washingtonRef = db.collection("cities").document("DC");

// Atomically add a new region to the "regions" array field.
ApiFuture<WriteResult> arrayUnion =
washingtonRef.update("regions", FieldValue.arrayUnion("greater_virginia"));
System.out.println("Update time : " + arrayUnion.get());

// Atomically remove a region from the "regions" array field.
ApiFuture<WriteResult> arrayRm =
washingtonRef.update("regions", FieldValue.arrayRemove("east_coast"));
System.out.println("Update time : " + arrayRm.get());ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L265-L275]

Python

city_ref = db.collection("cities").document("DC")

# Atomically add a new region to the 'regions' array field.
city_ref.update({"regions": firestore.ArrayUnion(["greater_virginia"])})

# // Atomically remove a region from the 'regions' array field.
city_ref.update({"regions": firestore.ArrayRemove(["east_coast"])})snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L332-L338]

Python

city_ref = db.collection("cities").document("DC")

# Atomically add a new region to the 'regions' array field.
await city_ref.update({"regions": firestore.ArrayUnion(["greater_virginia"])})

# // Atomically remove a region from the 'regions' array field.
await city_ref.update({"regions": firestore.ArrayRemove(["east_coast"])})snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L326-L332]

C++
// This is not yet supported.

Node.js

// ...
const washingtonRef = db.collection('cities').doc('DC');

// Atomically add a new region to the "regions" array field.
const unionRes = await washingtonRef.update({
regions: FieldValue.arrayUnion('greater_virginia')
});
// Atomically remove a region from the "regions" array field.
const removeRes = await washingtonRef.update({
regions: FieldValue.arrayRemove('east_coast')
});

// To add or remove multiple items, pass multiple arguments to arrayUnion/arrayRemove
const multipleUnionRes = await washingtonRef.update({
regions: FieldValue.arrayUnion('south_carolina', 'texas')
// Alternatively, you can use spread operator in ES6 syntax
// const newRegions = ['south_carolina', 'texas']
// regions: FieldValue.arrayUnion(...newRegions)
});index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L238-L256]

Go
// Not supported yet

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$cityRef = $db->collection('samples/php/cities')->document('DC');

// Atomically add a new region to the "regions" array field.
$cityRef->update([
['path' => 'regions', 'value' => FieldValue::arrayUnion(['greater_virginia'])]
]);

// Atomically remove a region from the "regions" array field.
$cityRef->update([
['path' => 'regions', 'value' => FieldValue::arrayRemove(['east_coast'])]
]);data_set_array_operations.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/data_set_array_operations.php#L41-L51]

Unity
// This is not yet supported in the Unity SDK

C#

DocumentReference washingtonRef = db.Collection("cities").Document("DC");

// Atomically add a new region to the "regions" array field.
await washingtonRef.UpdateAsync("Regions", FieldValue.ArrayUnion("greater_virginia"));

// Atomically remove a region from the "regions" array field.
await washingtonRef.UpdateAsync("Regions", FieldValue.ArrayRemove("east_coast"));Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L243-L249]

Ruby
// Not supported yet

숫자 값 늘리기

다음 예시와 같이 숫자 필드 값을 늘리거나 줄일 수 있습니다. 증분 작업은 필드의 현재 값을 지정된 값만큼 늘리거나 줄입니다.

참고: 필드가 없거나 현재 필드 값이 숫자가 아니면 작업을 통해 필드가 지정된 값으로 설정됩니다.

Web
import { doc, updateDoc, increment } from "firebase/firestore";

const washingtonRef = doc(db, "cities", "DC");

// Atomically increment the population of the city by 50.
await updateDoc(washingtonRef, {
population: increment(50)
});update_document_increment.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/update_document_increment.js#L8-L15]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
var washingtonRef = db.collection('cities').doc('DC');

// Atomically increment the population of the city by 50.
washingtonRef.update({
population: firebase.firestore.FieldValue.increment(50)
});test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L501-L506]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

let washingtonRef = db.collection("cities").document("DC")

// Atomically increment the population of the city by 50.
// Note that increment() with no arguments increments by 1.
washingtonRef.updateData([
"population": FieldValue.increment(Int64(50))
])ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L380-L386]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

FIRDocumentReference *washingtonRef =
[[self.db collectionWithPath:@"cities"] documentWithPath:@"DC"];

// Atomically increment the population of the city by 50.
// Note that increment() with no arguments increments by 1.
[washingtonRef updateData:@{
@"population": [FIRFieldValue fieldValueForIntegerIncrement:50]
}];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L310-L317]

Kotlin
val washingtonRef = db.collection("cities").document("DC")

// Atomically increment the population of the city by 50.
washingtonRef.update("population", FieldValue.increment(50))DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L365-L368]

Java
DocumentReference washingtonRef = db.collection("cities").document("DC");

// Atomically increment the population of the city by 50.
washingtonRef.update("population", FieldValue.increment(50));DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L476-L479]

Dart
var washingtonRef = db.collection('cities').doc('DC');

// Atomically increment the population of the city by 50.
washingtonRef.update(
{"population": FieldValue.increment(50)},
);firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L286-L291]

자바

DocumentReference washingtonRef = db.collection("cities").document("DC");

// Atomically increment the population of the city by 50.
final ApiFuture<WriteResult> updateFuture =
washingtonRef.update("population", FieldValue.increment(50));ManageDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/ManageDataSnippets.java#L430-L434]

Python

washington_ref = db.collection("cities").document("DC")

washington_ref.update({"population": firestore.Increment(50)})snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L957-L959]

Python

washington_ref = db.collection("cities").document("DC")

await washington_ref.update({"population": firestore.Increment(50)})snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L789-L791]

C++
// This is not yet supported.

Node.js

// ...
const washingtonRef = db.collection('cities').doc('DC');

// Atomically increment the population of the city by 50.
const res = await washingtonRef.update({
population: FieldValue.increment(50)
});index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L264-L270]

Go

import (
"context"
"fmt"

"cloud.google.com/go/firestore"
)

// updateDocumentIncrement increments the population of the city document in the
// cities collection by 50.
func updateDocumentIncrement(projectID, city string) error {
// projectID := "my-project"

ctx := context.Background()

client, err := firestore.NewClient(ctx, projectID)
if err != nil {
return fmt.Errorf("firestore.NewClient: %w", err)
}
defer client.Close()

dc := client.Collection("cities").Doc(city)
_, err = dc.Update(ctx, []firestore.Update{
{Path: "population", Value: firestore.Increment(50)},
})
if err != nil {
return fmt.Errorf("Update: %w", err)
}

return nil
}
increment.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/increment.go#L18-L48]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$cityRef = $db->collection('samples/php/cities')->document('DC');

// Atomically increment the population of the city by 50.
$cityRef->update([
['path' => 'regions', 'value' => FieldValue::increment(50)]
]);data_set_numeric_increment.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/data_set_numeric_increment.php#L41-L46]

Unity
// This is not yet supported in the Unity SDK.

C#

DocumentReference washingtonRef = db.Collection("cities").Document("DC");

// Atomically increment the population of the city by 50.
await washingtonRef.UpdateAsync("Regions", FieldValue.Increment(50));Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/AddData/Program.cs#L258-L261]

Ruby

city_ref = firestore.doc "#{collection_path}/DC"
city_ref.update({ population: firestore.field_increment(50) })add_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/add_data.rb#L239-L240]

증분 작업은 카운터를 구현하는 데 유용하지만, 단일 문서를 너무 빨리 업데이트하면 경합 또는 오류가 발생 [https://firebase.google.com/docs/firestore/best-practices?hl=ko#updates_to_a_single_document]할 수 있습니다. 카운터를 매우 높은 속도로 업데이트해야 하는 경우 분산 카운터 [https://firebase.google.com/docs/firestore/solutions/counters?hl=ko] 페이지를 참조하세요.

의견 보내기