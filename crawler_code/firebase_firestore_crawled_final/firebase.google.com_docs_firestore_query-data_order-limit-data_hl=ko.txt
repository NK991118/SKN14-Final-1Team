Source URL: https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko
Title: Cloud Firestore로 데이터 정렬 및 제한

이제 MongoDB 호환성을 갖춘 Cloud Firestore Enterprise 버전을 사용할 수 있습니다. 자세히 알아보기 [https://firebase.google.com/docs/firestore/enterprise/mongodb-compatibility-overview?hl=ko]

의견 보내기

Cloud Firestore로 데이터 정렬 및 제한

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

Cloud Firestore는 컬렉션에서 검색할 문서를 지정할 수 있는 강력한 쿼리 기능을 제공합니다. 데이터 가져오기 [https://firebase.google.com/docs/firestore/query-data/get-data?hl=ko]에 설명된 대로 이러한 쿼리를 get() 또는 addSnapshotListener()와 함께 사용할 수도 있습니다.참고: 코드 샘플에서는 여러 언어를 다루지만 샘플을 설명하는 텍스트는 웹 메서드 이름을 참조합니다.데이터 정렬 및 제한

기본적으로 쿼리는 쿼리 조건에 맞는 모든 문서를 문서 ID에 따라 오름차순으로 검색합니다. orderBy()를 사용하여 데이터의 정렬 순서를 지정하고 limit()를 사용하여 검색된 문서 수를 제한할 수 있습니다. limit()를 지정하는 경우 값은 0보다 크거나 같아야 합니다.
참고: orderBy() 절은 특정 필드의 존재 여부도 필터링 [https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko#orderby_and_existence]합니다.
결과 집합에는 지정된 필드가 포함되지 않은 문서가 제외됩니다.
예를 들어 알파벳순으로 처음 3개 도시를 쿼리하는 방법은 다음과 같습니다.

Web
import { query, orderBy, limit } from "firebase/firestore";

const q = query(citiesRef, orderBy("name"), limit(3));order_and_limit.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/order_and_limit.js#L8-L10]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
citiesRef.orderBy("name").limit(3);test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L928-L928]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

citiesRef.order(by: "name").limit(to: 3)ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L1007-L1007]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

[[citiesRef queryOrderedByField:@"name"] queryLimitedTo:3];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L933-L933]

Kotlin
citiesRef.orderBy("name").limit(3)DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L926-L926]

Java
citiesRef.orderBy("name").limit(3);DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L1119-L1119]

Dart
final citiesRef = db.collection("cities");
citiesRef.orderBy("name").limit(3);firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L957-L958]

자바

Query query = cities.orderBy("name").limit(3);
Query query = cities.orderBy("name").limitToLast(3);QueryDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/QueryDataSnippets.java#L264-L264]

Python

cities_ref = db.collection("cities")
query = cities_ref.order_by("name").limit_to_last(2)
results = query.get()snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L578-L580]

Python

cities_ref = db.collection("cities")
query = cities_ref.order_by("name").limit_to_last(2)
results = await query.get()snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L563-L565]

C++
cities_ref.OrderBy("name").Limit(3);snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L1063-L1063]

Node.js

const firstThreeRes = await citiesRef.orderBy('name').limit(3).get();index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L688-L688]

Go

query := cities.OrderBy("name", firestore.Asc).Limit(3)
query := cities.OrderBy("name", firestore.Asc).LimitToLast(3)query.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/query.go#L155-L155]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$query = $citiesRef->orderBy('name')->limit(3);query_order_limit.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/query_order_limit.php#L41-L41]

Unity
Query query = citiesRef.OrderBy("Name").Limit(3);

C#

Query query = citiesRef.OrderBy("Name").Limit(3);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/OrderLimitData/Program.cs#L44-L44]

Ruby

query = cities_ref.order("name").limit(3)order_limit_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/order_limit_data.rb#L25-L25]

내림차순으로 정렬하여 마지막 3개 도시를 가져올 수도 있습니다.

Web
import { query, orderBy, limit } from "firebase/firestore";

const q = query(citiesRef, orderBy("name", "desc"), limit(3));order_and_limit_desc.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/order_and_limit_desc.js#L8-L10]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
citiesRef.orderBy("name", "desc").limit(3);test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L935-L935]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

citiesRef.order(by: "name", descending: true).limit(to: 3)ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L1015-L1015]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

[[citiesRef queryOrderedByField:@"name" descending:YES] queryLimitedTo:3];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L940-L940]

Kotlin
citiesRef.orderBy("name", Query.Direction.DESCENDING).limit(3)DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L930-L930]

Java
citiesRef.orderBy("name", Direction.DESCENDING).limit(3);DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L1123-L1123]

Dart
final citiesRef = db.collection("cities");
citiesRef.orderBy("name", descending: true).limit(3);firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L964-L965]

자바

Query query = cities.orderBy("name", Direction.DESCENDING).limit(3);QueryDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/QueryDataSnippets.java#L290-L290]

Python

cities_ref = db.collection("cities")
query = cities_ref.order_by("name", direction=firestore.Query.DESCENDING).limit(3)
results = query.stream()snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L539-L541]

Python

cities_ref = db.collection("cities")
query = cities_ref.order_by("name", direction=firestore.Query.DESCENDING).limit(3)
results = query.stream()snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L529-L531]

C++
cities_ref.OrderBy("name", Query::Direction::kDescending).Limit(3);snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L1068-L1068]

Node.js

const lastThreeRes = await citiesRef.orderBy('name', 'desc').limit(3).get();index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L692-L692]

Go

query := cities.OrderBy("name", firestore.Desc).Limit(3)query.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/query.go#L164-L164]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$query = $citiesRef->orderBy('name', 'DESC')->limit(3);query_order_desc_limit.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/query_order_desc_limit.php#L41-L41]

Unity
Query query = citiesRef.OrderByDescending("Name").Limit(3);

C#

Query query = citiesRef.OrderByDescending("Name").Limit(3);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/OrderLimitData/Program.cs#L58-L58]

Ruby

query = cities_ref.order("name", "desc").limit(3)order_limit_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/order_limit_data.rb#L40-L40]

여러 필드를 기준으로 정렬할 수도 있습니다. 예를 들어 주를 기준으로 정렬한 후 각 주 안에서 인구에 따라 내림차순으로 정렬하는 방법은 다음과 같습니다.

Web
import { query, orderBy } from "firebase/firestore";

const q = query(citiesRef, orderBy("state"), orderBy("population", "desc"));order_multiple.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/order_multiple.js#L8-L10]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
citiesRef.orderBy("state").orderBy("population", "desc");test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L942-L942]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

citiesRef
.order(by: "state")
.order(by: "population", descending: true)ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L1023-L1025]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

[[citiesRef queryOrderedByField:@"state"] queryOrderedByField:@"population" descending:YES];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L947-L947]

Kotlin
citiesRef.orderBy("state").orderBy("population", Query.Direction.DESCENDING)DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L934-L934]

Java
citiesRef.orderBy("state").orderBy("population", Direction.DESCENDING);DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L1127-L1127]

Dart
final citiesRef = db.collection("cities");
citiesRef.orderBy("state").orderBy("population", descending: true);firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L971-L972]

자바

Query query = cities.orderBy("state").orderBy("population", Direction.DESCENDING);QueryDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/QueryDataSnippets.java#L277-L277]

Python

cities_ref = db.collection("cities")
ordered_city_ref = cities_ref.order_by("state").order_by(
"population", direction=firestore.Query.DESCENDING
)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L552-L555]

Python

cities_ref = db.collection("cities")
cities_ref.order_by("state").order_by(
"population", direction=firestore.Query.DESCENDING
)snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L539-L542]

C++
cities_ref.OrderBy("state").OrderBy("name", Query::Direction::kDescending);snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L1074-L1074]

Node.js

const byStateByPopRes = await citiesRef.orderBy('state').orderBy('population', 'desc').get();index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L696-L696]

Go

query := client.Collection("cities").OrderBy("state", firestore.Asc).OrderBy("population", firestore.Desc)query.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/query.go#L172-L172]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$query = $citiesRef->orderBy('state')->orderBy('population', 'DESC');query_order_multi.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/query_order_multi.php#L41-L41]

Unity
Query query = citiesRef.OrderBy("State").OrderByDescending("Population");

C#

Query query = citiesRef.OrderBy("State").OrderByDescending("Population");Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/OrderLimitData/Program.cs#L72-L72]

Ruby

query = cities_ref.order("state").order("population", "desc")order_limit_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/order_limit_data.rb#L55-L55]

where() 필터를 orderBy() 및 limit()와 결합할 수 있습니다. 다음 예시의 쿼리에서는 인구 기준을 정의하고, 인구를 오름차순으로 정렬하며, 기준을 초과하는 처음 몇 개의 결과만 반환합니다.

Web
import { query, where, orderBy, limit } from "firebase/firestore";

const q = query(citiesRef, where("population", ">", 100000), orderBy("population"), limit(2));filter_and_order.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/filter_and_order.js#L8-L10]

Web

트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.
citiesRef.where("population", ">", 100000).orderBy("population").limit(2);test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L949-L949]

Swift

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

citiesRef
.whereField("population", isGreaterThan: 100000)
.order(by: "population")
.limit(to: 2)ViewController.swift [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/swift/firestore-smoketest/ViewController.swift#L1033-L1036]

Objective-C

참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.

[[[citiesRef queryWhereField:@"population" isGreaterThan:@100000]
queryOrderedByField:@"population"]
queryLimitedTo:2];ViewController.m [https://github.com/firebase/snippets-ios/blob/cdce007fedb3bb90dd3a70ce03066178236e1deb/firestore/objc/firestore-smoketest-objc/ViewController.m#L954-L956]

Kotlin
citiesRef.whereGreaterThan("population", 100000).orderBy("population").limit(2)DocSnippets.kt [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/kotlin/DocSnippets.kt#L938-L938]

Java
citiesRef.whereGreaterThan("population", 100000).orderBy("population").limit(2);DocSnippets.java [https://github.com/firebase/snippets-android/blob/b694d4dbd411d31be39655f47691c3e9f3529b03/firestore/app/src/main/java/com/google/example/firestore/DocSnippets.java#L1131-L1131]

Dart
final citiesRef = db.collection("cities");
citiesRef
.where("population", isGreaterThan: 100000)
.orderBy("population")
.limit(2);firestore.dart [https://github.com/firebase/snippets-flutter/blob/f674af111fe63779c39e79699f7d269231f77563/packages/firebase_snippets_app/lib/snippets/firestore.dart#L978-L982]

자바

Query query = cities.whereGreaterThan("population", 2500000L).orderBy("population").limit(2);QueryDataSnippets.java [https://github.com/googleapis/java-firestore/blob/d546b5a3d30086f86ed3688b725f639fbdf7c11c/samples/snippets/src/main/java/com/example/firestore/snippets/QueryDataSnippets.java#L303-L303]

Python

cities_ref = db.collection("cities")
query = (
cities_ref.where(filter=FieldFilter("population", ">", 2500000))
.order_by("population")
.limit(2)
)
results = query.stream()snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-client/snippets.py#L563-L569]

Python

cities_ref = db.collection("cities")
query = (
cities_ref.where(filter=FieldFilter("population", ">", 2500000))
.order_by("population")
.limit(2)
)
results = query.stream()snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L549-L555]

C++
cities_ref.WhereGreaterThan("population", FieldValue::Integer(100000))
.OrderBy("population")
.Limit(2);snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L1082-L1084]

Node.js

const biggestRes = await citiesRef.where('population', '>', 2500000)
.orderBy('population').limit(2).get();index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L700-L701]

Go

query := cities.Where("population", ">", 2500000).OrderBy("population", firestore.Desc).Limit(2)query.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/query.go#L180-L180]

PHP

PHP

Cloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.

$query = $citiesRef
->where('population', '>', 2500000)
->orderBy('population')
->limit(2);query_order_limit_field_valid.php [https://github.com/GoogleCloudPlatform/php-docs-samples/blob/5be36a7311875e7635e96a0cd9072cfb425c9e84/firestore/src/query_order_limit_field_valid.php#L41-L44]

Unity
Query query = citiesRef
.WhereGreaterThan("Population", 2500000)
.OrderBy("Population")
.Limit(2);

C#

Query query = citiesRef
.WhereGreaterThan("Population", 2500000)
.OrderBy("Population")
.Limit(2);Program.cs [https://github.com/GoogleCloudPlatform/dotnet-docs-samples/blob/2b9c8d16206d43588f8f135a85ff3589ba7046b9/firestore/api/OrderLimitData/Program.cs#L86-L89]

Ruby

query = cities_ref.where("population", ">", 2_500_000).order("population").limit(2)order_limit_data.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/order_limit_data.rb#L70-L70]

그러나 필터에 범위 비교(<, <=, >, >=)가 포함된 경우 동일한 필드를 기준으로 1차 정렬이 이루어져야 합니다. 아래의 orderBy() 제한사항 목록을 참조하세요.

제한사항

orderBy() 절에는 다음과 같은 제한사항이 있습니다.

orderBy() 절은 특정 필드의 존재 여부도 필터링 [https://firebase.google.com/docs/firestore/query-data/order-limit-data?hl=ko#orderby_and_existence]합니다.
결과 집합에는 지정된 필드가 포함되지 않은 문서가 제외됩니다.

orderBy 및 존재 여부

특정 필드를 기준으로 쿼리를 정렬할 때 쿼리는 정렬 기준 필드가 있는 문서만 반환할 수 있습니다.

예를 들어 다음 쿼리는 쿼리 필터를 충족하더라도 population 필드가 설정되지 않은 문서를 반환하지 않습니다.

자바
db.collection("cities").whereEqualTo("country", “USA”).orderBy(“population”);

관련 효과는 부등식에 적용됩니다. 필드에 부등식 필터가 있는 쿼리는 해당 필드를 기준으로 한 정렬도 포함합니다. 다음 쿼리는 해당 문서에 country = USA가 있더라도 population 필드가 없는 문서를 반환하지 않습니다. 이 문제를 해결하려면 각 정렬마다 별도의 쿼리를 실행하거나 정렬하는 모든 필드에 값을 할당할 수 있습니다.

자바
db.collection(“cities”).where(or(“country”, USA”), greaterThan(“population”, 250000));

위 쿼리는 부등식에 대한 묵시적 정렬 기준을 포함하며 다음과 같습니다.

자바
db.collection(“cities”).where(or(“country”, USA”), greaterThan(“population”, 250000)).orderBy(“population”);

의견 보내기