Source URL: https://developers.google.com/maps/documentation/ios-sdk/current-place-tutorial

이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.
홈 [https://developers.google.com/?hl=ko]
제품 [https://developers.google.com/products?hl=ko]
Google Maps Platform [https://developers.google.com/maps?hl=ko]
문서 [https://developers.google.com/maps/documentation?hl=ko]
iOS [https://developers.google.com/maps/ios?hl=ko]
Maps SDK for iOS [https://developers.google.com/maps/documentation/ios-sdk?hl=ko]
의견 보내기
지도에서 현재 장소 선택 및 세부정보 표시하기
이 튜토리얼에서는 기기의 현재 위치를 가져오고, 가능성이 높은 위치를 식별하고, 사용자에게 가장 적합한 위치를 선택하라는 메시지를 표시하고, 선택한 위치의 지도 마커를 표시하는 iOS 앱을 빌드하는 방법을 보여줍니다.
Swift 또는 Objective-C에 관한 초급 또는 중급 수준의 지식과 Xcode에 관한 일반적인 지식이 있는 사용자에게 적합합니다. 지도 만들기에 관한 고급 가이드는 개발자 가이드 [https://developers.google.com/maps/documentation/ios-sdk?hl=ko]를 참고하세요.
이 튜토리얼을 사용하여 다음과 같은 지도를 만듭니다. 지도 마커는 캘리포니아주 샌프란시스코에 배치되지만 기기나 시뮬레이터가 있는 곳으로 이동합니다.
이 튜토리얼에서는 iOS용 Places SDK [https://developers.google.com/maps/documentation/places/ios-sdk?hl=ko], iOS용 Maps SDK [https://developers.google.com/maps/documentation/ios-sdk?hl=ko], Apple Core Location 프레임워크 [https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/LocationAwarenessPG/CoreLocation/CoreLocation.html#//apple_ref/doc/uid/TP40009497-CH2-SW1]를 사용합니다.
코드 가져오기
GitHub에서 Google Maps iOS 샘플 저장소 [https://github.com/googlemaps-samples/maps-sdk-for-ios-samples]를 클론하거나 다운로드합니다.
또는 다음 버튼을 클릭하여 소스 코드를 다운로드합니다.
코드 받기 [https://github.com/googlemaps-samples/maps-sdk-for-ios-samples/archive/main.zip]
시작하기
참고: 완료한 튜토리얼의 샘플 코드 [https://github.com/googlemaps-samples/maps-sdk-for-ios-samples]는 Swift Xcode 프로젝트로 실행되도록 구성되지만 Swift 및 Objective-C 예시가 포함되어 있습니다.
API 키 가져오기 및 필요한 API 사용 설정하기
이 튜토리얼을 완료하려면 iOS용 Maps SDK 및 Places API를 사용할 수 있도록 승인된 Google API 키가 필요합니다.
Google Maps Platform 시작하기 [https://developers.google.com/maps/get-started?hl=ko]의 안내에 따라 결제 계정 및 두 제품이 모두 사용 설정된 프로젝트를 설정합니다.
API 키 가져오기 [https://developers.google.com/maps/documentation/ios-sdk/get-api-key?hl=ko#get_key]의 안내에 따라 이전에 설정한 개발 프로젝트 [https://developers.google.com/maps/documentation/ios-sdk/current-place-tutorial?hl=ko#set-up-your-development-project]의 API 키를 만듭니다.
애플리케이션에 API 키 추가
다음과 같이 API 키를 AppDelegate.swift에 추가합니다.
다음 가져오기 문이 파일에 추가되었는지 확인합니다.
import GooglePlaces
import GoogleMaps
application(_:didFinishLaunchingWithOptions:) 메서드에서 다음 줄을 편집하여 YOUR_API_KEY를 본인의 API 키로 대체합니다.
GMSPlacesClient.provideAPIKey("YOUR_API_KEY")
GMSServices.provideAPIKey("YOUR_API_KEY")
참고: 구성 [https://developers.google.com/maps/documentation/ios-sdk/get-api-key?hl=ko#get_key]에 따라 Maps SDK API 키가 Places SDK API 키와 동일한 값일 수 있습니다.
앱 빌드 및 실행
iOS 기기를 컴퓨터에 연결하거나 Xcode 스키마 메뉴에서 시뮬레이터 [https://developer.apple.com/library/content/documentation/IDEs/Conceptual/iOS_Simulator_Guide/Introduction/Introduction.html]를 선택합니다.
기기를 사용하는 경우 위치 서비스가 사용 설정되어 있는지 확인합니다. 시뮬레이터를 사용하는 경우 기능 메뉴에서 위치를 선택합니다.
Xcode에서 Product/Run 메뉴 옵션 (또는 재생 버튼 아이콘)을 클릭합니다.
Xcode에서 앱을 빌드한 다음 기기 또는 시뮬레이터에서 앱을 실행합니다.
현재 위치를 중심으로 여러 개의 마커가 있는 지도가 표시됩니다.
문제 해결:
지도가 표시되지 않으면 위에서 설명한 대로 [https://developers.google.com/maps/documentation/ios-sdk/current-place-tutorial?hl=ko#add_api_key] API 키를 가져와 앱에 추가했는지 확인하세요. Xcode의 디버깅 콘솔에서 API 키에 관한 오류 메시지를 확인합니다.
iOS 번들 식별자로 API 키를 제한한 경우 키를 수정하여 앱에 대한 번들 식별자를 추가하세요(com.google.examples.current-place-on-map).
위치 서비스 권한 요청이 거부되면 지도가 제대로 표시되지 않습니다.
기기를 사용하는 경우 설정/일반/개인 정보 보호/위치 서비스로 이동하여 위치 서비스를 다시 사용 설정합니다.
시뮬레이터를 사용하는 경우 Simulator/Reset Content and Settings...로 이동합니다.
다음에 앱을 실행할 때 위치 서비스 프롬프트를 수락해야 합니다.
Wi-Fi 또는 GPS 연결 상태가 양호해야 합니다.
앱이 실행되지만 지도가 표시되지 않으면 프로젝트의 Info.plist를 적절한 위치 권한으로 업데이트했는지 확인하세요. 권한 처리에 관한 자세한 내용은 아래의 앱에서 위치 정보 액세스 권한 요청 [https://developers.google.com/maps/documentation/ios-sdk/current-place-tutorial?hl=ko#request_location_permission] 가이드를 참고하세요.
Xcode 디버깅 도구 [https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/debugging_with_xcode/chapters/debugging_tools.html]를 사용하여 로그를 확인하고 앱을 디버그합니다.
코드 이해하기
여기에서는 유사한 앱을 빌드하는 방법을 이해할 수 있도록 current-place-on-map 앱의 가장 중요한 부분을 설명합니다.
current-place-on-map 앱에는 두 개의 뷰 컨트롤러가 있습니다. 하나는 사용자가 선택한 장소를 보여주는 지도를 표시하고 다른 하나는 사용자가 선택할 수 있는 예상 장소 목록을 표시합니다. 각 뷰 컨트롤러에는 예상 장소 목록 (likelyPlaces)을 추적하고 사용자의 선택 (selectedPlace)을 나타내는 동일한 변수가 있습니다. 뷰 간 탐색은 세그웨이 [https://developer.apple.com/library/content/featuredarticles/ViewControllerPGforiPhoneOS/UsingSegues.html]를 사용하여 이루어집니다.
위치 정보 액세스 권한 요청
앱은 사용자에게 위치 서비스 사용에 대한 동의를 요청해야 합니다. 이렇게 하려면 앱의 Info.plist 파일에 NSLocationAlwaysUsageDescription 키를 포함하고 각 키의 값을 앱이 위치 데이터를 사용하는 방법을 설명하는 문자열로 설정합니다.
위치 관리자 설정
참고: iOS 14에는 사용자가 정확한 위치 대신 대략적인 위치를 공유하도록 선택할 수 있는 새로운 개인 정보 보호 기능이 도입되었습니다. 앱이 적절하게 동작하도록 CLLocationManager에서 앱의 accuracyAuthorization [https://developer.apple.com/documentation/corelocation/cllocationmanager/3600215-accuracyauthorization] 값을 확인합니다. 자세한 내용은 이 동영상을 참고하세요. [https://developer.apple.com/videos/play/wwdc2020/10162/]
CLLocationManager [https://developer.apple.com/reference/corelocation/cllocationmanager]를 사용하여 기기의 현재 위치를 찾고 기기가 새 위치로 이동할 때 정기 업데이트를 요청합니다. 이 튜토리얼에서는 기기의 위치를 가져오는 데 필요한 코드를 제공합니다. 자세한 내용은 Apple 개발자 문서의 사용자 위치 가져오기 [https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/LocationAwarenessPG/CoreLocation/CoreLocation.html#//apple_ref/doc/uid/TP40009497-CH2-SW1] 가이드를 참고하세요.
클래스 수준에서 위치 관리자, 현재 위치, 지도 뷰, 장소 클라이언트, 기본 확대/축소 수준을 선언합니다.
viewDidLoad()에서 위치 관리자와 GMSPlacesClient를 초기화합니다.
예상 장소 목록과 사용자가 선택한 장소를 저장할 변수를 선언합니다.
확장 프로그램 절을 사용하여 위치 관리자의 이벤트를 처리하는 대리자를 추가합니다.
지도 추가하기
지도를 만들고 기본 뷰 컨트롤러의 viewDidLoad()에 있는 뷰에 추가합니다. 위치 업데이트가 수신될 때까지 지도가 숨겨져 있습니다(위치 업데이트는 CLLocationManagerDelegate 확장 프로그램에서 처리됨).
사용자에게 현재 장소를 선택하라는 메시지 표시
iOS용 Places SDK를 사용하여 사용자의 현재 위치를 기반으로 상위 5개 장소 가능성을 가져오고 UITableView에 목록을 표시합니다. 사용자가 장소를 선택하면 지도에 마커를 추가합니다.
사용자가 있는 장소를 선택할 수 있는 UITableView를 채울 가능성이 높은 장소 목록을 가져옵니다.
새 뷰를 열어 사용자에게 가능성이 높은 장소를 표시합니다. 사용자가 '장소 가져오기'를 탭하면 새 뷰로 세그웨이하고 선택할 수 있는 장소 목록을 사용자에게 표시합니다. prepare 함수는 현재 예상 장소 목록으로 PlacesViewController를 업데이트하며, 세그가 실행되면 자동으로 호출됩니다.
PlacesViewController에서 UITableViewDataSource 위임 확장 프로그램을 사용하여 가장 가능성이 높은 장소 목록을 사용하여 표를 채웁니다.
UITableViewDelegate 위임 확장 프로그램을 사용하여 사용자의 선택을 처리합니다.
지도에 마커 추가
사용자가 선택하면 언와인드 세그웨이를 사용하여 이전 뷰로 돌아가고 지도에 마커를 추가합니다. unwindToMain IBAction은 기본 보기 컨트롤러로 돌아갈 때 자동으로 호출됩니다.
수고하셨습니다. 사용자가 현재 장소를 선택하고 Google 지도에 결과를 표시할 수 있는 iOS 앱을 빌드했습니다. 이 과정에서 iOS용 Places SDK [https://developers.google.com/maps/documentation/places/ios-sdk?hl=ko], iOS용 Maps SDK [https://developers.google.com/maps/documentation/ios-sdk?hl=ko], Apple Core Location 프레임워크 [https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/LocationAwarenessPG/CoreLocation/CoreLocation.html#//apple_ref/doc/uid/TP40009497-CH2-SW1]를 사용하는 방법을 알아보았습니다.
의견 보내기