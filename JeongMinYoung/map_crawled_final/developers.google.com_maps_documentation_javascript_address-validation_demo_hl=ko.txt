Source URL: https://developers.google.com/maps/documentation/javascript/address-validation/demo?hl=ko
Title: 주소 검증 데모

의견 보내기

주소 검증 데모

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 제품 또는 기능은 미리보기(GA 이전) 버전입니다.
GA 이전 제품과 기능은 지원이 제한적일 수 있으며, GA 이전 제품과 기능에 대한 변경사항은 다른 GA 이전 버전과 호환되지 않을 수 있습니다. GA 이전 버전 제품 및 서비스에는 Google Maps Platform 서비스별 약관 [https://cloud.google.com/maps-platform/terms/maps-service-terms?hl=ko]이 적용됩니다. 자세한 내용은 출시 단계 설명 [https://developers.google.com/maps/launch-stages?hl=ko]을 참고하세요.

주소 확인 사용해 보기

이 데모를 사용하여 지원되는 지역의 모든 주소를 사용하여 Address Validation API를 사용해 보세요.
이 데모는 주소 구성요소를 입력으로 받아 아래에 유효성 검사 응답을 표시합니다. 구조화되지 않은 주소를 파싱하려면 Street Address 1(상세 주소 1) 입력란에 전체 주소를 입력합니다.
양식 상단의 드롭다운에서 주소 예시를 선택합니다.

TypeScript
exampleSelect!.addEventListener('change', handleExampleSelectChange);
clearFormButton!.addEventListener('click', handleClearForm);
resultDisplay!.textContent = 'Validating...';  // Clear previous results

streetAddress2Input!.value.trim()
].filter(line => line),  // Filter out empty lines
locality: cityInput!.value.trim(),
administrativeArea: stateInput!.value.trim(),
postalCode: zipCodeInput!.value.trim(),
"Verdict summary\n================\n" +
`Formatted address: ${result.address.formattedAddress}\n` +
`Entered: ${result.verdict.inputGranularity}\n` +
`Validated: ${result.verdict.validationGranularity}\n` +
`Geocoded: ${result.verdict.geocodeGranularity}\n` +
`Possible next action: ${result.verdict.possibleNextAction}\n\n` +
`${getVerdictMessage(result.verdict, 'addressComplete')}\n` +
`${getVerdictMessage(result.verdict, 'hasUnconfirmedComponents')}\n` +
`${getVerdictMessage(result.verdict, 'hasInferredComponents')}\n` +
`${getVerdictMessage(result.verdict, 'hasReplacedComponents')}\n\n` +
`Raw JSON response\n=================\n` +
JSON.stringify(result, null, '  ');

return verdict[key] ? verdictMessages[key].trueMessage :
verdictMessages[key].falseMessage;
streetAddress2Input!.value = '';
cityInput!.value = '';
stateInput!.value = '';
zipCodeInput!.value = '';
regionSelect!.value = '';
exampleSelect!.value = '';
resultDisplay!.textContent = 'Result will appear here...';
streetAddress2Input!.value = exampleAddress.streetAddress2 || '';
cityInput!.value = exampleAddress.city || '';
stateInput!.value = exampleAddress.state || '';
zipCodeInput!.value = exampleAddress.zipCode || '';
regionSelect!.value = exampleAddress.region || '';

exampleSelect.addEventListener('change', handleExampleSelectChange);
clearFormButton.addEventListener('click', handleClearForm);
resultDisplay.textContent = 'Validating...'; // Clear previous results
streetAddress2Input.value.trim()
].filter(line => line), // Filter out empty lines
locality: cityInput.value.trim(),
administrativeArea: stateInput.value.trim(),
postalCode: zipCodeInput.value.trim(),
"Verdict summary\n================\n" +
`Formatted address: ${result.address.formattedAddress}\n` +
`Entered: ${result.verdict.inputGranularity}\n` +
`Validated: ${result.verdict.validationGranularity}\n` +
`Geocoded: ${result.verdict.geocodeGranularity}\n` +
`Possible next action: ${result.verdict.possibleNextAction}\n\n` +
`${getVerdictMessage(result.verdict, 'addressComplete')}\n` +
`${getVerdictMessage(result.verdict, 'hasUnconfirmedComponents')}\n` +
`${getVerdictMessage(result.verdict, 'hasInferredComponents')}\n` +
`${getVerdictMessage(result.verdict, 'hasReplacedComponents')}\n\n` +
`Raw JSON response\n=================\n` +
JSON.stringify(result, null, '  ');
return 'Unknown';
return verdict[key] ? verdictMessages[key].trueMessage :
verdictMessages[key].falseMessage;
streetAddress2Input.value = '';
cityInput.value = '';
stateInput.value = '';
zipCodeInput.value = '';
regionSelect.value = '';
exampleSelect.value = '';
resultDisplay.textContent = 'Result will appear here...';
streetAddress2Input.value = exampleAddress.streetAddress2 || '';
cityInput.value = exampleAddress.city || '';
stateInput.value = exampleAddress.state || '';
zipCodeInput.value = exampleAddress.zipCode || '';
regionSelect.value = exampleAddress.region || '';
body,
html {
<html>
<head>
<title>Address Validation</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<!-- Address Validation Form Container -->
<div id="sidebar">
<!-- Header -->
<div class="sidebar-header">
<h2>Address Validation</h2>
</div>
<!-- Content: Address Form -->
<form id="address-form" class="sidebar-content" autocomplete="off">
<!-- Example Dropdown Section -->
<div id="example-dropdown-container" style="margin-bottom: 1rem; padding-bottom: 0.75rem; border-bottom: 1px solid #e5e7eb;">
<label for="example-select" style="margin-bottom: 0.5rem;">Load Example Address:</label>
<select id="example-select" name="exampleSelect" class="form-select">
<option value="" selected disabled>-- Select an Example --</option>
<option value="google">Valid Address</option>
<option value="nonExistentSubpremise">Non-existent Subpremise</option>
<option value="missingSubpremise">Missing Subpremise</option>
<option value="misspelledLocality">Misspelled Locality</option>
<option value="missingLocality">Missing Locality</option>
<option value="usPoBox">US PO Box</option>
</select>
</div>
<div>
<label for="street-address-1">Street Address 1</label>
<input
id="street-address-1"
name="streetAddress1"
type="text"
placeholder="e.g., 1600 Amphitheatre Parkway"
/>
</div>
<div>
<label for="street-address-2">Street Address 2 (Optional)</label>
<input
id="street-address-2"
name="streetAddress2"
type="text"
placeholder="e.g., Suite 100"
/>
</div>
<!-- Use a div with grid class for City/State/ZIP layout -->
<div class="form-grid-triple">
<div>
<label for="city">City</label>
<input id="city" name="city" type="text" placeholder="e.g., Mountain View" />
</div>
<div>
<label for="state">State or territory</label>
<input id="state" name="state" type="text" placeholder="e.g., CA" />
</div>
<div>
<label for="zip-code">ZIP Code</label>
<input id="zip-code" name="zipCode" type="text" placeholder="e.g., 94043" />
</div>
</div>
<div id="region-select-container">
<div>
<label for="region-select">Region</label>
<select id="region-select" name="regionSelect" class="form-select">
<option value="AR">Argentina</option>
<option value="AU">Australia</option>
<option value="AT">Austria</option>
<option value="BE">Belgium</option>
<option value="BR">Brazil</option>
<option value="BG">Bulgaria</option>
<option value="CA">Canada</option>
<option value="CL">Chile</option>
<option value="CO">Colombia</option>
<option value="HR">Croatia</option>
<option value="CZ">Czechia</option>
<option value="DK">Denmark</option>
<option value="EE">Estonia</option>
<option value="FI">Finland</option>
<option value="FR">France</option>
<option value="DE">Germany</option>
<option value="HU">Hungary</option>
<option value="IN">India</option>
<option value="IE">Ireland</option>
<option value="IT">Italy</option>
<option value="JP">Japan</option>
<option value="LV">Latvia</option>
<option value="LT">Lithuania</option>
<option value="LU">Luxembourg</option>
<option value="MY">Malaysia</option>
<option value="MX">Mexico</option>
<option value="NL">Netherlands</option>
<option value="NO">Norway</option>
<option value="NZ">New Zealand</option>
<option value="PL">Poland</option>
<option value="PT">Portugal</option>
<option value="PR">Puerto Rico</option>
<option value="SG">Singapore</option>
<option value="SK">Slovakia</option>
<option value="SI">Slovenia</option>
<option value="ES">Spain</option>
<option value="SE">Sweden</option>
<option value="CH">Switzerland</option>
<option value="GB">United Kingdom</option>
<option value="US" selected>United States</option>
<option value="">Unknown</option>
</select>
</div>
</div>

<button id="validate-button" type="submit">Validate Address</button>

<button id="clear-form-button" type="button" event="handleClearForm">Clear Form</button>

<!-- Result Display Area -->
<div id="result-container">
<label for="result-display">Validation Result (formatted address and JSON)</label>
<pre id="result-display">Result will appear here...</pre>
</div>
</form>
</div>
<!-- prettier-ignore -->
<script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
({key: "AIzaSyA6myHzS10YXdcazAFalmXvDkrYCp5cLc8", v: "beta"});</script>
</body>
</html>index.html [https://github.com/googlemaps-samples/js-api-samples/blob/0d5082442c946b49c63fad167fbf475f41a54504/dist/samples/address-validation/docs/index.html#L8-L134]

샘플 사용해 보기

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps-samples/js-api-samples/tree/main/dist/samples/address-validation/jsfiddle]

의견 보내기