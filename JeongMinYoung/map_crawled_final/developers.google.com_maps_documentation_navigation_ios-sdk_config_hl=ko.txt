Source URL: https://developers.google.com/maps/documentation/navigation/ios-sdk/config?hl=ko
Title: 프로젝트 설정

의견 보내기

프로젝트 설정

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 가이드에 따라 iOS용 Navigation SDK를 iOS 앱에 통합합니다.

기본 요건

iOS용 Navigation SDK를 사용하려면 결제 계정이 있고 iOS용 Maps SDK [https://developers.google.com/maps/documentation/ios-sdk?hl=ko]가 사용 설정된 프로젝트가 필요합니다. 프로젝트 소유자와 결제 관리자를 여러 명 만들어 이러한 역할을 맡은 담당자가 팀에 상주하도록 하는 것이 좋습니다. 자세한 내용은 Google Cloud 프로젝트 설정 [https://developers.google.com/maps/documentation/ios-sdk/cloud-setup?hl=ko]을 참조하세요.
iOS용 Navigation SDK를 사용하여 프로젝트를 빌드하려면 Xcode Xcode [https://developer.apple.com/xcode/] 이상이 필요합니다.
내비게이션 SDK의 최소 타겟 iOS 버전은 15.0입니다.

1단계: SDK 설치하기

Swift Package Manager

Navigation SDK는 Swift Package Manager [https://developer.apple.com/documentation/xcode/swift-packages]를 통해 설치할 수 있습니다. SDK를 추가하려면 기존 Navigation SDK 종속 항목을 삭제했는지 확인하세요.

중요: 이 안내에서는 Xcode 15 이상을 사용한다고 가정하지만 이전 버전의 Xcode에서도 비슷해야 합니다.

새 프로젝트 또는 기존 프로젝트에 SDK를 추가하려면 다음 단계를 따르세요.

Xcode project 또는 workspace를 열고 File(파일) > Add Package Dependencies(패키지 종속 항목 추가)로 이동합니다.

URL로 https://github.com/googlemaps/ios-navigation-sdk [https://github.com/googlemaps/ios-navigation-sdk]를 입력하고 Enter 키를 눌러 패키지를 가져온 후 'Add Package'를 클릭합니다.

특정 version를 설치하려면 종속 항목 규칙 필드를 버전 기반 옵션 중 하나로 설정합니다. 새 프로젝트의 경우 최신 버전을 지정하고 '정확한 버전' 옵션을 사용하는 것이 좋습니다. 완료되면 'Add Package'를 클릭합니다.

Choose Package Products 창에서 GoogleNavigation이 지정된 main 타겟에 추가되는지 확인합니다. 완료되면 'Add Package'를 클릭합니다.

설치를 확인하려면 대상의 General 창으로 이동합니다.
프레임워크, 라이브러리 및 삽입된 콘텐츠에서 설치된 패키지를 확인할 수 있습니다.
'Project Navigator'의 'Package Dependencies' 섹션에서 패키지와 버전을 확인할 수도 있습니다.

기존 프로젝트의 package를 업데이트하려면 다음 단계를 따르세요.

9.0.0 이전 버전에서 업그레이드하는 경우 업그레이드 후 GoogleMapsBase, GoogleMapsCore, GoogleMapsM4B 종속 항목을 삭제해야 합니다. GoogleMaps의 종속 항목을 삭제하지 마세요. 자세한 내용은 버전 9.0.0 출시 노트 [https://developers.google.com/maps/documentation/ios-sdk/release-notes?hl=ko#May_20_2024]를 참고하세요.

Xcode 프로젝트 구성 설정에서 프레임워크, 라이브러리 및 삽입된 콘텐츠를 찾습니다. 빼기 기호(-)를 사용하여 다음 프레임워크를 삭제합니다.

GoogleMapsBase (9.0.0 이전 버전에서 업그레이드하는 경우에만)
GoogleMapsCore (9.0.0 이전 버전에서 업그레이드하는 경우에만)
GoogleMapsM4B (9.0.0 이전 버전에서 업그레이드하는 경우에만)

Xcode에서 'File(파일) > Packages(패키지) > Update To Latest Package Versions(최신 패키지 버전으로 업데이트)'로 이동합니다.

설치를 확인하려면 Project Navigator의 Package Dependencies 섹션으로 이동하여 패키지와 버전을 확인하세요.

중요: 아티팩트를 해결할 수 없거나 오류가 발생할 수 있습니다. 이 경우 'File > Packages > Reset Package Cache'를 선택하세요.

CocoaPods를 사용하여 추가된 기존 Navigation SDK 종속 항목을 삭제하려면 다음 단계를 따르세요.

Xcode 작업공간을 닫습니다. 터미널을 열고 다음 명령어를 실행합니다.
sudo gem install cocoapods-deintegrate cocoapods-clean
pod deintegrate
pod cache clean --all

Podfile, Podfile.resolved, Xcode workspace를 CocoaPods 외에 다른 용도로 사용하지 않는다면 삭제합니다.

수동으로 설치된 기존 iOS용 Navigation SDK를 삭제하려면 다음 단계를 따르세요.

Xcode 프로젝트 구성 설정에서 프레임워크, 라이브러리 및 삽입된 콘텐츠를 찾습니다. 빼기 기호(-)를 사용하여 다음 프레임워크를 삭제합니다.

GoogleMaps.xcframework
GoogleMapsBase.xcframework
GoogleMapsCore.xcframework
GoogleNavigation.xcframework

Xcode 프로젝트의 최상위 디렉터리에서 GoogleMaps 번들을 삭제합니다.

CocoaPods
iOS용 Navigation SDK는 CocoaPods [https://cocoapods.org/] 포드로 제공됩니다.
CocoaPods는 Swift 및 Objective-C Cocoa 프로젝트용 오픈소스 종속 항목 관리자입니다.

아직 CocoaPods 도구가 없으면 터미널에서 다음 명령어를 실행하여 macOS에 CocoaPods 도구를 설치합니다. 자세한 내용은
CocoaPods
시작 가이드 [https://guides.cocoapods.org/using/getting-started.html]를 참고하세요.

sudo gem install cocoapods

iOS용 Navigation SDK의 Podfile를 만들고 이를 사용하여 API와 종속 항목을 설치합니다.

아직 Xcode 프로젝트가 없으면 지금 만들어 로컬 머신에 저장합니다. iOS 개발이 처음인 경우:

새 프로젝트를 만듭니다.
iOS > App 템플릿을 선택합니다.
프로젝트 옵션 화면에서 다음을 수행합니다.

Project Name(프로젝트 이름)을 입력합니다.
번들 식별자 필드의 값을 기록합니다.
이 값을 사용하여 아래에서 API 키를 제한할 수 있습니다.
프로젝트 Interface를 Storyboard로 설정합니다.
Language를 Swift 또는 Objective-C로 설정합니다.

프로젝트 디렉터리에 Podfile 파일을 만듭니다. 이 파일은 프로젝트의 종속 항목을 정의합니다.

Podfile을 수정하고 versions [https://guides.cocoapods.org/using/the-podfile.html#specifying-pod-versions]과 함께 종속 항목을 추가합니다.
다음은 iOS용 Navigation SDK에 필요한 종속 항목이 포함된 예입니다.

# Cocoapods 설치 참조 #
source 'https://github.com/CocoaPods/Specs.git'

platform :ios, '15.0'

target 'YOUR_APPLICATION_TARGET_NAME_HERE' do
pod 'GoogleNavigation', '9.0.0'
end

정기적으로 pod outdated를 실행하여 최신 버전을 감지해야 합니다. 필요한 경우 최신 버전으로 업그레이드 [https://developers.google.com/maps/documentation/ios-sdk/versions?hl=ko#maintenance]하세요.

Podfile을 저장합니다.
터미널을 열고 Podfile가 포함된 디렉터리로 이동합니다.
cd <path-to-project>
pod install 명령어를 실행합니다. 이렇게 하면 Podfile에 지정된 API와 종속 항목이 설치됩니다.

pod install
Xcode를 닫은 다음 프로젝트의 .xcworkspace 파일을 (더블클릭하여) 열어 Xcode를 실행합니다. 이 때부터는 .xcworkspace 파일을 사용하여 프로젝트를 열어야 합니다.

기존 프로젝트의 API를 업데이트하려면 다음 단계를 따르세요.

터미널을 열고 Podfile가 포함된 프로젝트 디렉터리로 이동합니다.
pod update 명령어를 실행합니다. 이렇게 하면 Podfile에 지정된 모든 API가 최신 버전으로 업데이트됩니다.

수동 설치
이 가이드에서는 iOS용 Navigation SDK와 iOS용 Maps SDK [https://developers.google.com/maps/documentation/ios-sdk?hl=ko]가 포함된 XCFrameworks를 프로젝트에 수동으로 추가하고 Xcode에서 빌드 설정을 구성하는 방법을 설명합니다. XCFramework는 M1 칩셋을 사용하는 머신을 포함하여 여러 플랫폼에서 사용할 수 있는 바이너리 패키지입니다.

iOS용 Navigation SDK 및 iOS용 Maps SDK를 위한 XCFrameworks를 설치하려면 다음 단계를 따르세요.

다음 SDK 바이너리 및 리소스 파일을 다운로드합니다.

GoogleMaps [https://dl.google.com/geosdk/swiftpm/9.0.0/GoogleMaps_3p.xcframework.zip?hl=ko]
GoogleMapsBase [https://dl.google.com/geosdk/swiftpm/9.0.0/GoogleMapsBase_3p.xcframework.zip?hl=ko]
GoogleMapsCore [https://dl.google.com/geosdk/swiftpm/9.0.0/GoogleMapsCore_3p.xcframework.zip?hl=ko]
GoogleMapsResources [https://dl.google.com/geosdk/swiftpm/9.0.0/GoogleMapsResources.zip?hl=ko]
GoogleNavigation [https://dl.google.com/geosdk/swiftpm/9.0.0/GoogleNavigation_3p.xcframework.zip?hl=ko]
GoogleNavigationResources [https://dl.google.com/geosdk/swiftpm/9.0.0/GoogleNavigationResources.zip?hl=ko]

Xcode를 실행하고 기존 프로젝트를 열거나 새 프로젝트를 만듭니다. iOS를 처음 사용하는 경우 새 프로젝트를 만들고 iOS 앱 템플릿을 선택합니다.
프로젝트에서 기존의 모든 지도, 내비게이션 및 장소 참조를 삭제합니다.

중요: iOS용 Places SDK는 iOS용 Navigation SDK에 포함되어 있지 않으므로 별도로 설치해야 합니다. 이는 iOS용 Places SDK 버전 5.0부터 적용됩니다. iOS용 Places SDK와 iOS용 Navigation SDK의 동일한 버전을 다운로드하고 설치하는 것이 좋습니다. iOS용 Places SDK 설치 [https://developers.google.com/maps/documentation/places/ios-sdk/start?hl=ko]를 참고하세요.

다음 XCFrameworks를 프레임워크, 라이브러리 및 삽입된 콘텐츠 아래의 프로젝트로 드래그하여 지도 및 Navigation SDK를 모두 설치합니다 (메시지가 표시되면 필요한 경우 항목 복사 선택).

GoogleMaps.xcframework
GoogleMapsBase.xcframework
GoogleMapsCore.xcframework
GoogleNavigation.xcframework

다운로드한 GoogleMapsResources에서 GoogleMaps.bundle를 Xcode 프로젝트의 최상위 디렉터리로 드래그합니다. 메시지가 표시되면 필요한 경우 항목 복사가 선택되어 있는지 확인합니다.

다운로드한 GoogleNavigationResources에서 GoogleNavigation.bundle를 Xcode 프로젝트의 최상위 디렉터리로 드래그합니다. 메시지가 표시되면 항목을 대상 그룹 폴더에 복사가 선택되어 있는지 확인합니다.
Project Navigator에서 프로젝트를 선택하고 애플리케이션의 대상을 선택합니다.
Build 단계 탭을 열고 바이너리를 라이브러리와 연결 내에 다음 프레임워크와 라이브러리를 추가합니다.
Accelerate.framework
AudioToolbox.framework
AVFoundation.framework
Contacts.framework
CoreData.framework
CoreGraphics.framework
CoreImage.framework
CoreLocation.framework
CoreTelephony.framework
CoreText.framework
GLKit.framework
ImageIO.framework
libc++.tbd
libxml2.tbd
libz.tbd
Metal.framework
OpenGLES.framework
QuartzCore.framework
Security.framework
SystemConfiguration.framework
UIKit.framework
UserNotifications.framework
WebKit.framework

애플리케이션의 대상에서 Capabilities 탭을 선택하고 Background Modes를 켜고 다음 모드를 사용 설정합니다.
오디오, AirPlay, PIP 모드
위치 업데이트

특정 타겟 대신 프로젝트를 선택하고 Build Settings 탭을 엽니다. Other Linker Flags 섹션에서 debug와 release 모두 ‑ObjC를 추가합니다.
이러한 설정이 표시되지 않으면 Build Settings 표시줄의 필터를 Basic에서 All로 변경합니다.
Info.plist를 열고 다음 키-값 쌍을 추가합니다.

키: NSLocationWhenInUseUsageDescription (개인 정보 보호 - 사용 중인 위치 설명)
값: "이 앱에서 세부 경로 안내 내비게이션을 위해 위치를 사용하려면 권한이 필요합니다."

키: NSLocationAlwaysAndWhenInUseUsageDescription (개인 정보 보호 - 항상 위치 및 사용 시 사용 설명)
값: "이 앱에서 세부 경로 안내 내비게이션을 위해 위치를 사용하려면 권한이 필요합니다."

2단계: Apple 개인 정보 보호 매니페스트 파일 검사하기

Apple은 App Store의 앱에 대한 앱 개인 정보 보호 세부정보를 요구합니다. 업데이트 및 자세한 내용은 Apple App Store 개인 정보 보호 세부정보 페이지 [https://developers.google.com/maps/documentation/ios-sdk/apple-privacy-policy?hl=ko]를 참고하세요.

Apple 개인 정보 보호 매니페스트 파일은 SDK의 리소스 번들에 포함되어 있습니다. 개인 정보 보호 매니페스트 파일이 포함되었는지 확인하고 콘텐츠를 검사하려면 앱의 보관 파일을 만들고 보관 파일에서 개인 정보 보호 보고서를 생성 [https://developer.apple.com/documentation/bundleresources/privacy_manifest_files/describing_data_use_in_privacy_manifests#4239187]하세요.

3단계: 프로젝트에 API 키 추가

다음 예는 Xcode에서 프로젝트에 API 키를 추가하는 방법을 보여줍니다.

Swift

다음과 같이 API 키를 AppDelegate.swift에 추가합니다.

다음 import 문을 추가합니다.
import GoogleMaps
import GoogleNavigation
application(_:didFinishLaunchingWithOptions:) 메서드에 다음을 추가합니다.
GMSServices.provideAPIKey("YOUR_API_KEY")

Objective-C

다음과 같이 API 키를 AppDelegate.m에 추가합니다.

다음 import 문을 추가합니다.
@import GoogleMaps;
@import GoogleNavigation;
application:didFinishLaunchingWithOptions: 메서드에 다음을 추가합니다.
[GMSServices provideAPIKey:@"YOUR_API_KEY"];

4단계: 지도 추가하기

이 코드는 탐색을 위한 초기 설정을 포함하여 기존 ViewController에 간단한 지도를 추가하는 방법을 보여줍니다.

사용자가 이용약관에 동의해야 탐색을 사용 설정할 수 있습니다. 사용자에게 메시지를 표시하려면 GMSNavigationServices.showTermsAndConditionsDialogIfNeeded()를 호출한 다음 약관에 동의했는지 확인합니다. 사용자가 약관을 거부하면 mapView.isNavigationEnabled = true는 아무런 영향을 미치지 않고 mapView.navigator는 nil이 됩니다.

Swift
import UIKit
import GoogleNavigation

class ViewController: UIViewController {

locationManager.requestAlwaysAuthorization()

GMSNavigationServices.showTermsAndConditionsDialogIfNeeded(
withCompanyName: companyName) { termsAccepted in
if termsAccepted {
Objective-C
#import "ViewController.h"
@import GoogleNavigation;

@interface ViewController ()
@end

@implementation ViewController
GMSMapView *_mapView;
CLLocationManager *_locationManager;

-   (void)loadView {

_locationManager = [[CLLocationManager alloc] init];
[_locationManager requestAlwaysAuthorization];

GMSCameraPosition *camera = [GMSCameraPosition cameraWithLatitude:47.67
longitude:-122.20

NSString *companyName = @"Ride Sharing Co.";
[GMSNavigationServices
showTermsAndConditionsDialogIfNeededWithCompanyName:companyName
callback:^(BOOL termsAccepted) {
if (termsAccepted) {