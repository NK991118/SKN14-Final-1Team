Source URL: https://developers.google.com/maps/documentation/ios-sdk/dds-datasets/start?hl=ko
Title: 시작하기

의견 보내기

시작하기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/android-sdk/dds-datasets/start?hl=ko]

iOS [https://developers.google.com/maps/documentation/ios-sdk/dds-datasets/start?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/dds-datasets/start?hl=ko]

데이터 세트를 위한 데이터 기반 스타일 지정으로 설정하려면 다음 단계를 따르세요.

API 키 가져오기 및 API 사용 설정

데이터 세트를 위해 데이터 기반 스타일 지정을 사용하려면 결제 계정이 있는 Cloud 프로젝트가 있어야 하고 iOS용 Maps SDK와 Maps Datasets API가 모두 사용 설정되어 있어야 합니다. 자세한 내용은 다음을 참고하세요.

Google Cloud 프로젝트 설정 [https://developers.google.com/maps/documentation/ios-sdk/cloud-setup?hl=ko]
iOS용 Maps SDK 사용 설정 및 API 키 가져오기 [https://developers.google.com/maps/documentation/ios-sdk/get-api-key?hl=ko]
Maps Datasets API 사용 설정 [https://console.cloud.google.com/apis/library/mapsplatformdatasets.googleapis.com?hl=ko]

지도 ID 만들기

지도 ID [https://developers.google.com/maps/documentation/get-map-id?hl=ko]는 Google 지도 사양을 나타내는 고유 식별자입니다. Google Cloud 콘솔에서 언제든지 지도 ID를 만들고 지도 ID와 연결된 스타일을 업데이트할 수 있습니다.

새 지도 스타일 만들기

새 지도 스타일을 만들려면 지도 스타일 만들기 및 사용 [https://developers.google.com/maps/documentation/ios-sdk/cloud-customization/map-styles?hl=ko]의 안내에 따라 스타일을 만드세요. 완료되면 새로 만든 지도 ID와 스타일을 연결합니다.

지도 초기화 코드 업데이트

이 단계에서는 하나 이상의 지형지물 레이어가 사용 설정된 스타일과 연결된 지도 ID가 필요합니다. Cloud 콘솔에서 지도 ID가 올바르게 설정되었는지 확인하려면 지도 관리 [https://console.cloud.google.com/google/maps-apis/studio/maps?hl=ko]에서 구성된 방식을 검토하세요.

Swift
Objective-C
GMSMapID *mapID = [GMSMapID mapIDWithIdentifier:@"MAP_ID"];
GMSMapView *mapView = [GMSMapView mapWithFrame:CGRectZero mapID:mapID camera:[GMSCameraPosition cameraWithLatitude:40 longitude:-80 zoom:7]];

중요: 연결된 지도 스타일이 있는 지도 ID가 클라이언트에 데이터 세트를 로드하는 데 필요하므로 데모 지도 ID를 사용할 수 없습니다.
지도 기능 확인

데이터 세트를 위한 데이터 기반 스타일 지정에는 Google Cloud 콘솔에서 사용 설정되고 지도 ID와 연결된 기능이 필요합니다. 지도 ID는 변경될 수 있으므로 GMSMapView [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Classes/GMSMapView?hl=ko]에서 mapView.mapCapabilities [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Classes/GMSMapView?hl=ko#mapcapabilities]를 호출하여 특정 기능 (예: 데이터 기반 스타일 지정)을 호출하기 전에 사용할 수 있는지 확인할 수 있습니다.

GMSViewDelegate [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Protocols/GMSMapViewDelegate?hl=ko]를 구독하여 지도 기능의 변경사항을 감지할 수도 있습니다.
이 예에서는 프로토콜을 사용하여 데이터 기반 스타일 지정 요구사항을 확인하는 방법을 보여줍니다.

Swift
class SampleViewController: UIViewController {

private lazy var mapView: GMSMapView = GMSMapView(frame: .zero, mapID: GMSMapID(identifier: "YOUR_MAP_ID"), camera: GMSCameraPosition(latitude: 40, longitude: -80, zoom: 7))

override func loadView() {
self.view = mapView
mapView.delegate = self
Objective-C
@interface SampleViewController: UIViewController <GMSMapViewDelegate>
@end

@implementation SampleViewController
- (void)loadView {
GMSMapView *mapView = [GMSMapView mapWithFrame:CGRectZero mapID:[GMSMapID mapIDWithIdentifier:@"MAP_ID"] camera:[GMSCameraPosition cameraWithLatitude:40 longitude:-80 zoom:7]];
mapView.delegete = self;
self.view = mapView;