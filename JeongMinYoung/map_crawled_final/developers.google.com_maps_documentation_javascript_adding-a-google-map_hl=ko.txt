Source URL: https://developers.google.com/maps/documentation/javascript/adding-a-google-map?hl=ko
Title: JavaScript를 사용하여 마커가 포함된 Google 지도 추가

의견 보내기

JavaScript를 사용하여 마커가 포함된 Google 지도 추가

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

소개

이 튜토리얼에서는 마커가 포함된 간단한 Google 지도를 웹페이지에 추가하는 방법을 설명합니다. 이 방법은 HTML 및 CSS에 관한 초급 또는 중급 수준의 지식과 JavaScript에 관한 약간의 지식이 있는 사용자에게 적합합니다.

이 튜토리얼을 사용하여 아래와 같은 지도를 만듭니다. 마커가 울루루 카타츄타 국립공원의 울루루 [https://en.wikipedia.org/wiki/Uluru](에어스 록이라고도 함)에 배치되어 있습니다.

시작하기

웹페이지에 마커가 포함된 Google 지도를 만들려면 다음 세 단계를 따르세요.

API 키 가져오기 [https://developers.google.com/maps/documentation/javascript/adding-a-google-map?hl=ko#key]
HTML 페이지 만들기 [https://developers.google.com/maps/documentation/javascript/adding-a-google-map?hl=ko#page]
마커가 포함된 지도 추가 [https://developers.google.com/maps/documentation/javascript/adding-a-google-map?hl=ko#map]

웹브라우저가 필요합니다. 지원되는 브라우저 목록 [https://developers.google.com/maps/documentation/javascript/browsersupport?hl=ko]에서 플랫폼에 따라 Chrome(권장), Firefox, Safari, Edge와 같이 잘 알려진 브라우저를 선택하세요.

1단계: API 키 가져오기

이 섹션에서는 자체 API 키를 사용하여 Maps JavaScript API에 앱을 인증하는 방법을 설명합니다.

다음 단계에 따라 API 키를 가져옵니다.

Google Cloud 콘솔 [https://console.cloud.google.com/project/_/google/maps-apis/overview?hl=ko]로 이동합니다.
프로젝트를 만들거나 선택합니다.
계속을 클릭하여 API와 모든 관련 서비스를 사용 설정합니다.
사용자 인증 정보 페이지에서 API 키를 가져오고 API 키 제한사항을 설정합니다. 기존에 무제한 API 키가 있거나 브라우저 제한이 있는 키가 있으면 그 키를 사용할 수도 있습니다.
할당량 도난을 방지하고 API 키를 보호하려면 API 키 사용 [https://cloud.google.com/docs/authentication/api-keys?hl=ko]을 참고하세요.
결제를 사용 설정합니다. 자세한 내용은 사용량 및 결제 [https://developers.google.com/maps/documentation/javascript/usage-and-billing?hl=ko]를 참고하세요.
API 키를 받으면 'YOUR_API_KEY'를 클릭하여 다음 스니펫에 추가합니다. 자체 웹페이지에서 사용할 부트 로더 스크립트 태그를 복사하여 붙여넣습니다.

<script>
(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
key: "YOUR_API_KEY",
v: "weekly",
Copyright 2019 Google LLC. All Rights Reserved.
SPDX-License-Identifier: Apache-2.0
-->
<html>
<head>
<title>Add Map</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<h3>My Google Maps Demo</h3>
<!--The div element for the map -->
<div id="map"></div>

<!-- prettier-ignore -->
<script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
({key: "AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg", v: "weekly"});</script>
</body>
</html>
index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/add-map/docs/index.html]

이 페이지는 제목 수준 3(h3)과 단일 div 요소가 있는 매우 기본적인 페이지입니다. 원하는 콘텐츠를 웹페이지에 추가할 수 있습니다.

코드 이해하기

이 단계의 예시에는 다음이 있습니다.

!DOCTYPE html 선언을 사용하여 애플리케이션을 HTML5로 선언했습니다.
지도를 보관할 'map'이라는 div 요소를 만들었습니다.
부트스트랩 로더를 사용하여 Maps JavaScript API를 로드했습니다.

애플리케이션을 HTML5로 선언

웹 애플리케이션 내에서 실제 DOCTYPE을 선언하는 것이 좋습니다.
이 예에서는 아래에 표시된 것처럼 간단한 HTML5 DOCTYPE을 사용하여 애플리케이션을 HTML5로 선언했습니다.

<!DOCTYPE html>

대부분의 최신 브라우저에서는 '표준 모드'에서 이 DOCTYPE을 사용하여 선언된 콘텐츠를 렌더링합니다. 즉 애플리케이션의 브라우저 간 호환성이 더 높아집니다. 또한 DOCTYPE은 성능 저하를 매끄럽게 처리하도록 설계되어, DOCTYPE을 인식하지 못하는 브라우저는 이를 무시하고 '쿼크 모드'를 사용하여 콘텐츠를 표시합니다.

쿼크 모드에서 작동하는 일부 CSS는 표준 모드에서 유효하지 않습니다. 특히 모든 백분율 기반 크기는 상위 블록 요소에서 상속해야 하며 상위 요소에서 크기를 지정하지 못하면 0x0픽셀로 간주됩니다. 이러한 이유로 다음과 같은 style 선언이 포함됩니다.

<style>

웹페이지에 지도를 표시하려면 표시할 자리를 예약해야 합니다. 일반적으로 이름이 지정된 div 요소를 만들고 브라우저의 문서 객체 모델 (DOM)에서 이 요소에 대한 참조를 얻는 방식으로 자리를 예약합니다.

아래 코드는 Google 지도를 위한 페이지 영역을 정의합니다.

<!--The div element for the map -->
<div id="map"></div>

이 단계에서는 아직 지도를 추가하지 않았으므로 div가 회색 블록으로 표시됩니다. 아래 코드는 div의 크기 및 색상을 설정하는 CSS를 설명합니다.

Maps JavaScript API 로드하기

부트스트랩 로더는 로딩을 위해 Maps JavaScript API를 준비합니다(importLibrary()가 호출될 때까지 라이브러리가 로드되지 않습니다).

<script>
(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
key: "YOUR_API_KEY",
v: "weekly",
const { AdvancedMarkerElement } = await google.maps.importLibrary("marker") as google.maps.MarkerLibrary;

const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

AdvancedMarkerElement를 만들어 지도에 마커를 추가했습니다.

지도 추가

아래 코드는 새로운 Google 지도 객체를 생성하고 중심 및 확대/축소 수준을 포함한 속성을 지도에 추가합니다. 기타 속성 옵션 [https://developers.google.com/maps/documentation/javascript/reference?hl=ko#MapOptions]에 대해서는 문서를 참고하세요.

TypeScript
const { AdvancedMarkerElement } = await google.maps.importLibrary("marker") as google.maps.MarkerLibrary;

const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

const { AdvancedMarkerElement } = await google.maps.importLibrary("marker") as google.maps.MarkerLibrary;

const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

/*
* Always set the map height explicitly to define the size of the div element
* that contains the map.
*/
body {
<html>
<head>
<title>Add Map</title>

<link rel="stylesheet" type="text/css" href="./style.css" />
<script type="module" src="./index.js"></script>
</head>
<body>
<h3>My Google Maps Demo</h3>
<!--The div element for the map -->
<div id="map"></div>

<!-- prettier-ignore -->
<script>(g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
({key: "AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg", v: "weekly"});</script>
</body>
</html>index.html [https://github.com/googlemaps/js-samples/blob/2683f7366fb27829401945d2a7e27d77ed2df8e5/dist/samples/add-map/docs/index.html#L8-L28]

샘플 사용해 보기

JSFiddle.net [https://jsfiddle.net/gh/get/library/pure/googlemaps/js-samples/tree/master/dist/samples/add-map/jsfiddle]

Google Cloud Shell [https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https%3A%2F%2Fgithub.com%2Fgooglemaps%2Fjs-samples&cloudshell_git_branch=sample-add-map&cloudshell_tutorial=cloud_shell_instructions.md&cloudshell_workspace=.&hl=ko]

마커에 대해 자세히 알아보기:

마커에 접근성 기능 추가 [https://developers.google.com/maps/documentation/javascript/markers?hl=ko#accessible]
그래픽 아이콘이 있는 마커 [https://developers.google.com/maps/documentation/javascript/advanced-markers/graphic-markers?hl=ko]
마커 애니메이션 [https://developers.google.com/maps/documentation/javascript/advanced-markers/accessible-markers?hl=ko]

도움말 및 문제 해결

위도/경도 좌표를 가져오거나 주소를 지리적 좌표로 변환 [https://developers.google.com/maps/documentation/javascript/adding-a-google-map?hl=ko#get_latLng]하는 방법을 자세히 알아보세요.
스타일, 속성 등의 옵션을 조정하여 지도를 맞춤설정할 수 있습니다. 지도 맞춤설정에 관한 자세한 내용은 스타일 지정 [https://developers.google.com/maps/documentation/javascript/styling?hl=ko]
및 지도에 그리기 [https://developers.google.com/maps/documentation/javascript/overlays?hl=ko] 가이드를 참고하세요.
웹브라우저에서 개발자 도구 콘솔을 사용하여 코드를 테스트 및 실행하고 오류 보고서를 읽고 코드 관련 문제를 해결합니다.
다음 단축키를 사용하여 Chrome에서 콘솔을 엽니다.
Command+Option+J(Mac) 또는 Control+Shift+J(Windows)
아래 단계에 따라 Google 지도에서 위치의 위도 및 경도 좌표를 가져옵니다.

브라우저에서 Google 지도를 엽니다.
지도에서 좌표가 필요한 정확한 위치를 마우스 오른쪽 버튼으로 클릭합니다.
표시되는 컨텍스트 메뉴에서 이곳이 궁금한가요?를 선택합니다.
지도의 하단에 카드가 표시됩니다. 카드의 마지막 행에서 위도 및 경도 좌표를 찾습니다.

지오코딩 서비스를 사용하여 주소를 위도 및 경도 좌표로 변환할 수 있습니다. 개발자 가이드에서는 지오코딩 서비스 시작하기 [https://developers.google.com/maps/documentation/javascript/geocoding?hl=ko#GetStarted]에 관한 자세한 정보를 제공합니다.

의견 보내기