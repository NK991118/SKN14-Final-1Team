Source URL: https://developers.google.com/maps/documentation/ios-sdk/advanced-markers/add-marker?hl=ko
Title: 고급 마커 만들기

의견 보내기

고급 마커 만들기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/android-sdk/advanced-markers/add-marker?hl=ko]

iOS [https://developers.google.com/maps/documentation/ios-sdk/advanced-markers/add-marker?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/advanced-markers/add-marker?hl=ko]

GMSAdvancedMarker [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Classes/GMSAdvancedMarker?hl=ko] 서브클래스를 사용하여 아래와 같이 기본 또는 특정 마커 기능을 만듭니다. GMSMarker [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Classes/GMSMarker?hl=ko]의 서브클래스인 GMSAdvancedMarker는 더 많은 표현식이 있는 마커를 제공합니다.

Swift

Objective-C
GMSCameraPosition *camera = [GMSCameraPosition cameraWithTarget:kCoordinate zoom:16];
GMSMapID *mapID = [GMSMapID mapIDWithIdentifier:"YOUR_MAP_ID"];

self.mapView = [GMSMapView mapWithFrame:self.view.bounds mapID:mapID camera:camera];

GMSAdvancedMarker *marker = [GMSAdvancedMarker markerWithPosition:kCoordinate];
Marker.map = self.mapView;

참고: 테스트의 경우 앱 코드에서 mapId: DEMO_MAP_ID를 사용하면 지도 ID [https://developers.google.com/maps/documentation/get-map-id?hl=ko]를 만들고 구성하는 단계를 건너뛸 수 있습니다. DEMO_MAP_ID는 테스트 용도로만 사용됩니다. 프로덕션 환경에서는 DEMO_MAP_ID를 사용하지 마세요.

고급 마커 삭제하기

GMSMarker [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Classes/GMSMarker?hl=ko]과 마찬가지로 GMSAdvancedMarker [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Classes/GMSAdvancedMarker?hl=ko]의 지도 속성을 nil로 설정하여 지도에서 고급 마커를 삭제할 수 있습니다. 또는 GMSMapView [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Classes/GMSMapView?hl=ko] clear 메서드를 호출하여 지도에서 모든 오버레이 (고급 마커 포함)를 삭제할 수 있습니다.

Swift

Objective-C
GMSCameraPosition *camera = [GMSCameraPosition cameraWithLatitude:-33.8683
longitude:151.2086

마커를 지도에 추가한 후 수정하려면 GMSAdvancedMarker [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Classes/GMSAdvancedMarker?hl=ko] 객체를 보유하고 있어야 합니다. 그러면 나중에 이 개체를 변경하여 마커를 수정할 수 있습니다.

Swift

Objective-C
CLLocationCoordinate2D position = CLLocationCoordinate2DMake(10, 10);
GMSAdvancedMarker *marker = [GMSAdvancedMarker markerWithPosition:position];
marker.map = mapView;

지도 기능

GMSMapView [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Classes/GMSMapView?hl=ko]의 mapCapabilities 속성은 지도별 기능에 대한 프로그래매틱 검사를 추가합니다. 이는 특정 API를 호출하기 전에 특정 지도 기능을 사용할 수 있는지 확인하려는 경우에 유용합니다. GMSMapViewDelegate [https://developers.google.com/maps/documentation/ios-sdk/reference/objc/Protocols/GMSMapViewDelegate?hl=ko]의 didChangeMapCapabilities 함수도 기능이 변경될 때 호출 [https://developers.google.com/maps/documentation/ios-sdk/marker-gestures?hl=ko]됩니다.
이 쿼리는 지도 뷰가 고급 마커를 지원하는지 확인합니다.

Swift
Objective-C
_fallbackMarker = [GMSMarker markerWithPosition: kSeattleCoordinates];

-   (void)addMarker {

if (_mapView.mapCapabilities & GMSMapCapabilityFlagsAdvancedMarkers) {
_advancedMarker.map = _mapView;
BOOL advancedMarkersAvailable = mapCapabilities & GMSMapCapabilityFlagsAdvancedMarkers;
_advancedMarker.map = advancedMarkersAvailable ? _mapView : nil;
_fallbackMarker.map = advancedMarkersAvailable ? nil : _mapView;