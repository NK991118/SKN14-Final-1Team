Source URL: https://developers.google.com/maps/documentation/ios-sdk/dds-datasets/make-data-features-tappable?hl=ko
Title: 탭 이벤트 처리

의견 보내기

탭 이벤트 처리

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

플랫폼 선택:

Android [https://developers.google.com/maps/documentation/android-sdk/dds-datasets/make-data-features-clickable?hl=ko]

iOS [https://developers.google.com/maps/documentation/ios-sdk/dds-datasets/make-data-features-tappable?hl=ko]

JavaScript [https://developers.google.com/maps/documentation/javascript/dds-datasets/make-data-features-clickable?hl=ko]

데이터 지형지물이 탭 이벤트에 반응하도록 설정하고 이벤트를 사용하여 탭한 지형지물의 속성 값을 표시합니다.

중요: 보이지 않는 기능은 탭 이벤트를 트리거하지 않습니다. 다각형이 탭 가능하려면 최소 알파 값이 있어야 합니다.
데이터 세트 레이어 이벤트 처리

이 예시에서는 ID가 YOUR_DATASET_ID인 데이터 세트의 데이터 기능을 보여주고 delegate [https://developers.google.com/maps/documentation/ios-sdk/events?hl=ko] 함수를 구현하여 탭한 기능의 속성 값을 표시합니다.

이 예에서 데이터 세트는 뉴욕시의 공원 [https://data.cityofnewyork.us/Recreation/Parks-Properties/enfh-gkve]을 보여줍니다.
각 데이터 세트 기능(공원에 해당)에는 공원의 지표면을 포함하는 acres라는 속성이 포함됩니다. 탭한 공원의 경우 acres 속성 값을 표시합니다.

Swift
class SampleViewController: UIViewController {

private lazy var mapView: GMSMapView = GMSMapView(frame: .zero, mapID: GMSMapID(identifier: "YOUR_MAP_ID"), camera: GMSCameraPosition(latitude: 40.7, longitude: -74, zoom: 12))

Objective-C
@interface SampleViewController: UIViewController <GMSMapViewDelegate>
@end

@implementation SampleViewController
- (void)loadView {
GMSMapView *mapView = [GMSMapView mapWithFrame:CGRectZero mapID:[GMSMapID mapIDWithIdentifier:@"YOUR_MAP_ID"] camera:[GMSCameraPosition cameraWithLatitude:40.7 longitude:-74 zoom:12]];
mapView.delegete = self;

GMSFeatureStyle *style = [GMSFeatureStyle styleWithFillColor:[[UIColor greenColor] colorWithAlphaComponent:0.5] strokeColor:[UIColor greenColor] strokeWidth:2.0];
[_mapView datasetFeatureLayerOfDatasetID:@"YOUR_DATASET_ID"].style = ^(GMSDatasetFeature *feature) { return style; };

self.view = mapView;
NSMutableArray<NSString *> *parkAreas = [NSMutableArray array];

for (id<GMSFeature> feature in features) {
if (![feature isKindOfClass:[GMSDatasetFeature class]]) { continue; }
NSString *nameDefinedInDataset = ((GMSDatasetFeature *)feature).datasetAttributes[@"acres"];
[parkAreas addObject:nameDefinedInDataset];
UIAlertController *toast = [UIAlertController alertControllerWithTitle:@"Area of park" message:[parkAreas componentsJoinedByString:@", "] preferredStyle:UIAlertControllerStyleAlert];
[self presentViewController:toast animated:YES completion:nil];