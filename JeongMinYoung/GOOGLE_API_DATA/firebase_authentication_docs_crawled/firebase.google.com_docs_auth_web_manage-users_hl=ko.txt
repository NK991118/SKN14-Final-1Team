Source URL: https://firebase.google.com/docs/auth/web/manage-users?hl=ko
Title: Firebase에서 사용자 관리하기

의견 보내기

Firebase에서 사용자 관리하기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

사용자 생성

Firebase 프로젝트에서 신규 사용자를 생성할 때는 createUserWithEmailAndPassword [https://firebase.google.com/docs/auth/web/password-auth?hl=ko#create_a_password-based_account] 메서드를 호출하는 방법과 Google 로그인 [https://firebase.google.com/docs/auth/web/google-signin?hl=ko] 또는 Facebook 로그인 [https://firebase.google.com/docs/auth/web/facebook-login?hl=ko]과 같은 제휴 ID 공급업체를 이용해 사용자의 최초 로그인을 처리하는 방법이 있습니다.

또한 Firebase Console [https://console.firebase.google.com/?hl=ko] '인증' 섹션의 '사용자' 페이지에서 또는 Admin SDK [https://firebase.google.com/docs/auth/admin/manage-users?hl=ko#create_a_user]를 활용하여 비밀번호 인증을 사용하는 신규 사용자를 생성할 수 있습니다.

현재 로그인한 사용자 가져오기

현재 사용자를 가져올 때 권장하는 방법은 다음과 같이 Auth 개체에 관찰자를 설정하는 것입니다.

Web
import { getAuth, onAuthStateChanged } from "firebase/auth";

firebase.auth().onAuthStateChanged((user) => {
if (user) {

currentUser 속성을 사용하여 현재 로그인한 사용자를 가져올 수도 있습니다. 사용자가 로그인 상태가 아니라면 currentUser 값이 null입니다.

Web
import { getAuth } from "firebase/auth";

import { getAuth } from "firebase/auth";

import { getAuth } from "firebase/auth";

import { getAuth, updateProfile } from "firebase/auth";

Web
import { getAuth, updateEmail } from "firebase/auth";

Web
import { getAuth, sendEmailVerification } from "firebase/auth";

.then(() => {
firebase.auth().currentUser.sendEmailVerification()
.then(() => {
import { getAuth } from "firebase/auth";

firebase.auth().languageCode = 'it';

Web
import { getAuth, updatePassword } from "firebase/auth";

Web
import { getAuth, sendPasswordResetEmail } from "firebase/auth";

.then(() => {
firebase.auth().sendPasswordResetEmail(email)
.then(() => {
import { getAuth } from "firebase/auth";

firebase.auth().languageCode = 'it';

Web
import { getAuth, deleteUser } from "firebase/auth";

import { getAuth, reauthenticateWithCredential } from "firebase/auth";