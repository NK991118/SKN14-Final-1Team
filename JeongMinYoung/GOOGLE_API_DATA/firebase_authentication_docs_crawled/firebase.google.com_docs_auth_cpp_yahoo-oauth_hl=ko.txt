Source URL: https://firebase.google.com/docs/auth/cpp/yahoo-oauth?hl=ko
Title: Yahoo 및 C ++를 사용하여 인증

의견 보내기

Yahoo 및 C ++를 사용하여 인증

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

Firebase SDK를 통해 전체 로그인 과정을 수행하는 앱에 웹 기반의 일반 OAuth 로그인을 통합하여 사용자가 Yahoo와 같은 OAuth 제공업체를 통해 Firebase에 인증하도록 할 수 있습니다. 이 과정은 스마트폰 기반 Firebase SDK를 사용해야 하므로 Android 및 Apple 플랫폼에서만 지원됩니다.

시작하기 전에

C++ 프로젝트에 Firebase를 추가합니다. [https://firebase.google.com/docs/cpp/setup?hl=ko#note_select_platform]
Firebase Console [https://console.firebase.google.com/?hl=ko]에서 인증 섹션을 엽니다.
로그인 방법 탭에서 Yahoo 제공업체를 사용 설정합니다.
해당 제공업체의 개발자 콘솔에서 제공되는 클라이언트 ID 및 클라이언트 보안 비밀번호를 제공업체 구성에 추가합니다.

Yahoo OAuth 클라이언트를 등록하려면 Yahoo에 웹 애플리케이션을 등록하는 방법 [https://developer.yahoo.com/oauth2/guide/openid_connect/getting_started.html]에 대한 Yahoo 개발자 문서를 따릅니다.
OpenID Connect API 권한 2개(profile 및 email)를 선택해야 합니다.
이러한 제공업체에 앱을 등록할 때 프로젝트의 *.firebaseapp.com 도메인을 앱의 리디렉션 도메인으로 등록해야 합니다.

저장을 클릭합니다.

firebase::auth::Auth 클래스 액세스Auth 클래스는 모든 API 호출에 대한 게이트웨이입니다.
Auth 및 App 헤더 파일을 추가합니다.
#include "firebase/app.h"
#include "firebase/auth.h"

초기화 코드에서 firebase::App [https://firebase.google.com/docs/reference/cpp/class/firebase/app?hl=ko] 클래스를 만듭니다.#if defined(__ANDROID__)
firebase::App* app =
App과 Auth는 일대일 매핑 관계입니다.
Firebase SDK로 로그인 과정 처리하기

Firebase SDK로 로그인 과정을 처리하려면 다음 단계를 따르세요.

Yahoo에 적합한 제공업체 ID로 구성된 FederatedOAuthProviderData의 인스턴스를 생성합니다.
firebase::auth::FederatedOAuthProviderData
provider_data(firebase::auth::YahooAuthProvider::kProviderId);

선택사항: OAuth 요청과 함께 전송하고자 하는 커스텀 OAuth 매개변수를 추가로 지정합니다.

Yahoo가 지원하는 매개변수 정보는 Yahoo OAuth 문서 [https://developer.yahoo.com/oauth2/guide/openid_connect/getting_started.html]를 참조하세요.
Firebase에서 요구하는 매개변수는 custom_parameters()와 함께 전달할 수 없습니다. 이러한 매개변수에는 client_id, redirect_uri, response_type, scope, state가 있습니다.
선택사항: 인증 제공업체에서 요청하고자 하는 profile 및 email 범위를 넘는 OAuth 2.0 범위를 추가로 지정합니다. 애플리케이션에서 Yahoo API의 비공개 사용자 데이터에 대한 액세스가 필요한 경우 Yahoo 개발자 콘솔의 API 권한에서 Yahoo API에 대한 권한을 요청해야 합니다. 요청받은 OAuth 범위는 앱의 API 권한에서 사전 구성된 범위와 정확하게 일치해야 합니다. 예를 들어 사용자 연락처에 읽기/쓰기 액세스 권한이 요청되고 앱의 API 권한에서 사전 구성되었다면 읽기 전용 OAuth 범위 sdct-r 대신 sdct-w를 전달해야 합니다. 그렇지 않으면 과정이 실패하고 최종 사용자에게 오류가 표시됩니다.

자세한 내용은 Yahoo 범위 문서 [https://developer.yahoo.com/oauth2/guide/yahoo_scopes/]를 참조하세요.
제공업체 데이터가 구성되었으면 이를 사용하여 FederatedOAuthProvider를 만듭니다.

그러면 애플리케이션이 대기하거나 Future에 콜백을 등록 [https://firebase.google.com/docs/auth/cpp/yahoo-oauth?hl=ko#register_callback_on_future]할 수 있습니다.
위의 예시는 로그인 과정에 중점을 두고 있지만 LinkWithProvider를 사용하여 Yahoo 제공업체를 기존 사용자에 연결할 수도 있습니다. 예를 들어 여러 제공업체를 동일한 사용자에 연결하여 그 중 하나로 로그인하도록 허용할 수 있습니다.

그러면 애플리케이션이 대기하거나 Future에 콜백을 등록 [https://firebase.google.com/docs/auth/cpp/yahoo-oauth?hl=ko#register_callback_on_future]할 수 있습니다.

고급: 수동으로 로그인 과정 처리하기

OAuth 액세스 토큰 기반의 사용자 인증 정보를 사용하여 직접 로그인할 수 있는 다른 Firebase 지원 OAuth 제공업체(예: Google, Facebook, Twitter)와 달리, Firebase 인증 서버에서 Yahoo OAuth 액세스 토큰의 사용자를 인증할 수 없으므로 Firebase 인증은 Yahoo와 같은 제공업체에 대해 동일한 인증 기능을 지원하지 못합니다.
이는 중요한 보안 요구사항으로, 한 프로젝트(공격자)에서 확보한 Yahoo OAuth 액세스 토큰을 사용하여 다른 프로젝트(피해자)에 로그인할 수 있는 재전송 공격에 애플리케이션과 웹사이트가 노출될 수 있습니다.
대신 Firebase 인증은 Firebase Console에 구성된 OAuth 클라이언트 ID와 보안 비밀을 사용하여 전체 OAuth 과정과 승인 코드 교환을 처리할 수 있는 기능을 제공합니다. 승인 코드는 특정 클라이언트 ID/보안 비밀과 함께 사용되어야 하므로, 한 프로젝트에서 확보한 승인 코드는 다른 프로젝트에 사용할 수 없습니다.

지원되지 않는 환경에서 이러한 제공업체를 사용해야 하는 경우 서드 파티 OAuth 라이브러리 및 Firebase 커스텀 인증 [https://firebase.google.com/docs/auth/admin/create-custom-tokens?hl=ko]을 사용해야 합니다. 서드 파티 라이브러리는 제공업체 인증에 필요하고 Firebase 커스텀 인증은 제공업체의 사용자 인증 정보를 커스텀 토큰으로 교환할 때 필요합니다.

다음 단계

사용자가 처음으로 로그인하면 신규 사용자 계정이 생성되고 사용자가 로그인할 때 사용한 사용자 인증 정보(사용자 이름과 비밀번호, 전화번호 또는 인증 제공업체 정보)에 연결됩니다. 이 신규 계정은 Firebase 프로젝트에 저장되며 사용자의 로그인 방법과 무관하게 프로젝트 내의 모든 앱에서 사용자를 식별하는 데 사용할 수 있습니다.

앱의 firebase::auth::User [https://firebase.google.com/docs/reference/cpp/class/firebase/auth/user?hl=ko] 객체에서 사용자의 기본 프로필 정보를 가져올 수 있습니다.

의견 보내기