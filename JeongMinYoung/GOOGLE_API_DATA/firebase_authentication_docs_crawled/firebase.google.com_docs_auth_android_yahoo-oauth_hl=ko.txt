Source URL: https://firebase.google.com/docs/auth/android/yahoo-oauth?hl=ko
Title: Android에서 Yahoo를 통해 인증
bookmark_border

의견 보내기

Android에서 Yahoo를 통해 인증

bookmark_borderbookmark

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 페이지의 내용시작하기 전에 [https://firebase.google.com/docs/auth/android/yahoo-oauth?hl=ko#before_you_begin]Firebase SDK로 로그인 과정 처리 [https://firebase.google.com/docs/auth/android/yahoo-oauth?hl=ko#handle_the_sign-in_flow_with_the_firebase_sdk]고급: 수동으로 로그인 과정 처리 [https://firebase.google.com/docs/auth/android/yahoo-oauth?hl=ko#advanced:-handle-the-sign-in-flow-manually]다음 단계 [https://firebase.google.com/docs/auth/android/yahoo-oauth?hl=ko#next_steps]

Firebase SDK를 통해 전체 로그인 과정을 수행하는 앱에 웹 기반의 일반 OAuth 로그인을 통합하여 사용자가 Yahoo와 같은 OAuth 제공업체를 통해 Firebase로 인증하도록 할 수 있습니다.

시작하기 전에

사용자가 Yahoo 계정을 통해 로그인하도록 하려면 우선 Firebase 프로젝트에서 Yahoo를 로그인 제공업체로 사용 설정해야 합니다.

Android 프로젝트에 Firebase를 추가합니다 [https://firebase.google.com/docs/android/setup?hl=ko].
Firebase Console [https://console.firebase.google.com/?hl=ko]에서 인증 섹션을 엽니다.
로그인 방법 탭에서 Yahoo 제공업체를 사용 설정합니다.
해당 제공업체의 개발자 콘솔에서 제공되는 클라이언트 ID 및 클라이언트 보안 비밀번호를 제공업체 구성에 추가합니다.

Yahoo OAuth 클라이언트를 등록하려면 Yahoo에 웹 애플리케이션을 등록하는 방법 [https://developer.yahoo.com/oauth2/guide/openid_connect/getting_started.html]에 대한 Yahoo 개발자 문서를 따릅니다.
OpenID Connect API 권한 2개(profile 및 email)를 선택해야 합니다.
이러한 제공업체에 앱을 등록할 때 프로젝트의 *.firebaseapp.com 도메인을 앱의 리디렉션 도메인으로 등록해야 합니다.

저장을 클릭합니다.
아직 앱의 SHA-1 디지털 지문을 지정하지 않았다면 Firebase Console의 설정 페이지 [https://console.firebase.google.com/project/_/settings/general/?hl=ko]에서 지정합니다. 앱의 SHA-256 디지털 지문을 얻는 방법에 대한 자세한 내용은 클라이언트 인증 [https://developers.google.com/android/guides/client-auth?hl=ko]을 참조하세요.

Firebase SDK로 로그인 과정 처리

Android 앱을 빌드하는 경우 Firebase Android SDK로 전체 로그인 과정을 처리하면 가장 손쉽게 Yahoo 계정을 통해 Firebase에 사용자를 인증할 수 있습니다.

Firebase Android SDK로 로그인 과정을 처리하려면 다음 단계를 따릅니다.

제공업체 ID yahoo.com을 사용하여 빌더로 OAuthProvider의 인스턴스를 생성합니다.
--- 탭: Kotlin [https://firebase.google.com/docs/auth/android/yahoo-oauth?hl=ko#kotlin-android] ---
val provider = OAuthProvider.newBuilder("yahoo.com")GenericIdpActivity.kt [https://github.com/firebase/snippets-android/blob/268a3858585da19107220dbad9ceb8a5fd23241a/auth/app/src/main/java/com/google/firebase/quickstart/auth/kotlin/GenericIdpActivity.kt#L81-L81]

--- 탭: Java [https://firebase.google.com/docs/auth/android/yahoo-oauth?hl=ko#java-android] ---
OAuthProvider.Builder provider = OAuthProvider.newBuilder("yahoo.com");GenericIdpActivity.java [https://github.com/firebase/snippets-android/blob/268a3858585da19107220dbad9ceb8a5fd23241a/auth/app/src/main/java/com/google/firebase/quickstart/auth/GenericIdpActivity.java#L94-L94]
선택사항: OAuth 요청과 함께 전송하고자 하는 커스텀 OAuth 매개변수를 추가로 지정합니다.
--- 탭: Kotlin [https://firebase.google.com/docs/auth/android/yahoo-oauth?hl=ko#kotlin-android] ---

Firebase에서 요구하는 매개변수는 setCustomParameters()와 함께 전달할 수 없습니다. 이러한 매개변수에는 client_id, redirect_uri, response_type, scope, state가 있습니다.
선택사항: 인증 제공업체에서 요청하고자 하는 profile 및 email 범위를 넘는 OAuth 2.0 범위를 추가로 지정합니다. 애플리케이션에서 Yahoo API의 비공개 사용자 데이터에 대한 액세스가 필요한 경우 Yahoo 개발자 콘솔의 API 권한에서 Yahoo API에 대한 권한을 요청해야 합니다. 요청받은 OAuth 범위는 앱의 API 권한에서 사전 구성된 범위와 정확하게 일치해야 합니다. 예를 들어 사용자 연락처에 읽기/쓰기 액세스 권한이 요청되고 앱의 API 권한에서 사전 구성되었다면 읽기 전용 OAuth 범위 sdct-r 대신 sdct-w를 전달해야 합니다. 그렇지 않으면 과정이 실패하고 최종 사용자에게 오류가 표시됩니다.
--- 탭: Kotlin [https://firebase.google.com/docs/auth/android/yahoo-oauth?hl=ko#kotlin-android] ---
List<String> scopes =
new ArrayList<String>() {
if (pendingResultTask != null) {
Task<AuthResult> pendingResultTask = firebaseAuth.getPendingAuthResult();
if (pendingResultTask != null) {
.addOnSuccessListener(
new OnSuccessListener<AuthResult>() {
@Override
public void onSuccess(AuthResult authResult) {
.startActivityForSignInWithProvider(activity, provider.build())
.startActivityForSignInWithProvider(/* activity= */ this, provider.build())
.addOnSuccessListener(
new OnSuccessListener<AuthResult>() {
@Override
public void onSuccess(AuthResult authResult) {
firebaseUser
.startActivityForLinkWithProvider(activity, provider.build())
FirebaseUser firebaseUser = firebaseAuth.getCurrentUser();

firebaseUser
.startActivityForLinkWithProvider(/* activity= */ this, provider.build())
.addOnSuccessListener(
new OnSuccessListener<AuthResult>() {
@Override
public void onSuccess(AuthResult authResult) {
--- 탭: Kotlin [https://firebase.google.com/docs/auth/android/yahoo-oauth?hl=ko#kotlin-android] ---
firebaseUser
.startActivityForReauthenticateWithProvider(activity, provider.build())
FirebaseUser firebaseUser = firebaseAuth.getCurrentUser();

firebaseUser
.startActivityForReauthenticateWithProvider(/* activity= */ this, provider.build())
.addOnSuccessListener(
new OnSuccessListener<AuthResult>() {
@Override
public void onSuccess(AuthResult authResult) {