Source URL: https://cloud.google.com/firestore/docs/manage-databases?hl=ko
Title: 데이터베이스 생성 및 관리

의견 보내기

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

데이터베이스 생성 및 관리

이 페이지에서는 Firestore 데이터베이스를 생성, 업데이트, 삭제하는 방법을 설명합니다. 프로젝트당 Firestore 데이터베이스 여러 개를 만들 수 있습니다. 여러 데이터베이스를 사용하여 프로덕션 및 테스트 환경을 설정하고 고객 데이터를 격리하며 데이터 리전화를 수행할 수 있습니다.

(default) 데이터베이스

데이터베이스를 지정하지 않으면 Firestore 클라이언트 라이브러리와 Google Cloud CLI가 기본적으로 (default) 데이터베이스에 연결됩니다.

필요한 역할

데이터베이스를 만들고 관리하려면 Owner 또는 Datastore Owner Identity and Access Management 역할이 필요합니다. 이러한 역할은 필수 권한을 부여합니다.

필수 권한

데이터베이스를 관리하려면 다음 권한이 필요합니다.

데이터베이스 만들기: datastore.databases.create
데이터베이스 구성 읽기: datastore.databases.getMetadata
데이터베이스 구성: datastore.databases.update
데이터베이스 삭제: datastore.databases.delete
데이터베이스 클론: datastore.databases.clone

데이터베이스 만들기

데이터베이스를 만들려면 다음 방법 중 하나를 사용합니다.

콘솔

Google Cloud 콘솔에서 데이터베이스 페이지로 이동합니다.
데이터베이스로 이동 [https://console.cloud.google.com/firestore/databases?hl=ko]

데이터베이스 만들기를 클릭합니다.

데이터베이스 모드를 선택합니다. 계속을 클릭합니다.
데이터베이스를 구성합니다. 데이터베이스 ID를 입력합니다. 지역을 선택합니다.
모바일 및 웹 클라이언트의 보안 규칙을 선택합니다.
데이터베이스 만들기를 클릭합니다.

gcloud
gcloud firestore databases create [https://cloud.google.com/sdk/gcloud/reference/firestore/databases/create?hl=ko] 명령어를 사용합니다.

gcloud firestore databases create \
--database=DATABASE_ID \
--location=LOCATION \
--type=DATABASE_TYPE \
[--delete-protection]

다음을 바꿉니다.

DATABASE_ID: 유효한 데이터베이스 ID [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#database_id]
LOCATION: Firestore 멀티 리전 또는 리전 [https://cloud.google.com/firestore/native/docs/locations?hl=ko#types]의 이름
DATABASE_TYPE: 기본 모드의 경우 firestore-native, Datastore 모드의 경우 datastore-mode

--delete-protection은 삭제 보호를 사용 설정하는 선택적 플래그입니다.
이 설정을 중지할 때까지는 삭제 보호가 사용 설정된 데이터베이스를 삭제할 수 없습니다. 이 설정은 기본적으로 사용 중지되어 있습니다.

데이터베이스에 태그 [https://cloud.google.com/firestore/docs/tags?hl=ko]를 추가하려면 --tags [https://cloud.google.com/sdk/gcloud/reference/firestore/databases/create?hl=ko#--tags] 플래그를 사용합니다. 예를 들면 다음과 같습니다.

--tags=123/environment=production,123/costCenter=marketing
--tags=tagKeys/333=tagValues/444

Firebase CLI

firebase firestore:databases:create DATABASE_ID \
--location=LOCATION \
[--delete-protection DELETE_PROTECTION_ENABLEMENT]

다음을 바꿉니다.

DATABASE_ID: 유효한 데이터베이스 ID [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#database_id]
LOCATION: Firestore 멀티 리전 또는 리전 [https://cloud.google.com/firestore/native/docs/locations?hl=ko#types]의 이름
DELETE_PROTECTION_ENABLEMENT: ENABLED 또는 DISABLED

생성된 데이터베이스는 항상 Firestore Native 모드입니다.

--delete-protection 은 삭제 보호를 사용 설정하는 선택적 인수입니다. 이 설정을 중지할 때까지는 삭제 보호가 사용 설정된 데이터베이스를 삭제할 수 없습니다. 이 설정은 기본적으로 사용 중지되어 있습니다.

Terraform

resource "google_firestore_database" "database" {
project     = "project-id"
name        = DATABASE_ID
location_id = LOCATION
type        = DATABASE_TYPE

데이터베이스 ID

유효한 데이터베이스 ID에는 (default) 및 다음을 준수하는 ID가 포함됩니다.

문자, 숫자, 하이픈(-) 문자만 포함합니다.
문자는 소문자여야 합니다.
첫 번째 글자는 문자여야 합니다.
마지막 글자는 문자 또는 숫자여야 합니다.
최소 4자(영문 기준)입니다.
최대 63자(영문 기준)입니다.
UUID이거나 UUID와 유사해서는 안 됩니다. 예를 들어 f47ac10b-58cc-0372-8567-0e02b2c3d479와 같은 ID를 사용하지 마세요.

데이터베이스를 삭제하면 5분 동안 데이터베이스 ID를 재사용할 수 없습니다.

보호 삭제

삭제 보호를 사용하여 데이터베이스가 실수로 삭제되는 것을 방지하세요.
삭제 보호가 사용 중지된 데이터베이스는 삭제 보호를 사용 중지할 때까지 삭제할 수 없습니다. 삭제 보호는 기본적으로 사용 중지되어 있습니다. 데이터베이스를 만들 때 삭제 보호를 사용 설정하거나 데이터베이스 구성을 업데이트 [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#update_database_configuration]하여 삭제 보호를 사용 설정할 수 있습니다.

데이터베이스의 Firestore 보안 규칙 설정

Firebase CLI를 사용하여 각 데이터베이스에 Firestore 보안 규칙을 배포합니다. Firestore 보안 규칙 관리 및 배포 가이드 [https://firebase.google.com/docs/rules/manage-deploy?hl=ko]를 참조하세요.

클라이언트 라이브러리를 사용하여 이름이 지정된 데이터베이스에 액세스

이름이 지정된 데이터베이스에는 (default)가 아닌 모든 데이터베이스가 포함됩니다. 기본적으로 Firebase SDK 및 Google API 클라이언트 라이브러리는 프로젝트의 (default) Firestore 데이터베이스에 연결됩니다. 이름이 지정된 데이터베이스에 연결된 클라이언트를 만들려면 클라이언트를 인스턴스화할 때 데이터베이스 ID를 설정합니다.
참고: 여러 데이터베이스를 사용하려면 최신 Firebase 클라이언트 SDK [https://cloud.google.com/firestore/docs/reference/libraries?hl=ko#mobile_and_web_sdks] 및 Google API 클라이언트 라이브러리 [https://cloud.google.com/firestore/docs/reference/libraries?hl=ko#google_cloud_client_libraries]로 업데이트하세요.
데이터베이스 나열

다음 방법 중 하나를 사용하여 데이터베이스를 나열합니다.

콘솔
Google Cloud 콘솔에서 데이터베이스 페이지로 이동합니다.
데이터베이스로 이동 [https://console.cloud.google.com/firestore/databases?hl=ko]

참고: Google Cloud 콘솔에서 데이터베이스를 보고 나열할 수 있습니다. Google Cloud 콘솔을 사용하여 (default) 데이터베이스를 만들 수 있지만 Google Cloud CLI 또는 다른 방법 [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#create_a_database]을 사용하여 이름이 지정된 데이터베이스를 만들어야 합니다.
데이터베이스를 삭제하려면 Google Cloud CLI를 사용 [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#delete-database]합니다.

gcloud

gcloud firestore databases list [https://cloud.google.com/sdk/gcloud/reference/firestore/databases/list?hl=ko] 명령어를 사용하여 프로젝트의 모든 데이터베이스를 나열합니다.

gcloud firestore databases list

Firebase CLI
firebase firestore:databases:list 명령어를 사용하여 프로젝트의 모든 데이터베이스를 나열합니다.

firebase firestore:databases:list

데이터베이스 세부정보 보기

단일 데이터베이스에 대한 세부정보를 보려면 다음 방법 중 하나를 사용합니다.

gcloud

gcloud firestore databases describe [https://cloud.google.com/sdk/gcloud/reference/firestore/databases/describe?hl=ko] 명령어를 사용합니다.

gcloud firestore databases describe --database=DATABASE_ID

Firebase CLI

firebase firestore:databases:get 명령어를 사용합니다.

firebase firestore:databases:get DATABASE_ID

DATABASE_ID를 데이터베이스 ID로 바꿉니다.

데이터베이스 구성 업데이트

데이터베이스의 구성 설정을 업데이트하려면 gcloud firestore databases update [https://cloud.google.com/sdk/gcloud/reference/firestore/databases/update?hl=ko] 명령어를 사용합니다.

데이터베이스 유형을 변경하거나 삭제 보호를 전환하려면 이 명령어를 사용합니다.

데이터베이스 유형 변경

데이터베이스 유형을 업데이트하려면 gcloud firestore databases update 명령어를 --type= 플래그와 함께 사용합니다. 데이터베이스가 비어 있는 경우에만 유형을 변경할 수 있습니다.

gcloud
gcloud firestore databases update --database=DATABASE_ID \
--type=DATABASE_TYPE

다음을 바꿉니다.

DATABASE_ID: 데이터베이스 ID
DATABASE_TYPE: 기본 모드의 경우 firestore-native, Datastore 모드의 경우 datastore-mode

삭제 방지 설정 업데이트

데이터베이스에서 삭제 보호를 사용 설정하려면 gcloud firestore databases update 명령어를 --delete-protection 플래그와 함께 사용합니다. 예를 들면 다음과 같습니다.

gcloud
gcloud firestore databases update --database=DATABASE_ID --delete-protection

DATABASE_ID를 데이터베이스 ID로 바꿉니다.

데이터베이스에서 삭제 보호를 사용 중지하려면 gcloud firestore databases update 명령어를 --no-delete-protection 플래그와 함께 사용합니다. 예를 들면 다음과 같습니다.

gcloud
gcloud firestore databases update --database=DATABASE_ID --no-delete-protection

DATABASE_ID를 데이터베이스 ID로 바꿉니다.

데이터베이스 삭제

데이터베이스를 삭제하려면 콘솔이나 명령줄 도구를 사용합니다.

데이터베이스에 삭제 보호 설정이 사용 설정된 경우 먼저 삭제 보호를 중지 [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#update_the_delete_protection_setting]해야 합니다.

데이터베이스에 App Engine 검색 데이터 [https://cloud.google.com/appengine/docs/legacy/standard/python/search?hl=ko] 또는 blob 항목 [https://cloud.google.com/appengine/docs/legacy/standard/python/blobstore?hl=ko]이 포함된 경우 먼저 해당 데이터를 삭제해야 합니다.

데이터베이스를 삭제해도 해당 데이터베이스의 Eventarc 트리거 [https://cloud.google.com/firestore/native/docs/eventarc?hl=ko]가 자동으로 삭제되지 않습니다. 트리거가 이벤트 제공을 중지하지만 트리거를 삭제 [https://cloud.google.com/eventarc/docs/managing-triggers?hl=ko#trigger-delete]하기 전까지 계속 존재합니다.

데이터베이스 삭제 작업에 대한 요금은 청구되지 않습니다.

콘솔

Google Cloud 콘솔에서 데이터베이스 페이지로 이동합니다.
데이터베이스로 이동 [https://console.cloud.google.com/firestore/databases?hl=ko]

삭제할 데이터베이스의 테이블 행에서 more_vert 더보기를 클릭합니다. 삭제를 클릭합니다. 대화상자가 나타납니다.

데이터베이스를 삭제하시겠어요? 대화상자의 텍스트 필드에 데이터베이스 ID를 입력하여 삭제를 확인합니다. 삭제를 클릭합니다. 콘솔에 작업의 성공 또는 실패가 표시됩니다.
작업이 실패하면 데이터베이스 세부정보를 보고 [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#view_database_details] 삭제 보호가 사용 중지되어 있는지 확인합니다. 삭제 보호를 중지하려면 삭제 보호 설정 업데이트 [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#update_the_delete_protection_setting]를 참조하세요.

gcloud
`gcloud firestore databases delete` [https://cloud.google.com/sdk/gcloud/reference/firestore/databases/delete?hl=ko] 명령어를 사용합니다.

gcloud firestore databases delete --database=DATABASE_ID
DATABASE_ID를 삭제할 데이터베이스의 ID로 바꿉니다.

데이터베이스 클론

프리뷰

- Database cloning

이 기능에는 서비스별 약관 [https://cloud.google.com/terms/service-terms?hl=ko#1]의 일반 서비스 약관 섹션에 있는 'GA 이전 제공 서비스 약관'이 적용됩니다.

GA 이전 기능은 '있는 그대로' 제공되며 지원이 제한될 수 있습니다.

자세한 내용은 출시 단계 설명 [https://cloud.google.com/products?hl=ko#product-launch-stages]을 참조하세요.

선택한 타임스탬프의 기존 데이터베이스를 새 데이터베이스로 클론할 수 있습니다.

클론된 데이터베이스는 소스 데이터베이스와 동일한 위치에 생성되는 새 데이터베이스입니다.

클론을 만들기 위해 Firestore는 소스 데이터베이스의 PITR (point-in-time recovery) 데이터 [https://cloud.google.com/firestore/native/docs/pitr?hl=ko]를 사용합니다. 클론된 데이터베이스에는 모든 데이터와 색인이 포함됩니다.
기본적으로 클론된 데이터베이스는 Google의 기본 암호화 또는 CMEK 암호화 [https://cloud.google.com/firestore/native/docs/use-cmek?hl=ko]를 사용하여 소스 데이터베이스와 동일한 방식으로 암호화됩니다. 다른 암호화 유형을 지정하거나 CMEK 암호화에 다른 키를 사용할 수 있습니다.
타임스탬프는 1분 단위이며 PITR 기간 [https://cloud.google.com/firestore/native/docs/pitr?hl=ko#pitr_window]에 정의된 과거의 시점을 지정합니다.

데이터베이스에 PITR이 사용 설정된 경우 지난 7일 이내의 분을 선택합니다 (PITR이 7일 전에 사용 설정된 경우 그 미만).
PITR이 사용 설정되어 있지 않으면 지난 1시간 중 아무 분이나 선택할 수 있습니다.
데이터베이스 설명 [https://cloud.google.com/firestore/native/docs/use-pitr?hl=ko#get-period]에서 선택할 수 있는 가장 이른 타임스탬프를 확인할 수 있습니다.

참고: 데이터베이스를 클론하려면 Google 계정에 datastore.databases.clone IAM 권한 [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#permissions]이 있어야 합니다.
콘솔

Google Cloud 콘솔에서 데이터베이스 페이지로 이동합니다.

데이터베이스로 이동 [https://console.cloud.google.com/firestore/databases?hl=ko]
복제할 데이터베이스의 테이블 행에서 more_vert 더보기를 클릭합니다. 복제를 클릭합니다. 클론 만들기 대화상자가 표시됩니다.
클론 만들기 대화상자에서 데이터베이스 클론 매개변수를 제공합니다.

클론에 ID 부여 필드에 새 클론 데이터베이스의 데이터베이스 ID [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#database_id]를 입력합니다. 이 데이터베이스 ID는 기존 데이터베이스와 연결되어서는 안 됩니다.
클론 대상 필드에서 클론에 사용할 특정 시점을 선택합니다.
선택한 시간은 분 단위의 PITR 타임스탬프에 해당합니다.

클론 만들기를 클릭합니다.

참고: 클론된 데이터베이스에는 소스 데이터베이스와 동일한 암호화 구성이 적용됩니다. 클론된 데이터베이스에 다른 암호화 구성을 지정하려면 Google Cloud CLI 명령어를 사용하면 됩니다.

gcloud gcloud alpha firestore databases clone [https://cloud.google.com/sdk/gcloud/reference/alpha/firestore/databases/clone?hl=ko] 명령어를 사용하여 데이터베이스를 클론합니다.
gcloud alpha firestore databases clone \
--source-database='SOURCE_DATABASE_ID' \
--snapshot-time='PITR_TIMESTAMP' \
--destination-database='DESTINATION_DATABASE_ID'

다음을 바꿉니다.

SOURCE_DATABASE_ID: 클론하려는 기존 데이터베이스의 데이터베이스 ID [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#database_id]
PITR_TIMESTAMP: 분 단위의 RFC 3339 형식 [https://tools.ietf.org/html/rfc3339] PITR 타임스탬프 [https://cloud.google.com/firestore/native/docs/use-pitr?hl=ko#get-period]입니다. 예를 들면 2025-06-01T10:20:00.00Z 또는 2025-06-01T10:30:00.00-07:00입니다.
DESTINATION_DATABASE_ID: 새로 클론된 데이터베이스의 데이터베이스 ID [https://cloud.google.com/firestore/native/docs/manage-databases?hl=ko#database_id]입니다. 이 데이터베이스 ID는 기존 데이터베이스와 연결되어서는 안 됩니다.

예:
gcloud alpha firestore databases clone \
--source-database='projects/example-project/databases/(default)' \
--snapshot-time='2025-06-01T10:20:00.00Z' \
--destination-database='projects/example-project/databases/example-dest-db'

클론된 데이터베이스의 암호화 구성 변경

기본적으로 클론된 데이터베이스에는 소스 데이터베이스와 동일한 암호화 구성이 적용됩니다. 암호화 구성을 변경하려면 --encryption-type 인수를 사용합니다.

(기본값) use-source-encryption: 소스 데이터베이스와 동일한 암호화 구성을 사용합니다.
google-default-encryption: Google의 기본 암호화를 사용합니다.
customer-managed-encryption: CMEK 암호화를 사용합니다. --kms-key-name 인수에 키 ID [https://cloud.google.com/kms/docs/getting-resource-ids?hl=ko#getting_the_id_for_a_key_and_version]를 지정합니다.

다음 예시에서는 클론된 데이터베이스의 CMEK 암호화를 구성하는 방법을 보여줍니다.
gcloud alpha firestore databases clone \
--source-database='projects/example-project/databases/(default)' \
--snapshot-time='2025-06-01T10:20:00.00Z' \
--destination-database='projects/example-project/databases/example-dest-db' \
--encryption-type='customer-managed-encryption' \
--kms-key-name='projects/example-project/locations/us-central1/keyRings/example-key-ring/cryptoKeys/example-key'

데이터베이스별 액세스 권한 구성

Identity and Access Management 조건 [https://cloud.google.com/iam/docs/conditions-overview?hl=ko]을 사용하여 데이터베이스 수준별로 액세스 권한을 구성할 수 있습니다.
다음 예시에서는 Google Cloud CLI를 사용하여 하나 이상의 데이터베이스에 조건부 액세스 권한을 할당합니다. Google Cloud 콘솔에서 IAM 조건을 정의 [https://cloud.google.com/iam/docs/managing-conditional-role-bindings?hl=ko]할 수도 있습니다.
경고: Google Cloud 콘솔은 데이터베이스 수준에서 구성된 IAM 조건에 따라 데이터베이스에 대한 액세스를 허용/거부하지 않습니다. 이는 Google Cloud 콘솔을 사용하여 데이터베이스에 액세스하는 경우에만 적용됩니다.
REST API 또는 클라이언트 라이브러리와 같이 Google Cloud 콘솔 외부에서 데이터베이스에 액세스할 때 IAM 조건이 적용됩니다.
기존 IAM 정책 보기
gcloud projects get-iam-policy PROJECT_ID

PROJECT_ID를 프로젝트 ID로 설정합니다.

데이터베이스에 대한 액세스 권한 부여
gcloud projects add-iam-policy-binding PROJECT_ID \
--member='user:EMAIL' \
--role='roles/datastore.user' \
--condition='expression=resource.name=="projects/PROJECT_ID/databases/DATABASE_ID",title=TITLE,description=DESCRIPTION'

다음을 설정합니다.

PROJECT_ID: 프로젝트 ID입니다.
EMAIL: 특정 Google 계정을 나타내는 이메일 주소입니다. 예를 들면 alice@example.com입니다.
DATABASE_ID: 데이터베이스 ID
DESCRIPTION: 표현식의 설명(선택사항)입니다.

데이터베이스 1개를 제외한 모든 데이터베이스에 액세스 권한 부여
gcloud projects add-iam-policy-binding PROJECT_ID \
--member='user:EMAIL' \
--role='roles/datastore.user' \
--condition='expression=resource.name!="projects/PROJECT_ID/databases/DATABASE_ID",title=TITLE,description=DESCRIPTION'

다음을 설정합니다.

PROJECT_ID: 프로젝트 ID입니다.
EMAIL: 특정 Google 계정을 나타내는 이메일 주소입니다. 예를 들면 alice@example.com입니다.
DATABASE_ID: 데이터베이스 ID
DESCRIPTION: 표현식의 설명(선택사항)입니다.

지정된 구성원 및 역할의 정책 삭제
gcloud projects remove-iam-policy-binding PROJECT_ID \
--member='user:EMAIL' \
--role='roles/datastore.user' --all

다음을 설정합니다.

PROJECT_ID: 프로젝트 ID입니다.
EMAIL: 특정 Google 계정을 나타내는 이메일 주소입니다. 예를 들면 alice@example.com입니다.

Cloud Monitoring

Firestore 측정항목은 두 개의 모니터링 리소스 아래에 보고됩니다.

firestore.googleapis.com/Database [https://cloud.google.com/monitoring/api/resources?hl=ko#tag_firestore.googleapis.com/Database]
firestore_instance [https://cloud.google.com/monitoring/api/resources?hl=ko#tag_firestore_instance](기존)

firestore.googleapis.com/Database를 확인하여 데이터베이스 수준에서 집계 측정항목을 검사할 수 있습니다. firestore_instance에 보고되는 측정항목은 프로젝트 수준에서 집계됩니다.

제한사항

프로젝트당 최대 100개의 데이터베이스를 포함할 수 있습니다. 지원팀에 문의 [https://cloud.google.com/support-hub?hl=ko]하여 이 한도 상향을 요청할 수 있습니다.
GAE 검색 데이터 [https://cloud.google.com/appengine/docs/legacy/standard/python/search?hl=ko]가 포함되어 있으면 (default) 데이터베이스를 삭제할 수 없습니다.
Index Delete API [https://cloud.google.com/appengine/docs/legacy/standard/python/search?hl=ko#deleting_an_index]를 사용하여 GAE 검색 데이터를 삭제합니다. 최근에 GAE 검색 데이터를 삭제한 경우 데이터베이스를 삭제하려면 대기 기간이 지나야 할 수 있습니다.
blob 항목 [https://cloud.google.com/appengine/docs/legacy/standard/python/blobstore?hl=ko]이 포함되어 있으면 (default) 데이터베이스를 삭제할 수 없습니다. Blobstore Delete API [https://cloud.google.com/appengine/docs/legacy/standard/python/refdocs/google.appengine.ext.blobstore.blobstore?hl=ko#google.appengine.ext.blobstore.blobstore.delete]를 사용하여 Blobstore 데이터를 삭제합니다.
Google Cloud 콘솔에서 SELECT * FROM __BlobInfo__ GQL 쿼리를 실행하여 (default) 데이터베이스에 Blobstore 데이터가 있는지 확인할 수 있습니다.
삭제 후 5분이 지나야 데이터베이스 ID를 재사용할 수 있습니다.
Cloud 함수 v1은 Firestore에서 이름이 지정된 데이터베이스를 지원하지 않습니다. Cloud Firestore 트리거 (2세대) [https://cloud.google.com/functions/docs/calling/cloud-firestore?hl=ko]를 사용하여 이름이 지정된 데이터베이스의 이벤트를 구성하세요.
데이터베이스가 삭제된 후 동일한 이름으로 새 데이터베이스를 생성하더라도 Firestore 함수 트리거 v1 [https://cloud.google.com/firestore/docs/extend-with-functions?hl=ko] 및 Firestore 이벤트 트리거 [https://cloud.google.com/firestore/docs/eventarc?hl=ko]가 작동이 중지될 수 있습니다.

다음 단계

데이터 추가 [https://cloud.google.com/firestore/native/docs/manage-data/add-data?hl=ko]
데이터 가져오기 [https://cloud.google.com/firestore/native/docs/query-data/get-data?hl=ko]
데이터 삭제 [https://cloud.google.com/firestore/native/docs/manage-data/delete-data?hl=ko]

의견 보내기