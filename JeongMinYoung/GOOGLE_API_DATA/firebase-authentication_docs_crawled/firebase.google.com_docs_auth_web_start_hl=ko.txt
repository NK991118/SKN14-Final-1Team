Source URL: https://firebase.google.com/docs/auth/web/start?hl=ko
Title: 웹사이트에서 Firebase 인증 시작하기
bookmark_border

의견 보내기

웹사이트에서 Firebase 인증 시작하기

bookmark_borderbookmark

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

이 페이지의 내용Authentication SDK 추가 및 초기화 [https://firebase.google.com/docs/auth/web/start?hl=ko#add-initialize-sdk](선택사항) Firebase Local Emulator Suite으로 프로토타입 제작 및 테스트 [https://firebase.google.com/docs/auth/web/start?hl=ko#optional_prototype_and_test_with]신규 사용자 가입 [https://firebase.google.com/docs/auth/web/start?hl=ko#sign_up_new_users]기존 사용자 로그인 [https://firebase.google.com/docs/auth/web/start?hl=ko#sign_in_existing_users]인증 상태 관찰자 설정 및 사용자 데이터 가져오기 [https://firebase.google.com/docs/auth/web/start?hl=ko#set_an_authentication_state_observer_and_get_user_data]다음 단계 [https://firebase.google.com/docs/auth/web/start?hl=ko#next_steps]

Firebase Authentication을 사용하면 사용자가 앱에 로그인할 때 이메일 주소와 비밀번호를 통한 로그인 방법이나 Google 로그인, Facebook 로그인과 같은 제휴 ID 공급업체를 통한 로그인 등 1개 이상의 로그인 방법을 사용하여 로그인할 수 있습니다. 이 튜토리얼에서는 Firebase Authentication을 시작할 수 있도록 앱에 이메일 주소와 비밀번호를 통한 로그인을 추가하는 방법을 보여줍니다.

Authentication SDK 추가 및 초기화

아직 진행하지 않았다면 Firebase JS SDK를 설치하고 Firebase를 초기화 [https://firebase.google.com/docs/web/setup?hl=ko#add-sdk-and-initialize]합니다.
Firebase Authentication JS SDK를 추가하고 Firebase Authentication을 초기화합니다.

--- 탭: Web [https://firebase.google.com/docs/auth/web/start?hl=ko#web-modular-api] ---
트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에서 업그레이드 [https://firebase.google.com/docs/web/modular-upgrade?hl=ko]하세요.

```
import { initializeApp } from "firebase/app";
import { getAuth } from "firebase/auth";

import "firebase/compat/auth";

Authentication 에뮬레이터는 Local Emulator Suite의 일부이며 앱에서 에뮬레이션된 데이터베이스 콘텐츠와 구성은 물론 필요에 따라 에뮬레이션된 프로젝트 리소스(함수, 기타 데이터베이스, 보안 규칙)와 상호작용할 수 있게 해줍니다.

Authentication 에뮬레이터를 사용하려면 다음 몇 단계만 거치면 됩니다.

에뮬레이터에 연결하려면 앱의 테스트 구성에 코드 줄을 추가합니다.
로컬 프로젝트 디렉터리의 루트에서 firebase emulators:start를 실행합니다.
대화형 프로토타입 제작에는 Local Emulator Suite UI를, 비대화형 테스트에는 Authentication 에뮬레이터 REST API를 사용합니다.

자세한 안내는 Authentication 에뮬레이터에 앱 연결 [https://firebase.google.com/docs/emulator-suite/connect_auth?hl=ko]을 참조하세요.
자세한 내용은 Local Emulator Suite 소개 [https://firebase.google.com/docs/emulator-suite?hl=ko]를 참조하세요.

이제 사용자 인증 방법을 계속 살펴보겠습니다.

신규 사용자 가입

신규 사용자가 자신의 이메일 주소와 비밀번호를 사용해 앱에 가입할 수 있는 양식을 만듭니다. 사용자가 양식을 작성하면 사용자가 입력한 이메일 주소와 비밀번호의 유효성을 검사한 후 createUserWithEmailAndPassword 메서드에 전달합니다.

--- 탭: Web [https://firebase.google.com/docs/auth/web/start?hl=ko#web-modular-api] ---
import { getAuth, createUserWithEmailAndPassword } from "firebase/auth";

.then((userCredential) => {
.then((userCredential) => {

.then((userCredential) => {
.then((userCredential) => {

--- 탭: Web [https://firebase.google.com/docs/auth/web/start?hl=ko#web-modular-api] ---
import { getAuth, onAuthStateChanged } from "firebase/auth";