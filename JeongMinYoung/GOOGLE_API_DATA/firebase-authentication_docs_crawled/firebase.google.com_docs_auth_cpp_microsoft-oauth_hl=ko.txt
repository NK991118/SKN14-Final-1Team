Source URL: https://firebase.google.com/docs/auth/cpp/microsoft-oauth?hl=ko
Title: Microsoft와 C++를 사용하여 인증

의견 보내기

Microsoft와 C++를 사용하여 인증

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

Firebase SDK를 통해 엔드 투 엔드 로그인 과정을 실행하는 앱에 웹 기반의 일반 OAuth 로그인을 통합하여 사용자가 Microsoft Azure Active Directory와 같은 OAuth 제공업체를 통해 Firebase에 인증하도록 할 수 있습니다.
이 과정은 스마트폰 기반 Firebase SDK를 사용해야 하므로 Android 및 Apple 플랫폼에서만 지원됩니다.

시작하기 전에

C++ 프로젝트에 Firebase를 추가합니다. [https://firebase.google.com/docs/cpp/setup?hl=ko#note_select_platform]
Firebase Console [https://console.firebase.google.com/?hl=ko]에서 인증 섹션을 엽니다.
로그인 방법 탭에서 Microsoft 제공업체를 사용 설정합니다.
해당 제공업체의 개발자 콘솔에서 제공되는 클라이언트 ID 및 클라이언트 보안 비밀번호를 제공업체 구성에 추가합니다.

Microsoft OAuth 클라이언트를 등록하려면 빠른 시작: Azure Active Directory v2.0 엔드포인트를 사용하여 앱 등록 [https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-v2-register-an-app]의 안내를 따릅니다.
이 엔드포인트는 Microsoft 개인 계정과 Azure Active Directory 계정을 사용하는 로그인을 지원합니다.
Azure Active Directory v2.0 자세히 알아보기 [https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-overview]
이러한 제공업체에 앱을 등록할 때 프로젝트의 *.firebaseapp.com 도메인을 앱의 리디렉션 도메인으로 등록해야 합니다.

저장을 클릭합니다.

firebase::auth::Auth 클래스 액세스Auth 클래스는 모든 API 호출에 대한 게이트웨이입니다.
Auth 및 App 헤더 파일을 추가합니다.
#include "firebase/app.h"
#include "firebase/auth.h"

초기화 코드에서 firebase::App [https://firebase.google.com/docs/reference/cpp/class/firebase/app?hl=ko] 클래스를 만듭니다.#if defined(__ANDROID__)
firebase::App* app =
App과 Auth는 일대일 매핑 관계입니다.
Firebase SDK로 로그인 과정 처리하기

Firebase SDK로 로그인 과정을 처리하려면 다음 단계를 따르세요.

Microsoft에 적합한 제공업체 ID로 구성된 FederatedOAuthProviderData의 인스턴스를 생성합니다.
firebase::auth::FederatedOAuthProviderData
provider_data(firebase::auth::MicrosoftAuthProvider::kProviderId);

선택사항: OAuth 요청과 함께 전송하고자 하는 커스텀 OAuth 매개변수를 추가로 지정합니다.

"user@firstadd.onmicrosoft.com";

Microsoft가 지원하는 매개변수 정보는 Microsoft OAuth 문서 [https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-protocols-oauth-code]를 참조하세요.
Firebase에서 요구하는 매개변수는 setCustomParameters()와 함께 전달할 수 없습니다. 이러한 매개변수에는 client_id, response_type, redirect_uri, state, scope, response_mode가 있습니다.

특정 Azure AD 테넌트의 사용자만 애플리케이션에 로그인하도록 허용하려면 Azure AD 테넌트의 도메인 이름 또는 테넌트의 GUID 식별자를 사용하면 됩니다. 이렇게 하려면 커스텀 매개변수 객체의 '테넌트' 필드를 지정합니다.

선택사항: 인증 제공업체에 요청하고자 하는 기본 프로필 범위를 넘는 OAuth 2.0 범위를 추가로 지정합니다.
provider_data.scopes.push_back("mail.read");
provider_data.scopes.push_back("calendars.read");

자세한 내용은 Microsoft 권한 및 동의 문서 [https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent]를 참조하세요.
제공업체 데이터가 구성되었으면 이를 사용하여
FederatedOAuthProvider를 만듭니다.

그러면 애플리케이션이 대기하거나 Future에 콜백을 등록 [https://firebase.google.com/docs/auth/cpp/microsoft-oauth?hl=ko#register_callback_on_future]할 수 있습니다.

OAuth 액세스 토큰을 사용하면 Microsoft Graph API [https://docs.microsoft.com/en-us/graph/overview?toc=./toc.json&view=graph-rest-1.0]를 호출할 수 있습니다.

Firebase 인증에서 지원하는 다른 제공업체와 달리, Microsoft는 사진 URL을 제공하지 않습니다. 대신 Microsoft Graph API [https://docs.microsoft.com/en-us/graph/api/profilephoto-get?view=graph-rest-1.0]를 통해 프로필 사진의 바이너리 데이터를 요청해야 합니다.
위의 예시는 로그인 과정에 중점을 두고 있지만 LinkWithProvider를 사용하여 Microsoft Azure Active Directory 제공업체를 기존 사용자에 연결할 수도 있습니다. 예를 들어 여러 제공업체를 동일한 사용자에 연결하여 그 중 하나로 로그인하도록 허용할 수 있습니다.

그러면 애플리케이션이 대기하거나 Future에 콜백을 등록 [https://firebase.google.com/docs/auth/cpp/microsoft-oauth?hl=ko#register_callback_on_future]할 수 있습니다.

고급: 수동으로 로그인 과정 처리

OAuth 액세스 토큰 기반의 사용자 인증 정보를 사용하여 직접 로그인할 수 있는 다른 Firebase 지원 OAuth 제공업체(예: Google, Facebook, Twitter)와 달리, Firebase 인증 서버에서 Microsoft OAuth 액세스 토큰의 사용자를 인증할 수 없으므로 Firebase 인증은 Microsoft와 같은 제공업체에 대해 동일한 인증 기능을 지원하지 않습니다.
이는 중요한 보안 요구사항이며 한 프로젝트(공격자)에서 확보한 Microsoft OAuth 액세스 토큰을 다른 프로젝트(피해자)에 로그인하는 데 사용할 수 있는 경우 애플리케이션과 웹사이트가 재전송 공격에 노출될 수 있습니다.
대신 Firebase 인증은 Firebase Console에 구성된 OAuth 클라이언트 ID와 보안 비밀을 사용하여 전체 OAuth 과정과 승인 코드 교환을 처리할 수 있는 기능을 제공합니다. 승인 코드는 특정 클라이언트 ID/보안 비밀과 함께 사용되어야 하므로, 한 프로젝트에서 확보한 승인 코드는 다른 프로젝트에 사용할 수 없습니다.

지원되지 않는 환경에서 이러한 제공업체를 사용해야 하는 경우 서드 파티 OAuth 라이브러리 및 Firebase 커스텀 인증 [https://firebase.google.com/docs/auth/admin/create-custom-tokens?hl=ko]을 사용해야 합니다. 서드 파티 라이브러리는 제공업체 인증에 필요하고 Firebase 커스텀 인증은 제공업체의 사용자 인증 정보를 커스텀 토큰으로 교환할 때 필요합니다.

다음 단계

사용자가 처음으로 로그인하면 신규 사용자 계정이 생성되고 사용자가 로그인할 때 사용한 사용자 인증 정보(사용자 이름과 비밀번호, 전화번호 또는 인증 제공업체 정보)에 연결됩니다. 이 신규 계정은 Firebase 프로젝트에 저장되며 사용자의 로그인 방법과 무관하게 프로젝트 내의 모든 앱에서 사용자를 식별하는 데 사용할 수 있습니다.

앱의 firebase::auth::User [https://firebase.google.com/docs/reference/cpp/class/firebase/auth/user?hl=ko] 객체에서 사용자의 기본 프로필 정보를 가져올 수 있습니다.

의견 보내기