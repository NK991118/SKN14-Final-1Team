Source URL: https://firebase.google.com/docs/auth/web/password-auth?hl=ko
Title: JavaScript를 사용하여 비밀번호 기반 계정으로 Firebase에 인증

의견 보내기

JavaScript를 사용하여 비밀번호 기반 계정으로 Firebase에 인증

컬렉션을 사용해 정리하기

내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.

Firebase Authentication을 사용하면 사용자가 자신의 이메일 주소와 비밀번호를 통해 Firebase에 인증하고 앱에서 사용하는 비밀번호 기반 계정을 관리하게 할 수 있습니다.

시작하기 전에

JavaScript 프로젝트에 Firebase를 추가합니다 [https://firebase.google.com/docs/web/setup?hl=ko].
아직 Firebase 프로젝트에 앱을 연결하지 않았다면 Firebase Console [https://console.firebase.google.com/?hl=ko]에서 연결합니다.
다음과 같이 이메일 및 비밀번호 로그인을 사용 설정합니다.
Firebase Console [https://console.firebase.google.com/?hl=ko]에서 인증 섹션을 엽니다.
로그인 방법 탭에서 이메일/비밀번호 로그인 방법을 사용 설정하고 저장을 클릭합니다.

비밀번호 기반 계정 만들기

비밀번호가 있는 신규 사용자 계정을 만들려면 앱의 로그인 페이지에서 다음 절차를 완료합니다.

신규 사용자가 앱의 가입 양식을 사용하여 가입하면 앱에서 요구하는 새 계정 유효성 검사 단계를 완료합니다. 검사 항목에는 신규 계정의 비밀번호를 정확하게 입력했는지, 비밀번호가 복잡성 조건을 충족하는지 등이 있습니다.
다음과 같이 신규 사용자의 이메일 주소와 비밀번호를 createUserWithEmailAndPassword에 전달하여 신규 계정을 생성합니다.

Web
import { getAuth, createUserWithEmailAndPassword } from "firebase/auth";

.then((userCredential) => {
firebase.auth().createUserWithEmailAndPassword(email, password)
.then((userCredential) => {
import { getAuth, signInWithEmailAndPassword } from "firebase/auth";

.then((userCredential) => {
firebase.auth().signInWithEmailAndPassword(email, password)
.then((userCredential) => {
Firebase Authentication 비밀번호 정책은 다음과 같은 비밀번호 요구사항을 지원합니다.

소문자 필요
대문자 필요
숫자 필요
영숫자가 아닌 문자 필요

다음 문자는 영숫자가 아닌 문자 요구사항을 충족합니다.
^ $ * . [ ] { } ( ) ? " ! @ # % & / \ , > < ' : ; | _ ~
비밀번호 최소 길이(6~30자, 기본값은 6)
비밀번호 최대 길이(최대 4,096자)

다음 두 가지 모드로 비밀번호 정책 적용을 사용 설정할 수 있습니다.

필수: 사용자가 정책을 준수하는 비밀번호로 업데이트할 때까지 가입 시도가 실패합니다.
알림: 사용자가 정책을 준수하지 않는 비밀번호를 사용하여 가입할 수 있습니다. 이 모드를 사용할 때는 클라이언트 측에서 사용자의 비밀번호가 정책을 준수하는지 확인하고 정책을 준수하지 않는 경우 사용자에게 비밀번호를 업데이트하라는 메시지를 어떤 방식으로든 표시해야 합니다.

신규 사용자는 항상 해당 정책에 따라 비밀번호를 선택해야 합니다.

활성 사용자가 있는 경우 비밀번호가 정책을 준수하지 않는 사용자의 액세스를 차단하려는 경우가 아니면 로그인 강제 업그레이드를 사용 설정하지 않는 것이 좋습니다. 대신 사용자가 현재 비밀번호로 로그인할 수 있게 해주고 비밀번호에 부족한 요구사항을 알리는 알림 모드를 사용하세요.

클라이언트에서 비밀번호 유효성 검사
import { getAuth, validatePassword } from "firebase/auth";
import { getAuth, signOut } from "firebase/auth";

firebase.auth().signOut().then(() => {